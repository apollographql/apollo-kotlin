name: pr

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

env:
  DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

# Cancel any current or previous job from the same PR
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests-gradle:
    if: "!startsWith(github.head_ref, 'release-')"
    runs-on: macos-14
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 #v4.2.1
        with:
          distribution: 'temurin'
          java-version: 17
      - uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda #v3.4.2
        with:
          gradle-home-cache-cleanup: true
      - name: Build with Gradle
        run: |
          ./gradlew ciTestsGradle
      - name: Collect Diagnostics
        if: always()
        run: ./scripts/collect-diagnostics.main.kts
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 #v4.3.3
        if: always()
        with:
          name: tests-gradle.zip
          path: diagnostics.zip

  tests-no-gradle:
    if: "!startsWith(github.head_ref, 'release-')"
    runs-on: macos-14
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 #v4.2.1
        with:
          distribution: 'temurin'
          java-version: 17
      - uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda #v3.4.2
        with:
          gradle-home-cache-cleanup: true
      - name: Build with Gradle
        run: |
          ./gradlew ciTestsNoGradle --stacktrace
      - name: Collect Diagnostics
        if: always()
        run: ./scripts/collect-diagnostics.main.kts
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 #v4.3.3
        if: always()
        with:
          name: tests-no-gradle.zip
          path: diagnostics.zip

  tests-integration:
    if: "!startsWith(github.head_ref, 'release-')"
    runs-on: macos-14
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 #v4.2.1
        with:
          distribution: 'temurin'
          java-version: 17
      - uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda #v3.4.2
        with:
          gradle-home-cache-cleanup: true
      - name: Build with Gradle
        run: |
          ./gradlew -p tests ciBuild
      - name: Collect Diagnostics
        if: always()
        run: ./scripts/collect-diagnostics.main.kts
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 #v4.3.3
        if: always()
        with:
          name: tests-integration.zip
          path: diagnostics.zip

  ios-tests:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 #v4.2.1
        with:
          distribution: 'temurin'
          java-version: 17
      - run: /Applications/Xcode_16.2.0.app/Contents/Developer/usr/bin/xcodebuild -allowProvisioningUpdates -project tests/com.apollographql.iostest/com.apollographql.iostest.xcodeproj -configuration Debug -scheme com.apollographql.iostest -sdk iphoneos -destination name='iPhone 16' test -test-timeouts-enabled YES
