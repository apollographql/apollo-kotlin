type Query {
  viewer: Viewer!
  home: Home!
  country(code: ID!): Country
}

type Viewer {
  libraries(limit: Int): [Library!]!
}

type Book {
  id: String!
  name: String!
  year: Int!
  author: Author!
}

type Library {
  id: String!
  name: String!
  books(bookIds: [ID!]!): [Book]!
  booksPaginated(bookIds: [ID!]!, first: Int = 10, after: String): BookConnection!
}

type BookConnection {
  edges: [BookEdge!]!
  pageInfo: PageInfo!
}

type BookEdge {
  node: Book!
  cursor: String!
}

type PageInfo {
  hasNextPage: Boolean!
  endCursor: String!
}

type Author {
  id: String!
  name: String!
}

type Home {
  address: String
}

type Country {
  code: ID!
  name: String!
}