def versions = [
    androidPlugin       : '7.2.1',
    androidPluginMin    : '3.4.2',
    androidxSqlite      : '2.1.0',
    antlr4              : '4.9.3',
    apollo              : '3.4.1-SNAPSHOT', // This is used by the gradle integration tests to get the artifacts locally
    cache               : '2.0.2',
    guava               : '28.0-jre',
    javaPoet            : '1.13.0',
    jetbrainsAnnotations: '13.0',
    junit               : '4.13.2',
    kotlinCoroutines    : '1.6.4',
    kotlinPlugin        : System.env.COM_APOLLOGRAPHQL_VERSION_KOTLIN_PLUGIN ?: "1.6.21",
    kotlinxdatetime     : System.env.COM_APOLLOGRAPHQL_VERSION_KOTLINXDATETIME ?: "0.3.1",
    kspGradlePlugin     : System.env.COM_APOLLOGRAPHQL_VERSION_KSP_GRADLE_PLUGIN ?: "1.6.21-1.0.5",
    ktor                : '2.0.2',
    moshi               : '1.12.0',
    moshix              : '0.14.1',
    okHttp              : '4.9.3',
    rxandroid           : '2.0.1',
    rxjava              : '2.2.21',
    rxjava3             : '3.1.3',
    sqldelight          : '1.5.3',
    truth               : '1.1.3',
]

ext.versions = versions

ext.dep = [
    androidMinPlugin: "com.android.tools.build:gradle:$versions.androidPluginMin",
    androidPlugin: "com.android.tools.build:gradle:$versions.androidPlugin",
    androidSupportAnnotations: "com.android.support:support-annotations:28.0.0",
    androidTestRunner: "com.android.support.test:runner:1.0.2",
    androidxAppcompat: "androidx.appcompat:appcompat:1.1.0",
    androidxEspressoIdlingResource: "androidx.test.espresso:espresso-idling-resource:3.4.0",
    androidxRecyclerView: "androidx.recyclerview:recyclerview:1.1.0",
    androidxSqlite: "androidx.sqlite:sqlite:${versions.androidxSqlite}",
    androidxSqliteFramework: "androidx.sqlite:sqlite-framework:${versions.androidxSqlite}",
    androidxStartupRuntime: "androidx.startup:startup-runtime:1.1.1",
    antlrAntlr: "org.antlr:antlr4:$versions.antlr4",
    antlrRuntime: "org.antlr:antlr4-runtime:$versions.antlr4",
    apolloApi: "com.apollographql.apollo3:apollo-api:$versions.apollo",
    apolloPlugin: "com.apollographql.apollo3:apollo-gradle-plugin:$versions.apollo",
    apolloRuntime: "com.apollographql.apollo3:apollo-runtime:$versions.apollo",
    apolloNormalizedCache: "com.apollographql.apollo3:apollo-normalized-cache:$versions.apollo",
    apolloNormalizedCacheSqlite: "com.apollographql.apollo3:apollo-normalized-cache-sqlite:$versions.apollo",
    assertj: "org.assertj:assertj-core:3.21.0",
    atomicfu: "org.jetbrains.kotlinx:atomicfu:0.17.0",
    benManesVersions: "com.github.ben-manes:gradle-versions-plugin:0.33.0",
    binaryCompatibilityValidator: "org.jetbrains.kotlinx:binary-compatibility-validator:0.10.1",
    clikt: "com.github.ajalt.clikt:clikt:3.4.0",
    dokka: "org.jetbrains.dokka:dokka-gradle-plugin:1.7.10",
    dokkaBase: "org.jetbrains.dokka:dokka-base:1.7.10",
    gr8: "com.gradleup:gr8-plugin:0.4",
    /**
     * See https://github.com/gradle/gradle/issues/1835
     * We use the Nokee[redistributed artifacts](https://docs.nokee.dev/manual/gradle-plugin-development.html#sec:gradle-dev-redistributed-gradle-api)
     * to avoid leaking the Kotlin stdlib on the classpath
     */
    // Keep in sync with gradle-wrapper.properties
    gradleApi: "dev.gradleplugins:gradle-api:7.2",
    gradleJapiCmpPlugin: "me.champeau.gradle:japicmp-gradle-plugin:0.2.8",
    gradleMetalavaPlugin: "me.tylerbwong.gradle:metalava-gradle:0.1.5",
    gradlePublishPlugin: "com.gradle.publish:plugin-publish-plugin:0.12.0",
    graphqlKotlin: "com.expediagroup:graphql-kotlin-spring-server:5.3.0",
    guavaJre: "com.google.guava:guava:$versions.guava",
    javaCompileTesting: "com.google.testing.compile:compile-testing:0.19",
    jetbrainsAnnotations: "org.jetbrains:annotations:$versions.jetbrainsAnnotations",
    junit: "junit:junit:$versions.junit",
    kotlinAllOpen: "org.jetbrains.kotlin:kotlin-allopen", // the Kotlin plugin resolves the version
    kotlinCompileTesting: "com.github.tschuchortdev:kotlin-compile-testing:1.4.6",
    kotlinCoroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinCoroutines",
    kotlinCoroutinesReactor: "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$versions.kotlinCoroutines",
    kotlinCoroutinesRx2: "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$versions.kotlinCoroutines",
    kotlinCoroutinesRx3: "org.jetbrains.kotlinx:kotlinx-coroutines-rx3:$versions.kotlinCoroutines",
    kotlinJunit: "org.jetbrains.kotlin:kotlin-test", // the Kotlin plugin resolves the version
    kotlinNodejs: "org.jetbrains.kotlinx:kotlinx-nodejs:0.0.7",
    // The main kotlin version for build-logic and Gradle tests
    kotlinPlugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlinPlugin",
    // See https://youtrack.jetbrains.com/issue/KTIJ-21583/HMPP:-1.6.20-breaks-autocomplete-in-multiplatform-composite-buil#focus=Comments-27-6022244.0-0
    kotlinPluginDuringIdeaSync: "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10",
    // For Gradle integration tests to make sure we stay compatible with 1.5.0
    kotlinPluginMin: "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.0",
    // Used by the Apollo Gradle plugin because the Kotlin plugin is in the buildscript classpath already so there's no need to
    // specify the version
    kotlinPluginWithoutVersion: "org.jetbrains.kotlin:kotlin-gradle-plugin",
    kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect", // the Kotlin plugin resolves the version
    kotlinxdatetime: "org.jetbrains.kotlinx:kotlinx-datetime:$versions.kotlinxdatetime",
    kotlinxserializationjson: "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2",
    kspGradlePlugin: "com.google.devtools.ksp:symbol-processing-gradle-plugin:$versions.kspGradlePlugin",
    kspGradlePluginDuringIdeaSync: "com.google.devtools.ksp:symbol-processing-gradle-plugin:1.6.10-1.0.2",
    ktorClientJs: "io.ktor:ktor-client-js:$versions.ktor",
    // Keep in sync with MIN_GRADLE_VERSION
    minGradleApi: "dev.gradleplugins:gradle-api:5.6",
    moshiKsp: "dev.zacsweers.moshix:moshi-ksp:$versions.moshix",
    moshiMoshi: "com.squareup.moshi:moshi:$versions.moshi",
    moshiSealedCodegen: "dev.zacsweers.moshix:moshi-sealed-codegen:$versions.moshix",
    moshiSealedRuntime: "dev.zacsweers.moshix:moshi-sealed-runtime:$versions.moshix",
    okHttpLogging: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
    okHttpMockWebServer: "com.squareup.okhttp3:mockwebserver:$versions.okHttp",
    okHttpOkHttp: "com.squareup.okhttp3:okhttp:$versions.okHttp",
    okHttpTls: "com.squareup.okhttp3:okhttp-tls:$versions.okHttp",
    okio: "com.squareup.okio:okio", // Version resolved depending on whether HMPP is enabled or not
    okioNodeJs: "com.squareup.okio:okio-nodefilesystem", // Version resolved depending on whether HMPP is enabled or not
    poetJava: "com.squareup:javapoet:$versions.javaPoet",
    poetKotlin: "com.squareup:kotlinpoet:1.12.0",
    rx2: "io.reactivex.rxjava2:rxjava:$versions.rxjava",
    rx3: "io.reactivex.rxjava3:rxjava:$versions.rxjava3",
    sqldelightAndroid: "com.squareup.sqldelight:android-driver:$versions.sqldelight",
    sqldelightJvm: "com.squareup.sqldelight:sqlite-driver:$versions.sqldelight",
    sqldelightNative: "com.squareup.sqldelight:native-driver:$versions.sqldelight",
    sqldelightPlugin: "com.squareup.sqldelight:gradle-plugin:$versions.sqldelight",
    testParameterInjector: "com.google.testparameterinjector:test-parameter-injector:1.4",
    truth: "com.google.truth:truth:$versions.truth",
    turbine: "app.cash.turbine:turbine:0.7.0",
    uuid: "com.benasher44:uuid:0.3.1",
    vespene: "net.mbonnin.vespene:vespene-lib:0.5",
    ]

ext.androidConfig = [
    compileSdkVersion: 31,
    minSdkVersion    : 15,
    targetSdkVersion : 30
]
