def versions = [
    minAndroidPlugin      : '3.4.2',
    androidPlugin         : '4.1.3',
    androidxSqlite        : '2.1.0',
    apollo                : '2.5.10-SNAPSHOT', // This should only be used by apollo-gradle-plugin-incubating:test to get the artifacts locally
    antlr4                : '4.5.3',
    cache                 : '2.0.2',
    compiletesting        : '0.15',
    espressoIdlingResource: '3.2.0',
    guava                 : '28.0-jre',
    javaPoet              : '1.9.0',
    jetbrainsAnnotations  : '13.0',
    junit                 : '4.13.2',
    kotlin                : '1.5.0',
    kotlinCoroutines      : '1.5.0',
    kotlinPoet            : '1.6.0',
    mockito               : '1.9.5',
    moshi                 : '1.12.0',
    mutiny               : '0.18.0',
    okHttp4               : '4.9.0',
    okHttp                : '3.12.11', // Keep this to keep supporting older Android devices
    okio                  : '2.9.0',
    reactor               : '3.4.6',
    rxjava                : '2.2.20',
    rxjava3               : '3.0.7',
    rxandroid             : '2.0.1',
    sqldelight            : '1.5.0',
    testRunner            : '0.5',
    truth                 : '0.30'
]

ext.isCi = "true" == System.getenv('CI')

ext.dep = [
    android               : [
        plugin    : "com.android.tools.build:gradle:$versions.androidPlugin",
        minPlugin : "com.android.tools.build:gradle:$versions.minAndroidPlugin",
        testRunner: "com.android.support.test:runner:$versions.testRunner",
    ],
    androidx              : [
        appcompat             : "androidx.appcompat:appcompat:1.1.0",
        espressoIdlingResource: "androidx.test.espresso:espresso-idling-resource:$versions.espressoIdlingResource",
        recyclerView          : "androidx.recyclerview:recyclerview:1.1.0",
        sqlite                : "androidx.sqlite:sqlite:${versions.androidxSqlite}",
        sqliteFramework       : "androidx.sqlite:sqlite-framework:${versions.androidxSqlite}",
    ],
    antlr                 : [
        antlr  : "org.antlr:antlr4:$versions.antlr4",
        runtime: "org.antlr:antlr4-runtime:$versions.antlr4",
    ],
    apollo                : [
        plugin : "com.apollographql.apollo:apollo-gradle-plugin:$versions.apollo",
        runtime: "com.apollographql.apollo:apollo-runtime:$versions.apollo",
        api    : "com.apollographql.apollo:apollo-api:$versions.apollo",
    ],
    compiletesting        : "com.google.testing.compile:compile-testing:$versions.compiletesting",
    kotlinCompileTesting  : "com.github.tschuchortdev:kotlin-compile-testing:1.2.10",
    cache                 : "com.nytimes.android:cache:$versions.cache",
    gradleJapiCmpPlugin   : "me.champeau.gradle:japicmp-gradle-plugin:0.2.8",
    gradleMetalavaPlugin  : "me.tylerbwong.gradle:metalava-gradle:0.1.6",
    vanniktechPlugin      : "com.vanniktech:gradle-maven-publish-plugin:0.11.1",
    gradlePublishPlugin   : "com.gradle.publish:plugin-publish-plugin:0.12.0",
    guavaJre              : "com.google.guava:guava:$versions.guava",
    jetbrainsAnnotations  : "org.jetbrains:annotations:$versions.jetbrainsAnnotations",
    junit                 : "junit:junit:$versions.junit",
    kotlin                : [
        plugin             : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
        coroutines         : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinCoroutines",
        coroutinesAndroid  : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinCoroutines",
        reflect            : "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    ],
    mockito               : "org.mockito:mockito-all:$versions.mockito",
    moshi                 : [
        adapters     : "com.squareup.moshi:moshi-adapters:$versions.moshi",
        kotlinCodegen: "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi",
        moshi        : "com.squareup.moshi:moshi:$versions.moshi",
    ],
    mutiny                : "io.smallrye.reactive:mutiny:$versions.mutiny",
    okHttp                : [
        mockWebServer: "com.squareup.okhttp3:mockwebserver:$versions.okHttp",
        mockWebServer4: "com.squareup.okhttp3:mockwebserver:$versions.okHttp4",
        okHttp       : "com.squareup.okhttp3:okhttp:$versions.okHttp",
        okHttp4      : "com.squareup.okhttp3:okhttp:$versions.okHttp4",
        logging      : "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
        logging4      : "com.squareup.okhttp3:logging-interceptor:$versions.okHttp4",
    ],
    okio                  : "com.squareup.okio:okio-multiplatform:$versions.okio",
    poet                  : [
        java  : "com.squareup:javapoet:$versions.javaPoet",
        kotlin: "com.squareup:kotlinpoet:$versions.kotlinPoet",
    ],
    reactor               : [
        core   : "io.projectreactor:reactor-core:$versions.reactor",
    ],
    rx                    : [
        java   : "io.reactivex.rxjava2:rxjava:$versions.rxjava",
        java3  : "io.reactivex.rxjava3:rxjava:$versions.rxjava3",
        android: "io.reactivex.rxjava2:rxandroid:$versions.rxandroid",
    ],
    sqldelight            : [
        android: "com.squareup.sqldelight:android-driver:$versions.sqldelight",
        jvm    : "com.squareup.sqldelight:sqlite-driver:$versions.sqldelight",
        native : "com.squareup.sqldelight:native-driver:$versions.sqldelight",
        plugin : "com.squareup.sqldelight:gradle-plugin:$versions.sqldelight"
    ],
    truth                 : "com.google.truth:truth:$versions.truth",
    uuid                  : "com.benasher44:uuid:0.2.0",
    shadow                : "com.github.jengelman.gradle.plugins:shadow:6.1.0",
    graphqlJava: "com.graphql-java:graphql-java:17.3"
]
ext.androidConfig = [
    compileSdkVersion: 28,
    minSdkVersion    : 15,
    targetSdkVersion : 28
]
