[versions]
# The version we use by default to build the libs, in tests and benchmarks
# Can be as high as IJ supports.
# See https://kotlinlang.org/docs/multiplatform-compatibility-guide.html#version-compatibility for compatibility with KGP
android-plugin = "8.11.2"
android-sdkversion-compile = "36"
android-sdkversion-compilebenchmark = "36"
android-sdkversion-min = "16"
android-sdkversion-compose-min = "21"
android-sdkversion-benchmark-min = "24"
android-sdkversion-target = "30"
androidx-sqlite = "2.6.0"
# This is used by the Gradle integration tests to get the artifacts locally
apollo = "5.0.0-alpha.3-SNAPSHOT"
apollo-execution = "0.1.1"
apollo-normalizedcache-incubating = "1.0.0-alpha.6"
# Used by the apollo-tooling project which uses a published version of Apollo
apollo-published = "4.3.3"
#noinspection NewerVersionAvailable requires KGP 2.2
atomicfu = "0.28.0"
compat-patrouille = "0.0.2"
compose = "1.9.1"
guava = "33.5.0-jre"
# This is used at build time only, and it's ok to resolve SNAPSHOTS
gratatouille = "0.1.3-SNAPSHOT-8fc7c233e6942228b019ddc698c61353e1a353c7"
# This is a transitive dependency of apollo-gradle-plugin and therefore cannot use SNAPSHOTs
gratatouille-runtime = "0.1.2"
javaPoet = "1.13.0"
jetbrains-annotations = "26.0.2-1"
junit = "4.13.2"
#noinspection GradleDependency,NewerVersionAvailable compatibility with native consumers
kotlin-plugin = "2.2.20-RC-271"
kotlinx-coroutines = "1.10.2"
kotlinx-datetime = "0.7.1"
#noinspection NewerVersionAvailable requires KGP 2.2
kotlinx-serialization-runtime = "1.8.1"
#noinspection GradleDependency,NewerVersionAvailable compatibility with native consumers
ksp = "2.2.20-RC-2.0.2"
#noinspection NewerVersionAvailable requires KGP 2.2
ktor = "3.2.3"
moshix = "0.14.1"
#noinspection NewerVersionAvailable requires KGP 2.2
okio = "3.15.0"
#noinspection NewerVersionAvailable requires KGP 2.2
okhttp = "4.12.0"
sqldelight = "2.1.0"
truth = "1.4.5"

[libraries]
#noinspection SimilarGradleDependency
android-plugin = { group = "com.android.tools.build", name = "gradle", version.ref = "android-plugin" }
#noinspection AndroidGradlePluginVersion,SimilarGradleDependency,NewerVersionAvailable this is a compileOnly dependency
android-plugin8 = { group = "com.android.tools.build", name = "gradle", version= "8.0.0" }
#noinspection AndroidGradlePluginVersion,SimilarGradleDependency,NewerVersionAvailable this is a compileOnly dependency
android-plugin9 = { group = "com.android.tools.build", name = "gradle", version = "9.0.0-alpha06" }
androidx-test-uiautomator = "androidx.test.uiautomator:uiautomator:2.3.0"
androidx-activity = "androidx.activity:activity-ktx:1.11.0"
androidx-annotation = { group = "androidx.annotation", name = "annotation", version = "1.9.1" }
androidx-core = "androidx.core:core-ktx:1.17.0"
androidx-lint-rules = "androidx.lint:lint-gradle:1.0.0-alpha05"
androidx-lint-gradle-plugin = { module = "com.android.lint:com.android.lint.gradle.plugin", version.ref = "android-plugin" }
androidx-profileinstaller = "androidx.profileinstaller:profileinstaller:1.4.1"
androidx-sqlite = { group = "androidx.sqlite", name = "sqlite", version.ref = "androidx-sqlite" }
androidx-sqlite-framework = { group = "androidx.sqlite", name = "sqlite-framework", version.ref = "androidx-sqlite" }
androidx-startup-runtime = { group = "androidx.startup", name = "startup-runtime", version = "1.2.0" }
apollo-api = { group = "com.apollographql.apollo", name = "apollo-api", version.ref = "apollo" }
apollo-api-java = { group = "com.apollographql.apollo", name = "apollo-api-java", version.ref = "apollo" }
apollo-httpCache = { group = "com.apollographql.apollo", name = "apollo-http-cache", version.ref = "apollo" }
apollo-mockserver = { group = "com.apollographql.mockserver", name = "apollo-mockserver", version = "0.2.0" }
apollo-mpputils = { group = "com.apollographql.apollo", name = "apollo-mpp-utils", version.ref = "apollo" }
apollo-normalizedcache = { group = "com.apollographql.apollo", name = "apollo-normalized-cache", version.ref = "apollo" }
apollo-normalizedcache-sqlite = { group = "com.apollographql.apollo", name = "apollo-normalized-cache-sqlite", version.ref = "apollo" }
apollo-normalizedcache-sqlite-incubating = { group = "com.apollographql.cache", name = "normalized-cache-sqlite", version.ref = "apollo-normalizedcache-incubating" }
apollo-normalizedcache-apollo-compiler-plugin-incubating = { group = "com.apollographql.cache", name = "normalized-cache-apollo-compiler-plugin", version.ref = "apollo-normalizedcache-incubating" }
#noinspection SimilarGradleDependency
apollo-runtime = { group = "com.apollographql.apollo", name = "apollo-runtime", version.ref = "apollo" }
apollo-compiler = { group = "com.apollographql.apollo", name = "apollo-compiler", version.ref = "apollo" }
apollo-ast = { group = "com.apollographql.apollo", name = "apollo-ast", version.ref = "apollo" }
apollo-execution = { group = "com.apollographql.execution", name = "apollo-execution-runtime", version.ref = "apollo-execution" }
apollo-execution-http4k = { group = "com.apollographql.execution", name = "apollo-execution-http4k", version.ref = "apollo-execution" }
apollo-execution-gradle-plugin = { group = "com.apollographql.execution", name = "apollo-execution-gradle-plugin", version.ref = "apollo-execution" }
# Used by the apollo-tooling project which uses a published version of Apollo
#noinspection SimilarGradleDependency
apollo-runtime-published = { group = "com.apollographql.apollo", name = "apollo-runtime", version.ref = "apollo-published" }
apollo-annotations = { group = "com.apollographql.apollo", name = "apollo-annotations", version.ref = "apollo" }
apollo-testingsupport = { group = "com.apollographql.apollo", name = "apollo-testing-support", version.ref = "apollo" }
apollo-testingsupport-internal = { group = "com.apollographql.apollo", name = "apollo-testing-support-internal", version.ref = "apollo" }
apollo-tooling = { group = "com.apollographql.apollo", name = "apollo-tooling", version.ref = "apollo" }
assertj = { group = "org.assertj", name = "assertj-core", version = "3.27.4" }
atomicfu-library = { group = "org.jetbrains.kotlinx", name = "atomicfu", version.ref = "atomicfu" }
atomicfu-plugin = { group = "org.jetbrains.kotlinx", name = "atomicfu-gradle-plugin", version.ref = "atomicfu" }

benmanes-versions = { group = "com.github.ben-manes", name = "gradle-versions-plugin", version = "0.33.0" }
compat-patrouille = { module = "com.gradleup.compat.patrouille:compat-patrouille-gradle-plugin", version.ref = "compat-patrouille" }
compose-runtime = { group = "androidx.compose.runtime", name = "runtime", version.ref = "compose" }
compose-ui = { group = "androidx.compose.ui", name = "ui", version.ref = "compose" }
dokka = "org.jetbrains.dokka:dokka-gradle-plugin:2.0.0"
dgp = "com.gradle:develocity-gradle-plugin:4.2" # // sync with settings.gradle.kts
# Not updating because it fails in apollo-compiler Java tests with
# annotation @org.jetbrains.annotations.Nullable not applicable in this type context
google-testing-compile = { group = "com.google.testing.compile", name = "compile-testing", version = "0.23.0" }
google-testparameterinjector = { group = "com.google.testparameterinjector", name = "test-parameter-injector", version = "1.19" }
gratatouille = { group = "com.gradleup.gratatouille", name = "gratatouille-gradle-plugin", version.ref = "gratatouille" }
gratatouille-wiring-runtime = { group = "com.gradleup.gratatouille", name = "gratatouille-wiring-runtime", version.ref = "gratatouille-runtime" }
gratatouille-tasks-runtime = { group = "com.gradleup.gratatouille", name = "gratatouille-tasks-runtime", version.ref = "gratatouille-runtime" }
jsr305 = "com.google.code.findbugs:jsr305:3.0.2"

#
# See https://github.com/gradle/gradle/issues/1835
# We use the Nokee[redistributed artifacts](https://docs.nokee.dev/manual/gradle-plugin-development.html#sec:gradle-dev-redistributed-gradle-api)
# to avoid leaking the Kotlin stdlib on the classpath
#
# Keep in sync with MIN_GRADLE_VERSION
#noinspection NewerVersionAvailable this is a compileOnly dependency
gradle-api-min = { group = "dev.gradleplugins", name = "gradle-api", version = "8.0" }
guava-jre = { group = "com.google.guava", name = "guava", version.ref = "guava" }
http4k-bom = "org.http4k:http4k-bom:6.18.0.1"
http4k-core = { module = "org.http4k:http4k-core" }
http4k-server-jetty = { module = "org.http4k:http4k-server-jetty" }
jetbrains-annotations = { group = "org.jetbrains", name = "annotations", version.ref = "jetbrains-annotations" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
kotlin-allopen = { group = "org.jetbrains.kotlin", name = "kotlin-allopen", version.ref = "kotlin-plugin" }
kotlin-compiletesting = { group = "dev.zacsweers.kctfork", name = "core", version = "0.9.0" }
graphql-java = "com.graphql-java:graphql-java:24.2"
# The main kotlin version for build-logic and Gradle tests
kotlin-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin-plugin" }
kotlin-plugin-annotations = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin-annotations", version.ref = "kotlin-plugin" }
kotlin-plugin-compose = { group = "org.jetbrains.kotlin", name = "compose-compiler-gradle-plugin", version.ref = "kotlin-plugin" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect" } # use same version as apiVersion
kotlin-stdlib-common = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-common" } # use same version as apiVersion
kotlin-stdlib-jvm = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib" } # use same version as apiVersion
kotlin-test-junit = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit" } # use same version as apiVersion
# Kotlin/JS has no apiVersion:
# The Kotlin/JS standard library has an older version (2.0.20-release-360) than the compiler (2.1.0). Such a configuration is not supported.
# Please, make sure that the standard library has the version in the range [2.1.0 .. 2.1.255]. Adjust your project's settings if necessary.
kotlin-stdlib-js = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-js", version.ref = "kotlin-plugin" }
kotlin-stdlib-wasm-js = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-wasm-js", version.ref = "kotlin-plugin" }
kotlinx-benchmark-runtime = "org.jetbrains.kotlinx:kotlinx-benchmark-runtime:0.4.14"
kotlinx-benchmark = "org.jetbrains.kotlinx:kotlinx-benchmark-plugin:0.4.12"
kotlinx-browser = "org.jetbrains.kotlinx:kotlinx-browser:0.3"
androidx-benchmark-macro = "androidx.benchmark:benchmark-macro-junit4:1.4.1"
kotlinx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-serialization", version.ref = "kotlin-plugin" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization-runtime" }
kotlinx-binarycompatibilityvalidator = { group = "org.jetbrains.kotlinx", name = "binary-compatibility-validator", version = "0.18.1" }
ksp = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }
ktor-client-curl = { group = "io.ktor", name = "ktor-client-curl", version.ref = "ktor" }
ktor-client-js = { group = "io.ktor", name = "ktor-client-js", version.ref = "ktor" }
ktor-server-cors = { group = "io.ktor", name = "ktor-server-cors", version.ref = "ktor" }
ktor-server-netty = { group = "io.ktor", name = "ktor-server-netty", version.ref = "ktor" }
ktor-server-websockets = { group = "io.ktor", name = "ktor-server-websockets", version.ref = "ktor" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
okhttp-mockwebserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "okhttp" }
okhttp-tls = { group = "com.squareup.okhttp3", name = "okhttp-tls", version.ref = "okhttp" }
moshi = { group = "com.squareup.moshi", name = "moshi", version = "1.15.2" }
okio = { group = "com.squareup.okio", name = "okio", version.ref = "okio" }
okio-nodefilesystem = { group = "com.squareup.okio", name = "okio-nodefilesystem", version.ref = "okio" }
poet-java = { group = "com.squareup", name = "javapoet", version.ref = "javaPoet" }
# Depend on the -jvm artifact directly to workaround https://github.com/gradle/gradle/issues/31158
poet-kotlin = "com.squareup:kotlinpoet-jvm:2.2.0"
sqldelight-android = { group = "app.cash.sqldelight", name = "android-driver", version.ref = "sqldelight" }
sqldelight-jvm = { group = "app.cash.sqldelight", name = "sqlite-driver", version.ref = "sqldelight" }
sqldelight-native = { group = "app.cash.sqldelight", name = "native-driver", version.ref = "sqldelight" }
sqldelight-plugin = { group = "app.cash.sqldelight", name = "gradle-plugin", version.ref = "sqldelight" }
sqldelight-runtime = { group = "app.cash.sqldelight", name = "runtime", version.ref = "sqldelight" }
benchmark-gradle-plugin = "androidx.benchmark:benchmark-gradle-plugin:1.4.1"
asm = "org.ow2.asm:asm-commons:9.8"
moshix-ksp = { group = "dev.zacsweers.moshix", name = "moshi-ksp", version.ref = "moshix" }
benchmark-junit4 = "androidx.benchmark:benchmark-junit4:1.4.1"
androidx-test-core = "androidx.test:core:1.7.0"
androidx-test-rules = "androidx.test:rules:1.7.0"
androidx-test-runner = "androidx.test:runner:1.7.0"
truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }
turbine = { group = "app.cash.turbine", name = "turbine", version = "1.2.1" }
uuid = { group = "com.benasher44", name = "uuid", version = "0.8.4" }
librarian = "com.gradleup.librarian:librarian-gradle-plugin:0.1.1-SNAPSHOT-a304cd71c6b81d4cb3bba72e85b70fdb74eae70c"
nmcp = "com.gradleup.nmcp:nmcp:1.1.0"
slf4j-simple = "org.slf4j:slf4j-simple:2.0.17"
slf4j-nop = "org.slf4j:slf4j-nop:2.0.17"
licensee = "app.cash.licensee:licensee-gradle-plugin:1.13.0"
#compileOnly dependency for the Apollo Gradle Plugin
#noinspection SimilarGradleDependency,NewerVersionAvailable
kgp-compile = "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.0"

[plugins]
#noinspection SimilarGradleDependency
apollo = { id = "com.apollographql.apollo", version.ref = "apollo" }
#noinspection SimilarGradleDependency
apollo-published = { id = "com.apollographql.apollo", version.ref = "apollo-published" }
compat-patrouille = { id = "com.gradleup.compat.patrouille", version.ref = "compat-patrouille" }
# KGP that does not need to care about the native consumers (build-logic, benchmarks, etc...)
#noinspection SimilarGradleDependency
kotlin-jvm-latest = { id = "org.jetbrains.kotlin.jvm", version = "2.2.20" }
#noinspection SimilarGradleDependency
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-plugin" }
kotlin-sam = { id = "org.jetbrains.kotlin.plugin.sam.with.receiver", version.ref = "kotlin-plugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin-plugin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin-plugin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin-plugin" }
android-application = { id = "com.android.application", version.ref = "android-plugin" }
android-library = { id = "com.android.library", version.ref = "android-plugin" }
android-kmp-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "android-plugin"}
