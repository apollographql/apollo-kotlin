//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.unique_type_name.selections;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompiledFragment;
import com.apollographql.apollo3.api.CompiledGraphQL;
import com.apollographql.apollo3.api.CompiledListType;
import com.apollographql.apollo3.api.CompiledNotNullType;
import com.apollographql.apollo3.api.CompiledSelection;
import com.example.unique_type_name.fragment.selections.HeroDetailsSelections;
import com.example.unique_type_name.type.Character;
import com.example.unique_type_name.type.Episode;
import java.util.Arrays;
import java.util.List;

public class HeroDetailQuerySelections {
  private static List<CompiledSelection> friends = Arrays.asList(
    CompiledField.builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build()
  );

  private static List<CompiledSelection> friends2 = Arrays.asList(
    CompiledField.builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledFragment.builder(Arrays.asList("Droid", "Human")).selections(HeroDetailsSelections.root).build()
  );

  private static List<CompiledSelection> friends1 = Arrays.asList(
    CompiledField.builder("appearsIn", new CompiledNotNullType(new CompiledListType(Episode.type))).build(),
    CompiledField.builder("friends", new CompiledListType(Character.type)).selections(friends2).build()
  );

  private static List<CompiledSelection> onHuman = Arrays.asList(
    CompiledField.builder("height", CompiledGraphQL.CompiledFloatType).build(),
    CompiledField.builder("friends", new CompiledListType(Character.type)).selections(friends1).build()
  );

  private static List<CompiledSelection> heroDetailQuery = Arrays.asList(
    CompiledField.builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("friends", new CompiledListType(Character.type)).selections(friends).build(),
    CompiledFragment.builder(Arrays.asList("Human")).selections(onHuman).build()
  );

  public static List<CompiledSelection> root = Arrays.asList(
    CompiledField.builder("heroDetailQuery", Character.type).selections(heroDetailQuery).build()
  );
}
