//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.unique_type_name

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.unique_type_name.adapter.HeroDetailQuery_ResponseAdapter
import com.example.unique_type_name.fragment.HeroDetails
import com.example.unique_type_name.selections.HeroDetailQuerySelections
import com.example.unique_type_name.type.Episode
import kotlin.Any
import kotlin.Boolean
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class HeroDetailQuery() : Query<HeroDetailQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> {
    return HeroDetailQuery_ResponseAdapter.Data.obj()
  }

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.unique_type_name.type.Query.type
  )
  .selections(selections = HeroDetailQuerySelections.root)
  .build()

  public data class Data(
    public val heroDetailQuery: HeroDetailQuery?
  ) : Query.Data

  public data class HeroDetailQuery(
    public val __typename: String,
    /**
     * The name of the character
     */
    public val name: String,
    /**
     * The friends of the character, or an empty list if they have none
     */
    public val friends: List<Friend2?>?,
    /**
     * Synthetic field for inline fragment on Human
     */
    public val asHuman: AsHuman?
  ) {
    public fun friendsFilterNotNull(): List<Friend2>? = friends?.filterNotNull()
  }

  public data class Friend2(
    public val __typename: String,
    /**
     * The name of the character
     */
    public val name: String
  )

  public data class AsHuman(
    public val __typename: String,
    /**
     * The name of the character
     */
    public val name: String,
    /**
     * Merged field with multiple descriptions. See parentTypes: 'Character, Human' for more
     * information
     */
    public val friends: List<Friend?>?,
    /**
     * Height in the preferred unit, default is meters
     */
    public val height: Double?
  ) {
    public fun friendsFilterNotNull(): List<Friend>? = friends?.filterNotNull()
  }

  public data class Friend(
    public val __typename: String,
    /**
     * The name of the character
     */
    public val name: String,
    /**
     * The movies this character appears in
     */
    public val appearsIn: List<Episode?>,
    /**
     * The friends of the character, or an empty list if they have none
     */
    public val friends: List<Friend1?>?
  ) {
    public fun appearsInFilterNotNull(): List<Episode> = appearsIn.filterNotNull()

    public fun friendsFilterNotNull(): List<Friend1>? = friends?.filterNotNull()
  }

  public data class Friend1(
    public val __typename: String,
    /**
     * Synthetic field for grouping fragments
     */
    public val fragments: Fragments
  ) {
    public data class Fragments(
      /**
       * Synthetic field for 'HeroDetails'
       */
      public val heroDetails: HeroDetails
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "471568e6a9a0c74b3824d5c8154bde4c6e5d57dfb897e1332bf34155df2bf5a3"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query HeroDetailQuery {
     *   heroDetailQuery {
     *     __typename
     *     name
     *     friends {
     *       __typename
     *       name
     *     }
     *     ... on Human {
     *       height
     *       friends {
     *         __typename
     *         appearsIn
     *         friends {
     *           __typename
     *           ...HeroDetails
     *         }
     *       }
     *     }
     *   }
     * }
     *
     * fragment HeroDetails on Character {
     *   __typename
     *   name
     *   friendsConnection {
     *     totalCount
     *     edges {
     *       node {
     *         __typename
     *         name
     *       }
     *     }
     *   }
     * }
     */
    public const val OPERATION_DOCUMENT: String =
        "query HeroDetailQuery { heroDetailQuery { __typename name friends { __typename name } ... on Human { height friends { __typename appearsIn friends { __typename ...HeroDetails } } } } }  fragment HeroDetails on Character { __typename name friendsConnection { totalCount edges { node { __typename name } } } }"

    public const val OPERATION_NAME: String = "HeroDetailQuery"
  }
}
