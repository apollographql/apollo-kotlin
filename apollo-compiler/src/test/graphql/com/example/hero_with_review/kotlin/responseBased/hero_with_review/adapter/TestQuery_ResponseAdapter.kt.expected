//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.hero_with_review.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.hero_with_review.TestQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : Adapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("createReview")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Data {
      var createReview: TestQuery.Data.CreateReview? = null

      while (true) {
        val __nameIdx = reader.selectName(RESPONSE_NAMES)
        if (__nameIdx != -1) customScalarAdapters.adapterContext.currentPath.push(RESPONSE_NAMES[__nameIdx])
        when (__nameIdx) {
          0 -> createReview = CreateReview.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
        customScalarAdapters.adapterContext.currentPath.pop()
      }

      return TestQuery.Data(
        createReview = createReview
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Data
    ): Unit {
      writer.name("createReview")
      CreateReview.obj().nullable().toJson(writer, customScalarAdapters, value.createReview)
    }

    private object CreateReview : Adapter<TestQuery.Data.CreateReview> {
      public val RESPONSE_NAMES: List<String> = listOf("stars", "commentary")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          TestQuery.Data.CreateReview {
        var stars: Int? = null
        var commentary: String? = null

        while (true) {
          val __nameIdx = reader.selectName(RESPONSE_NAMES)
          if (__nameIdx != -1) customScalarAdapters.adapterContext.currentPath.push(RESPONSE_NAMES[__nameIdx])
          when (__nameIdx) {
            0 -> stars = IntAdapter.fromJson(reader, customScalarAdapters)
            1 -> commentary = NullableStringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
          customScalarAdapters.adapterContext.currentPath.pop()
        }

        return TestQuery.Data.CreateReview(
          stars = stars!!,
          commentary = commentary
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: TestQuery.Data.CreateReview
      ): Unit {
        writer.name("stars")
        IntAdapter.toJson(writer, customScalarAdapters, value.stars)

        writer.name("commentary")
        NullableStringAdapter.toJson(writer, customScalarAdapters, value.commentary)
      }
    }
  }
}
