//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_merge_fields.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledStringType
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.example.inline_fragment_merge_fields.type.Character
import com.example.inline_fragment_merge_fields.type.FriendsConnection
import com.example.inline_fragment_merge_fields.type.FriendsEdge
import com.example.inline_fragment_merge_fields.type.URL
import kotlin.collections.List

public object TestQuerySelections {
  private val node: List<CompiledSelection> = listOf(
        CompiledField.builder(
          name = "name",
          type = CompiledStringType.notNull()
        ).build()
      )

  private val edges: List<CompiledSelection> = listOf(
        CompiledField.builder(
          name = "node",
          type = Character.type
        ).selections(node)
        .build()
      )

  private val friendsConnection: List<CompiledSelection> = listOf(
        CompiledField.builder(
          name = "edges",
          type = FriendsEdge.type.list()
        ).selections(edges)
        .build()
      )

  private val node1: List<CompiledSelection> = listOf(
        CompiledField.builder(
          name = "name",
          type = CompiledStringType.notNull()
        ).build()
      )

  private val edges1: List<CompiledSelection> = listOf(
        CompiledField.builder(
          name = "node",
          type = Character.type
        ).selections(node1)
        .build()
      )

  private val friendsConnection1: List<CompiledSelection> = listOf(
        CompiledField.builder(
          name = "edges",
          type = FriendsEdge.type.list()
        ).selections(edges1)
        .build()
      )

  private val onCharacter: List<CompiledSelection> = listOf(
        CompiledField.builder(
          name = "name",
          type = CompiledStringType.notNull()
        ).build(),
        CompiledField.builder(
          name = "profileLink",
          type = URL.type.notNull()
        ).build(),
        CompiledField.builder(
          name = "friendsConnection",
          type = FriendsConnection.type.notNull()
        ).selections(friendsConnection1)
        .build()
      )

  private val hero: List<CompiledSelection> = listOf(
        CompiledField.builder(
          name = "__typename",
          type = CompiledStringType.notNull()
        ).build(),
        CompiledField.builder(
          name = "name",
          type = CompiledStringType.notNull()
        ).build(),
        CompiledField.builder(
          name = "friendsConnection",
          type = FriendsConnection.type.notNull()
        ).selections(friendsConnection)
        .build(),
        CompiledFragment.builder(
          possibleTypes = listOf("Droid", "Human")
        ).selections(onCharacter)
        .build()
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField.builder(
          name = "hero",
          type = Character.type
        ).selections(hero)
        .build()
      )
}
