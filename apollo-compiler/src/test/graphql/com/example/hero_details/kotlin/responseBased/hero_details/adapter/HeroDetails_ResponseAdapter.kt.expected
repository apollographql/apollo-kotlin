//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.hero_details.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.hero_details.HeroDetails
import com.example.hero_details.type.adapter.hero_type_ResponseAdapter
import com.example.hero_details.type.hero_type
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object HeroDetails_ResponseAdapter {
  public object Data : Adapter<HeroDetails.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HeroDetails.Data {
      var hero: HeroDetails.Data.Hero? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> hero = Hero.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HeroDetails.Data(
        hero = hero
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HeroDetails.Data
    ): Unit {
      writer.name("hero")
      Hero.obj().nullable().toJson(writer, customScalarAdapters, value.hero)
    }

    private object Hero : Adapter<HeroDetails.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("type", "name", "friendsConnection")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          HeroDetails.Data.Hero {
        var type: hero_type? = null
        var name: String? = null
        var friendsConnection: HeroDetails.Data.Hero.FriendsConnection? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> type = hero_type_ResponseAdapter.fromJson(reader, customScalarAdapters)
            1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
            2 -> friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return HeroDetails.Data.Hero(
          type = type!!,
          name = name!!,
          friendsConnection = friendsConnection!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: HeroDetails.Data.Hero
      ): Unit {
        writer.name("type")
        hero_type_ResponseAdapter.toJson(writer, customScalarAdapters, value.type)

        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)

        writer.name("friendsConnection")
        FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
      }

      private object FriendsConnection : Adapter<HeroDetails.Data.Hero.FriendsConnection> {
        public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

        public override fun fromJson(reader: JsonReader,
            customScalarAdapters: CustomScalarAdapters): HeroDetails.Data.Hero.FriendsConnection {
          var totalCount: Int? = null
          var edges: List<HeroDetails.Data.Hero.FriendsConnection.Edge?>? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
              1 -> edges = Edge.obj().nullable().list().nullable().fromJson(reader,
                  customScalarAdapters)
              else -> break
            }
          }

          return HeroDetails.Data.Hero.FriendsConnection(
            totalCount = totalCount,
            edges = edges
          )
        }

        public override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: HeroDetails.Data.Hero.FriendsConnection
        ): Unit {
          writer.name("totalCount")
          NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

          writer.name("edges")
          Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
        }

        private object Edge : Adapter<HeroDetails.Data.Hero.FriendsConnection.Edge> {
          public val RESPONSE_NAMES: List<String> = listOf("node")

          public override fun fromJson(reader: JsonReader,
              customScalarAdapters: CustomScalarAdapters):
              HeroDetails.Data.Hero.FriendsConnection.Edge {
            var node: HeroDetails.Data.Hero.FriendsConnection.Edge.Node? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return HeroDetails.Data.Hero.FriendsConnection.Edge(
              node = node
            )
          }

          public override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            `value`: HeroDetails.Data.Hero.FriendsConnection.Edge
          ): Unit {
            writer.name("node")
            Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
          }

          private object Node : Adapter<HeroDetails.Data.Hero.FriendsConnection.Edge.Node> {
            public val RESPONSE_NAMES: List<String> = listOf("name")

            public override fun fromJson(reader: JsonReader,
                customScalarAdapters: CustomScalarAdapters):
                HeroDetails.Data.Hero.FriendsConnection.Edge.Node {
              var name: String? = null

              while(true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
                  else -> break
                }
              }

              return HeroDetails.Data.Hero.FriendsConnection.Edge.Node(
                name = name!!
              )
            }

            public override fun toJson(
              writer: JsonWriter,
              customScalarAdapters: CustomScalarAdapters,
              `value`: HeroDetails.Data.Hero.FriendsConnection.Edge.Node
            ): Unit {
              writer.name("name")
              StringAdapter.toJson(writer, customScalarAdapters, value.name)
            }
          }
        }
      }
    }
  }
}
