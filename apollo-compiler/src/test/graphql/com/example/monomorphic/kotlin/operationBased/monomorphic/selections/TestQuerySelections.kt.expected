//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.monomorphic.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.notNull
import com.example.monomorphic.type.Cat
import com.example.monomorphic.type.GraphQLString
import kotlin.collections.List

public object TestQuerySelections {
  private val _onAnimal: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "species",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val _onNode: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Animal",
          possibleTypes = listOf("Cat", "Dog")
        ).selections(_onAnimal)
        .build()
      )

  private val _cat: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Node",
          possibleTypes = listOf("Cat", "Dog")
        ).selections(_onNode)
        .build()
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "cat",
          type = Cat.type.notNull()
        ).selections(_cat)
        .build()
      )
}
