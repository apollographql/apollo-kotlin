//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fieldset_with_multiple_super.selections;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompiledFragment;
import com.apollographql.apollo3.api.CompiledGraphQL;
import com.apollographql.apollo3.api.CompiledNotNullType;
import com.apollographql.apollo3.api.CompiledSelection;
import com.example.fieldset_with_multiple_super.type.C;
import java.util.Arrays;
import java.util.List;

public class TestQuerySelections {
  private static List<CompiledSelection> onB = Arrays.asList(
    CompiledField.builder("fieldB1", CompiledGraphQL.CompiledStringType).build()
  );

  private static List<CompiledSelection> onA = Arrays.asList(
    CompiledField.builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("fieldA1", CompiledGraphQL.CompiledStringType).build(),
    CompiledFragment.builder(Arrays.asList("ABC", "BC")).selections(onB).build()
  );

  private static List<CompiledSelection> onA1 = Arrays.asList(
    CompiledField.builder("fieldA2", CompiledGraphQL.CompiledStringType).build()
  );

  private static List<CompiledSelection> onB1 = Arrays.asList(
    CompiledField.builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("fieldB2", CompiledGraphQL.CompiledStringType).build(),
    CompiledFragment.builder(Arrays.asList("ABC", "AC")).selections(onA1).build()
  );

  private static List<CompiledSelection> c = Arrays.asList(
    CompiledField.builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledFragment.builder(Arrays.asList("ABC", "AC")).selections(onA).build(),
    CompiledFragment.builder(Arrays.asList("ABC", "BC")).selections(onB1).build()
  );

  public static List<CompiledSelection> root = Arrays.asList(
    CompiledField.builder("c", C.type).selections(c).build()
  );
}
