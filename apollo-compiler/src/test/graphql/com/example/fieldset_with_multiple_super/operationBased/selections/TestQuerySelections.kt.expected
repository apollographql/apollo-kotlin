//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fieldset_with_multiple_super.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledStringType
import com.apollographql.apollo3.api.notNull
import com.example.fieldset_with_multiple_super.type.Types.C
import kotlin.collections.List

public object TestQuerySelections {
  private val onB: List<CompiledSelection> = listOf(
        CompiledField(
          name = "fieldB1",
          type = CompiledStringType
        )
      )

  private val onA: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledField(
          name = "fieldA1",
          type = CompiledStringType
        ),
        CompiledFragment(
          possibleTypes = listOf("ABC", "BC"),
          selections = onB
        )
      )

  private val onA1: List<CompiledSelection> = listOf(
        CompiledField(
          name = "fieldA2",
          type = CompiledStringType
        )
      )

  private val onB1: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledField(
          name = "fieldB2",
          type = CompiledStringType
        ),
        CompiledFragment(
          possibleTypes = listOf("ABC", "AC"),
          selections = onA1
        )
      )

  private val c: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("ABC", "AC"),
          selections = onA
        ),
        CompiledFragment(
          possibleTypes = listOf("ABC", "BC"),
          selections = onB1
        )
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField(
          name = "c",
          type = C,
          selections = c
        )
      )
}
