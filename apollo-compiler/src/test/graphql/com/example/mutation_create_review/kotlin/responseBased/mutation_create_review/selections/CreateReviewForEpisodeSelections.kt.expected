//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.mutation_create_review.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.example.mutation_create_review.type.Character
import com.example.mutation_create_review.type.Date
import com.example.mutation_create_review.type.Episode
import com.example.mutation_create_review.type.GraphQLInt
import com.example.mutation_create_review.type.GraphQLString
import com.example.mutation_create_review.type.Review
import kotlin.collections.List

internal object CreateReviewForEpisodeSelections {
  private val listOfListOfObject: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val createReview: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "stars",
          type = GraphQLInt.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "commentary",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "listOfListOfString",
          type = GraphQLString.type.notNull().list().notNull().list()
        ).build(),
        CompiledField.Builder(
          name = "listOfListOfEnum",
          type = Episode.type.notNull().list().notNull().list()
        ).build(),
        CompiledField.Builder(
          name = "listOfListOfCustom",
          type = Date.type.notNull().list().notNull().list()
        ).build(),
        CompiledField.Builder(
          name = "listOfListOfObject",
          type = Character.type.notNull().list().notNull().list()
        ).selections(listOfListOfObject)
        .build()
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "createReview",
          type = Review.type
        ).arguments(listOf(
          CompiledArgument("episode", CompiledVariable("ep")),
          CompiledArgument("review", CompiledVariable("review"))
        ))
        .selections(createReview)
        .build()
      )
}
