//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.custom_scalar_type

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.custom_scalar_type.adapter.TestQuery_ResponseAdapter
import com.example.custom_scalar_type.selections.TestQuerySelections
import java.lang.Long
import java.util.Date
import kotlin.Any
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class TestQuery() : Query<TestQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.custom_scalar_type.type.Query.type
  )
  .selections(selections = TestQuerySelections.root)
  .build()

  public data class Data(
    public val hero: Hero?
  ) : Query.Data {
    public data class Hero(
      /**
       * The ID of the character
       */
      public val id: Long,
      /**
       * The name of the character
       */
      public val name: java.lang.String,
      /**
       * The date character was born.
       */
      public val birthDate: Date,
      /**
       * The dates of appearances
       */
      public val appearanceDates: List<Date>,
      /**
       * The date character was born.
       */
      public val fieldWithUnsupportedType: Any,
      /**
       * Profile link
       */
      public val profileLink: java.lang.String,
      /**
       * Links
       */
      public val links: List<java.lang.String>
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "1d5498a23394700442413af8ec1b8edce1445ce533afdb2e9d5ec9c0ed40a9e3"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   hero {
     *     id
     *     name
     *     birthDate
     *     appearanceDates
     *     fieldWithUnsupportedType
     *     profileLink
     *     links
     *   }
     * }
     */
    public const val OPERATION_DOCUMENT: String =
        "query TestQuery { hero { id name birthDate appearanceDates fieldWithUnsupportedType profileLink links } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
