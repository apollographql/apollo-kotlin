//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.two_heroes_with_friends.selections;

import com.apollographql.apollo3.api.CompiledArgument;
import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompiledGraphQL;
import com.apollographql.apollo3.api.CompiledListType;
import com.apollographql.apollo3.api.CompiledNotNullType;
import com.apollographql.apollo3.api.CompiledSelection;
import com.example.two_heroes_with_friends.type.Character;
import com.example.two_heroes_with_friends.type.FriendsConnection;
import com.example.two_heroes_with_friends.type.FriendsEdge;
import java.util.Arrays;
import java.util.List;

public class TestQuerySelections {
  private static List<CompiledSelection> node = Arrays.asList(
    CompiledField.builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build()
  );

  private static List<CompiledSelection> edges = Arrays.asList(
    CompiledField.builder("node", Character.type).selections(node).build()
  );

  private static List<CompiledSelection> friendsConnection = Arrays.asList(
    CompiledField.builder("totalCount", CompiledGraphQL.CompiledIntType).build(),
    CompiledField.builder("edges", new CompiledListType(FriendsEdge.type)).selections(edges).build()
  );

  private static List<CompiledSelection> r2 = Arrays.asList(
    CompiledField.builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("friendsConnection", new CompiledNotNullType(FriendsConnection.type)).selections(friendsConnection).build()
  );

  private static List<CompiledSelection> node1 = Arrays.asList(
    CompiledField.builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build()
  );

  private static List<CompiledSelection> edges1 = Arrays.asList(
    CompiledField.builder("node", Character.type).selections(node1).build()
  );

  private static List<CompiledSelection> friendsConnection1 = Arrays.asList(
    CompiledField.builder("totalCount", CompiledGraphQL.CompiledIntType).build(),
    CompiledField.builder("edges", new CompiledListType(FriendsEdge.type)).selections(edges1).build()
  );

  private static List<CompiledSelection> luke = Arrays.asList(
    CompiledField.builder("id", new CompiledNotNullType(CompiledGraphQL.CompiledIDType)).build(),
    CompiledField.builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("friendsConnection", new CompiledNotNullType(FriendsConnection.type)).selections(friendsConnection1).build()
  );

  public static List<CompiledSelection> root = Arrays.asList(
    CompiledField.builder("hero", Character.type).alias("r2").selections(r2).build(),
    CompiledField.builder("hero", Character.type).alias("luke").arguments(Arrays.asList(new CompiledArgument("episode", "EMPIRE", false))).selections(luke).build()
  );
}
