//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_field_with_multiple_fieldsets.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledStringType
import com.apollographql.apollo3.api.notNull
import com.example.nested_field_with_multiple_fieldsets.type.Types
import com.example.nested_field_with_multiple_fieldsets.type.Types.Iface1
import com.example.nested_field_with_multiple_fieldsets.type.Types.Iface2
import kotlin.collections.List

public object TestQuerySelections {
  private val onIface2: List<CompiledSelection> = listOf(
        CompiledField(
          name = "scalar1",
          type = CompiledStringType
        )
      )

  private val onImpl2: List<CompiledSelection> = listOf(
        CompiledField(
          name = "scalar2",
          type = CompiledStringType
        )
      )

  private val iface2: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("Impl2"),
          selections = onIface2
        ),
        CompiledFragment(
          possibleTypes = listOf("Impl2"),
          selections = onImpl2
        )
      )

  private val onIface1: List<CompiledSelection> = listOf(
        CompiledField(
          name = "iface2",
          type = Iface2,
          selections = iface2
        )
      )

  private val onIface21: List<CompiledSelection> = listOf(
        CompiledField(
          name = "scalar3",
          type = CompiledStringType
        )
      )

  private val onImpl21: List<CompiledSelection> = listOf(
        CompiledField(
          name = "scalar4",
          type = CompiledStringType
        )
      )

  private val iface21: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("Impl2"),
          selections = onIface21
        ),
        CompiledFragment(
          possibleTypes = listOf("Impl2"),
          selections = onImpl21
        )
      )

  private val onImpl1: List<CompiledSelection> = listOf(
        CompiledField(
          name = "iface2",
          type = Iface2,
          selections = iface21
        )
      )

  private val iface1: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("Impl1"),
          selections = onIface1
        ),
        CompiledFragment(
          possibleTypes = listOf("Impl1"),
          selections = onImpl1
        )
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField(
          name = "iface1",
          type = Iface1,
          selections = iface1
        )
      )
}
