//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_field_with_multiple_fieldsets.type

import com.apollographql.apollo3.api.CompiledNamedType
import com.apollographql.apollo3.api.CompiledType
import com.apollographql.apollo3.api.InterfaceType
import com.apollographql.apollo3.api.ObjectType
import kotlin.collections.List

/**
 * Auto generated constants representing the custom scalars, objects, interfaces and unions in the
 * schema. Input objects are left out because they are generated separately
 */
public object Types {
  public val Iface1: InterfaceType = InterfaceType(name = "Iface1")

  public val Iface2: InterfaceType = InterfaceType(name = "Iface2")

  public val Query: ObjectType = ObjectType(name = "Query")

  public val Impl1: ObjectType = ObjectType(name = "Impl1", implements = listOf(Iface1))

  public val Impl2: ObjectType = ObjectType(name = "Impl2", implements = listOf(Iface2))

  public val all: List<CompiledType> = listOf(
        Iface1, Iface2, Query, Impl1, Impl2)


  public fun possibleTypes(type: CompiledNamedType): List<ObjectType> =
      com.apollographql.apollo3.api.possibleTypes(all, type)
}
