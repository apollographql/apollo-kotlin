//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_with_include_directive.selections;

import com.apollographql.apollo3.api.CompiledCondition;
import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompiledFragment;
import com.apollographql.apollo3.api.CompiledGraphQL;
import com.apollographql.apollo3.api.CompiledNotNullType;
import com.apollographql.apollo3.api.CompiledSelection;
import com.example.inline_fragment_with_include_directive.type.Character;
import java.util.Arrays;
import java.util.List;

public class TestQuerySelections {
  private static List<CompiledSelection> onHuman = Arrays.asList(
    new CompiledField.Builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    new CompiledField.Builder("homePlanet", CompiledGraphQL.CompiledStringType).build()
  );

  private static List<CompiledSelection> onDroid = Arrays.asList(
    new CompiledField.Builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    new CompiledField.Builder("primaryFunction", CompiledGraphQL.CompiledStringType).build()
  );

  private static List<CompiledSelection> onCharacter = Arrays.asList(
    new CompiledField.Builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build()
  );

  private static List<CompiledSelection> hero = Arrays.asList(
    new CompiledField.Builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    new CompiledField.Builder("id", new CompiledNotNullType(CompiledGraphQL.CompiledIDType)).build(),
    new CompiledFragment.Builder("Human", Arrays.asList("Human")).condition(Arrays.asList(new CompiledCondition("withDetails", false), new CompiledCondition("skipHumanDetails", true))).selections(onHuman).build(),
    new CompiledFragment.Builder("Droid", Arrays.asList("Droid")).condition(Arrays.asList(new CompiledCondition("withDetails", false))).selections(onDroid).build(),
    new CompiledFragment.Builder("Character", Arrays.asList("Droid", "Human")).condition(Arrays.asList(new CompiledCondition("withDetails", false))).selections(onCharacter).build()
  );

  public static List<CompiledSelection> root = Arrays.asList(
    new CompiledField.Builder("hero", Character.type).selections(hero).build()
  );
}
