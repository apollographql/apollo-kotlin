//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_named_fragments.type

import com.apollographql.apollo3.api.CompiledNamedType
import com.apollographql.apollo3.api.CompiledType
import com.apollographql.apollo3.api.InterfaceType
import com.apollographql.apollo3.api.ObjectType
import kotlin.collections.List

/**
 * Auto generated constants representing the custom scalars, objects, interfaces and unions in the
 * schema. Input objects are left out because they are generated separately
 */
public object Types {
  /**
   * An object with an ID
   */
  public val Node: InterfaceType = InterfaceType(name = "Node")

  /**
   * A single film.
   */
  public val Film: ObjectType = ObjectType(name = "Film", implements = listOf(Node))

  /**
   * A connection to a list of items.
   */
  public val FilmCharactersConnection: ObjectType = ObjectType(name = "FilmCharactersConnection")

  /**
   * An edge in a connection.
   */
  public val FilmCharactersEdge: ObjectType = ObjectType(name = "FilmCharactersEdge")

  /**
   * A connection to a list of items.
   */
  public val FilmPlanetsConnection: ObjectType = ObjectType(name = "FilmPlanetsConnection")

  /**
   * An edge in a connection.
   */
  public val FilmPlanetsEdge: ObjectType = ObjectType(name = "FilmPlanetsEdge")

  /**
   * A connection to a list of items.
   */
  public val FilmsConnection: ObjectType = ObjectType(name = "FilmsConnection")

  /**
   * An edge in a connection.
   */
  public val FilmsEdge: ObjectType = ObjectType(name = "FilmsEdge")

  /**
   * A connection to a list of items.
   */
  public val FilmSpeciesConnection: ObjectType = ObjectType(name = "FilmSpeciesConnection")

  /**
   * An edge in a connection.
   */
  public val FilmSpeciesEdge: ObjectType = ObjectType(name = "FilmSpeciesEdge")

  /**
   * A connection to a list of items.
   */
  public val FilmStarshipsConnection: ObjectType = ObjectType(name = "FilmStarshipsConnection")

  /**
   * An edge in a connection.
   */
  public val FilmStarshipsEdge: ObjectType = ObjectType(name = "FilmStarshipsEdge")

  /**
   * A connection to a list of items.
   */
  public val FilmVehiclesConnection: ObjectType = ObjectType(name = "FilmVehiclesConnection")

  /**
   * An edge in a connection.
   */
  public val FilmVehiclesEdge: ObjectType = ObjectType(name = "FilmVehiclesEdge")

  /**
   * Information about pagination in a connection.
   */
  public val PageInfo: ObjectType = ObjectType(name = "PageInfo")

  /**
   * A connection to a list of items.
   */
  public val PeopleConnection: ObjectType = ObjectType(name = "PeopleConnection")

  /**
   * An edge in a connection.
   */
  public val PeopleEdge: ObjectType = ObjectType(name = "PeopleEdge")

  /**
   * An individual person or character within the Star Wars universe.
   */
  public val Person: ObjectType = ObjectType(name = "Person", implements = listOf(Node))

  /**
   * A connection to a list of items.
   */
  public val PersonFilmsConnection: ObjectType = ObjectType(name = "PersonFilmsConnection")

  /**
   * An edge in a connection.
   */
  public val PersonFilmsEdge: ObjectType = ObjectType(name = "PersonFilmsEdge")

  /**
   * A connection to a list of items.
   */
  public val PersonStarshipsConnection: ObjectType = ObjectType(name = "PersonStarshipsConnection")

  /**
   * An edge in a connection.
   */
  public val PersonStarshipsEdge: ObjectType = ObjectType(name = "PersonStarshipsEdge")

  /**
   * A connection to a list of items.
   */
  public val PersonVehiclesConnection: ObjectType = ObjectType(name = "PersonVehiclesConnection")

  /**
   * An edge in a connection.
   */
  public val PersonVehiclesEdge: ObjectType = ObjectType(name = "PersonVehiclesEdge")

  /**
   * A large mass, planet or planetoid in the Star Wars Universe, at the time of
   * 0 ABY.
   */
  public val Planet: ObjectType = ObjectType(name = "Planet", implements = listOf(Node))

  /**
   * A connection to a list of items.
   */
  public val PlanetFilmsConnection: ObjectType = ObjectType(name = "PlanetFilmsConnection")

  /**
   * An edge in a connection.
   */
  public val PlanetFilmsEdge: ObjectType = ObjectType(name = "PlanetFilmsEdge")

  /**
   * A connection to a list of items.
   */
  public val PlanetResidentsConnection: ObjectType = ObjectType(name = "PlanetResidentsConnection")

  /**
   * An edge in a connection.
   */
  public val PlanetResidentsEdge: ObjectType = ObjectType(name = "PlanetResidentsEdge")

  /**
   * A connection to a list of items.
   */
  public val PlanetsConnection: ObjectType = ObjectType(name = "PlanetsConnection")

  /**
   * An edge in a connection.
   */
  public val PlanetsEdge: ObjectType = ObjectType(name = "PlanetsEdge")

  public val Root: ObjectType = ObjectType(name = "Root")

  /**
   * A type of person or character within the Star Wars Universe.
   */
  public val Species: ObjectType = ObjectType(name = "Species", implements = listOf(Node))

  /**
   * A connection to a list of items.
   */
  public val SpeciesConnection: ObjectType = ObjectType(name = "SpeciesConnection")

  /**
   * An edge in a connection.
   */
  public val SpeciesEdge: ObjectType = ObjectType(name = "SpeciesEdge")

  /**
   * A connection to a list of items.
   */
  public val SpeciesFilmsConnection: ObjectType = ObjectType(name = "SpeciesFilmsConnection")

  /**
   * An edge in a connection.
   */
  public val SpeciesFilmsEdge: ObjectType = ObjectType(name = "SpeciesFilmsEdge")

  /**
   * A connection to a list of items.
   */
  public val SpeciesPeopleConnection: ObjectType = ObjectType(name = "SpeciesPeopleConnection")

  /**
   * An edge in a connection.
   */
  public val SpeciesPeopleEdge: ObjectType = ObjectType(name = "SpeciesPeopleEdge")

  /**
   * A single transport craft that has hyperdrive capability.
   */
  public val Starship: ObjectType = ObjectType(name = "Starship", implements = listOf(Node))

  /**
   * A connection to a list of items.
   */
  public val StarshipFilmsConnection: ObjectType = ObjectType(name = "StarshipFilmsConnection")

  /**
   * An edge in a connection.
   */
  public val StarshipFilmsEdge: ObjectType = ObjectType(name = "StarshipFilmsEdge")

  /**
   * A connection to a list of items.
   */
  public val StarshipPilotsConnection: ObjectType = ObjectType(name = "StarshipPilotsConnection")

  /**
   * An edge in a connection.
   */
  public val StarshipPilotsEdge: ObjectType = ObjectType(name = "StarshipPilotsEdge")

  /**
   * A connection to a list of items.
   */
  public val StarshipsConnection: ObjectType = ObjectType(name = "StarshipsConnection")

  /**
   * An edge in a connection.
   */
  public val StarshipsEdge: ObjectType = ObjectType(name = "StarshipsEdge")

  /**
   * A single transport craft that does not have hyperdrive capability
   */
  public val Vehicle: ObjectType = ObjectType(name = "Vehicle", implements = listOf(Node))

  /**
   * A connection to a list of items.
   */
  public val VehicleFilmsConnection: ObjectType = ObjectType(name = "VehicleFilmsConnection")

  /**
   * An edge in a connection.
   */
  public val VehicleFilmsEdge: ObjectType = ObjectType(name = "VehicleFilmsEdge")

  /**
   * A connection to a list of items.
   */
  public val VehiclePilotsConnection: ObjectType = ObjectType(name = "VehiclePilotsConnection")

  /**
   * An edge in a connection.
   */
  public val VehiclePilotsEdge: ObjectType = ObjectType(name = "VehiclePilotsEdge")

  /**
   * A connection to a list of items.
   */
  public val VehiclesConnection: ObjectType = ObjectType(name = "VehiclesConnection")

  /**
   * An edge in a connection.
   */
  public val VehiclesEdge: ObjectType = ObjectType(name = "VehiclesEdge")

  public val all: List<CompiledType> = listOf(
        Node, Film, FilmCharactersConnection, FilmCharactersEdge, FilmPlanetsConnection,
            FilmPlanetsEdge, FilmsConnection, FilmsEdge, FilmSpeciesConnection, FilmSpeciesEdge,
            FilmStarshipsConnection, FilmStarshipsEdge, FilmVehiclesConnection, FilmVehiclesEdge,
            PageInfo, PeopleConnection, PeopleEdge, Person, PersonFilmsConnection, PersonFilmsEdge,
            PersonStarshipsConnection, PersonStarshipsEdge, PersonVehiclesConnection,
            PersonVehiclesEdge, Planet, PlanetFilmsConnection, PlanetFilmsEdge,
            PlanetResidentsConnection, PlanetResidentsEdge, PlanetsConnection, PlanetsEdge, Root,
            Species, SpeciesConnection, SpeciesEdge, SpeciesFilmsConnection, SpeciesFilmsEdge,
            SpeciesPeopleConnection, SpeciesPeopleEdge, Starship, StarshipFilmsConnection,
            StarshipFilmsEdge, StarshipPilotsConnection, StarshipPilotsEdge, StarshipsConnection,
            StarshipsEdge, Vehicle, VehicleFilmsConnection, VehicleFilmsEdge,
            VehiclePilotsConnection, VehiclePilotsEdge, VehiclesConnection, VehiclesEdge)


  public fun possibleTypes(type: CompiledNamedType): List<ObjectType> =
      com.apollographql.apollo3.api.possibleTypes(all, type)
}
