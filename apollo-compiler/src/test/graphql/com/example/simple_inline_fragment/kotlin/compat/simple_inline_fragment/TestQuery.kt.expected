//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.simple_inline_fragment

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.simple_inline_fragment.adapter.TestQuery_ResponseAdapter
import com.example.simple_inline_fragment.selections.TestQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.Unit

public class TestQuery() : Query<TestQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.simple_inline_fragment.type.Query.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val hero: Hero?,
  ) : Query.Data

  public data class Hero(
    public val __typename: String,
    /**
     * The ID of the character
     */
    public val id: String,
    /**
     * The name of the character
     */
    public val name: String,
    /**
     * Synthetic field for inline fragment on Human
     */
    public val asHuman: AsHuman?,
    /**
     * Synthetic field for inline fragment on Droid
     */
    public val asDroid: AsDroid?,
  )

  public data class AsHuman(
    public val __typename: String,
    /**
     * The ID of the character
     */
    public val id: String,
    /**
     * The name of the character
     */
    public val name: String,
    /**
     * Height in the preferred unit, default is meters
     */
    public val height: Double?,
  )

  public data class AsDroid(
    public val __typename: String,
    /**
     * The ID of the character
     */
    public val id: String,
    /**
     * The name of the character
     */
    public val name: String,
    /**
     * This droid's primary function
     */
    public val primaryFunction: String?,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "9788d8cb5185e8875c193d2e8aa5cb15fb66916d00f51b55a037b5b8ebffc788"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   hero {
     *     __typename
     *     ... on Character {
     *       __typename
     *       id
     *       ... on Character {
     *         name
     *       }
     *     }
     *     ... on Human {
     *       height
     *     }
     *     ... on Droid {
     *       primaryFunction
     *     }
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query TestQuery { hero { __typename ... on Character { __typename id ... on Character { name } } ... on Human { height } ... on Droid { primaryFunction } } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
