//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.simple_inline_fragment.selections;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompiledFragment;
import com.apollographql.apollo3.api.CompiledGraphQL;
import com.apollographql.apollo3.api.CompiledNotNullType;
import com.apollographql.apollo3.api.CompiledSelection;
import com.example.simple_inline_fragment.type.Character;
import java.util.Arrays;
import java.util.List;

public class TestQuerySelections {
  private static List<CompiledSelection> onCharacter1 = Arrays.asList(
    new CompiledField.Builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build()
  );

  private static List<CompiledSelection> onCharacter = Arrays.asList(
    new CompiledField.Builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    new CompiledField.Builder("id", new CompiledNotNullType(CompiledGraphQL.CompiledIDType)).build(),
    new CompiledFragment.Builder(Arrays.asList("Droid", "Human")).selections(onCharacter1).build()
  );

  private static List<CompiledSelection> onHuman = Arrays.asList(
    new CompiledField.Builder("height", CompiledGraphQL.CompiledFloatType).build()
  );

  private static List<CompiledSelection> onDroid = Arrays.asList(
    new CompiledField.Builder("primaryFunction", CompiledGraphQL.CompiledStringType).build()
  );

  private static List<CompiledSelection> hero = Arrays.asList(
    new CompiledField.Builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    new CompiledFragment.Builder(Arrays.asList("Droid", "Human")).selections(onCharacter).build(),
    new CompiledFragment.Builder(Arrays.asList("Human")).selections(onHuman).build(),
    new CompiledFragment.Builder(Arrays.asList("Droid")).selections(onDroid).build()
  );

  public static List<CompiledSelection> root = Arrays.asList(
    new CompiledField.Builder("hero", Character.type).selections(hero).build()
  );
}
