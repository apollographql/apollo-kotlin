//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_primitive_types.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.OptionalAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.java_primitive_types.JavaPrimitiveQuery;
import com.example.java_primitive_types.type.MyInput;
import com.example.java_primitive_types.type.adapter.MyInput_InputAdapter;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Integer;
import java.lang.Override;

public enum JavaPrimitiveQuery_VariablesAdapter implements Adapter<JavaPrimitiveQuery> {
  INSTANCE;

  @Override
  public JavaPrimitiveQuery fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
      throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      JavaPrimitiveQuery value) throws IOException {
    if (value.input instanceof Optional.Present) {
      writer.name("input");
      new OptionalAdapter<>(new NullableAdapter<>(new ObjectAdapter<MyInput>(MyInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, (Optional.Present<MyInput>)value.input);
    }
    if (value.nullableInt instanceof Optional.Present) {
      writer.name("nullableInt");
      new OptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, (Optional.Present<Integer>)value.nullableInt);
    }
    writer.name("nonNullableInt");
    Adapters.IntAdapter.toJson(writer, customScalarAdapters, value.nonNullableInt);
    if (value.nonNullableIntWithDefault instanceof Optional.Present) {
      writer.name("nonNullableIntWithDefault");
      new OptionalAdapter<>(Adapters.IntAdapter).toJson(writer, customScalarAdapters, (Optional.Present<Integer>)value.nonNullableIntWithDefault);
    }
  }
}
