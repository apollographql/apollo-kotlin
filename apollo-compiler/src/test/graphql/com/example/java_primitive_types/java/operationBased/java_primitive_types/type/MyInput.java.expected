//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_primitive_types.type;

import com.apollographql.apollo3.api.Optional;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import org.jetbrains.annotations.Nullable;

public class MyInput {
  public final Optional<Integer> nullableInt;

  public final int nonNullableInt;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public MyInput(Optional<Integer> nullableInt, int nonNullableInt) {
    this.nullableInt = nullableInt;
    this.nonNullableInt = nonNullableInt;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof MyInput) {
      MyInput that = (MyInput) o;
      return ((this.nullableInt == null) ? (that.nullableInt == null) : this.nullableInt.equals(that.nullableInt))
       &&this.nonNullableInt == that.nonNullableInt;
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int h = 1;
      h *= 1000003;
      h ^= (nullableInt == null) ? 0 : nullableInt.hashCode();
      h *= 1000003;
      h ^= nonNullableInt;
      $hashCode = h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "MyInput{"
        + "nullableInt=" + nullableInt + ", "
        + "nonNullableInt=" + nonNullableInt
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Integer> nullableInt;

    private int nonNullableInt;

    Builder() {
    }

    public Builder nullableInt(@Nullable Integer nullableInt) {
      this.nullableInt = Optional.presentIfNotNull(nullableInt);
      return this;
    }

    public Builder nonNullableInt(int nonNullableInt) {
      this.nonNullableInt = nonNullableInt;
      return this;
    }

    public MyInput build() {
      return new MyInput(nullableInt, nonNullableInt);
    }
  }
}
