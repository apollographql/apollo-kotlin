//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_primitive_types.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.optional
import com.example.java_primitive_types.JavaPrimitiveQuery
import com.example.java_primitive_types.type.adapter.MyInput_InputAdapter
import kotlin.IllegalStateException
import kotlin.Unit

public object JavaPrimitiveQuery_VariablesAdapter : Adapter<JavaPrimitiveQuery> {
  public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      JavaPrimitiveQuery = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: JavaPrimitiveQuery,
  ): Unit {
    if (value.input is Optional.Present) {
      writer.name("input")
      MyInput_InputAdapter.obj().nullable().optional().toJson(writer, customScalarAdapters,
          value.input)
    }
    if (value.nullableInt is Optional.Present) {
      writer.name("nullableInt")
      NullableIntAdapter.optional().toJson(writer, customScalarAdapters, value.nullableInt)
    }
    writer.name("nonNullableInt")
    IntAdapter.toJson(writer, customScalarAdapters, value.nonNullableInt)
    if (value.nonNullableIntWithDefault is Optional.Present) {
      writer.name("nonNullableIntWithDefault")
      IntAdapter.optional().toJson(writer, customScalarAdapters, value.nonNullableIntWithDefault)
    }
  }
}
