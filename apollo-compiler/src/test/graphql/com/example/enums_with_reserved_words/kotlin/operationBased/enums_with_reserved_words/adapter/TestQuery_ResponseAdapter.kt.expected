//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.enums_with_reserved_words.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.example.enums_with_reserved_words.TestQuery
import com.example.enums_with_reserved_words.type.Enum
import com.example.enums_with_reserved_words.type.adapter.Enum_ResponseAdapter
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : Adapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "enum")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Data {
      var __typename: String? = null
      var enum_: Enum? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> enum_ = Enum_ResponseAdapter.nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      reader.rewind()
      val onQuery = com.example.enums_with_reserved_words.adapter.TestQuery_ResponseAdapter.Data.OnQuery.fromJson(reader,
          customScalarAdapters)

      return TestQuery.Data(
        __typename = __typename,
        enum_ = enum_,
        onQuery = onQuery
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Data
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("enum")
      Enum_ResponseAdapter.nullable().toJson(writer, customScalarAdapters, value.enum_)

      com.example.enums_with_reserved_words.adapter.TestQuery_ResponseAdapter.Data.OnQuery.toJson(writer,
          customScalarAdapters, value.onQuery)
    }

    private object OnQuery : Adapter<TestQuery.Data.OnQuery> {
      public val RESPONSE_NAMES: List<String> = listOf("enum")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          TestQuery.Data.OnQuery {
        var enum_: Enum? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> enum_ = Enum_ResponseAdapter.nullable().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return TestQuery.Data.OnQuery(
          enum_ = enum_
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: TestQuery.Data.OnQuery
      ): Unit {
        writer.name("enum")
        Enum_ResponseAdapter.nullable().toJson(writer, customScalarAdapters, value.enum_)
      }
    }
  }
}
