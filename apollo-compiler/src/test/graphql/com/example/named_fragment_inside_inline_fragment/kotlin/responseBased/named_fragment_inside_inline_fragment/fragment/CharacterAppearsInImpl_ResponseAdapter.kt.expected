//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_inside_inline_fragment.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.example.named_fragment_inside_inline_fragment.type.Episode
import com.example.named_fragment_inside_inline_fragment.type.adapter.Episode_ResponseAdapter
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object CharacterAppearsInImpl_ResponseAdapter {
  public object Data : Adapter<CharacterAppearsInImpl.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "appearsIn")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CharacterAppearsInImpl.Data {
      var __typename: String? = null
      var appearsIn: List<Episode?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> appearsIn = Episode_ResponseAdapter.nullable().list().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return CharacterAppearsInImpl.Data(
        __typename = __typename!!,
        appearsIn = appearsIn!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CharacterAppearsInImpl.Data
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("appearsIn")
      Episode_ResponseAdapter.nullable().list().toJson(writer, customScalarAdapters,
          value.appearsIn)
    }
  }
}
