//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.big_query.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.big_query.TestQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : Adapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("character")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Data {
      var _character: TestQuery.Data.Character? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _character = Character.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.Data(
        character = _character
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Data,
    ): Unit {
      writer.name("character")
      Character.obj().nullable().toJson(writer, customScalarAdapters, value.character)
    }

    private object Character : Adapter<TestQuery.Data.Character> {
      public val RESPONSE_NAMES: List<String> = listOf("name")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          TestQuery.Data.Character {
        var _name: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return TestQuery.Data.Character(
          name = _name!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: TestQuery.Data.Character,
      ): Unit {
        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)
      }
    }
  }
}
