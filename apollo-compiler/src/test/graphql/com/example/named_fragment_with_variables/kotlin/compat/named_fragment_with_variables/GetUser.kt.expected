//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_with_variables.adapter.GetUser_ResponseAdapter
import com.example.named_fragment_with_variables.adapter.GetUser_VariablesAdapter
import com.example.named_fragment_with_variables.fragment.QueryFragment
import com.example.named_fragment_with_variables.selections.GetUserSelections
import com.example.named_fragment_with_variables.type.UserQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit

public data class GetUser(
  public val organizationId: String,
  public val query: UserQuery,
  public val size: Int,
) : Query<GetUser.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    GetUser_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = GetUser_ResponseAdapter.Data.obj(true)

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.named_fragment_with_variables.type.Query.type
  )
  .selections(selections = GetUserSelections.__root)
  .build()

  @ApolloAdaptableWith(GetUser_ResponseAdapter.Data::class)
  public data class Data(
    public val __typename: String,
    /**
     * Synthetic field for grouping fragments
     */
    public val fragments: Fragments,
  ) : Query.Data {
    public data class Fragments(
      /**
       * Synthetic field for 'QueryFragment'
       */
      public val queryFragment: QueryFragment,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "1314916fa3163a17df2b7a0173e55fef34621507824242308b3006e9ab4740b4"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query GetUser($organizationId: String!, $query: UserQuery!, $size: Int!) {
     *   __typename
     *   ...QueryFragment
     * }
     *
     * fragment UserFragment on User {
     *   firstName
     *   lastName
     *   avatar(size: $size)
     * }
     *
     * fragment QueryFragment on Query {
     *   organization(id: $organizationId) {
     *     id
     *     user(query: $query) {
     *       __typename
     *       ...UserFragment
     *     }
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query GetUser(${'$'}organizationId: String!, ${'$'}query: UserQuery!, ${'$'}size: Int!) { __typename ...QueryFragment }  fragment UserFragment on User { firstName lastName avatar(size: ${'$'}size) }  fragment QueryFragment on Query { organization(id: ${'$'}organizationId) { id user(query: ${'$'}query) { __typename ...UserFragment } } }"

    public const val OPERATION_NAME: String = "GetUser"
  }
}
