//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.StringAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.named_fragment_with_variables.GetUser;
import com.example.named_fragment_with_variables.fragment.QueryFragment;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class GetUser_ResponseAdapter {
  public enum Data implements Adapter<GetUser.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public GetUser.Data fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters) {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = StringAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      reader.rewind();
      QueryFragment queryFragment = com.example.named_fragment_with_variables.fragment.QueryFragmentImpl_ResponseAdapter.QueryFragment.INSTANCE.fromJson(reader, customScalarAdapters);

      return new GetUser.Data(
        __typename,
        queryFragment
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetUser.Data value) {
      writer.name("__typename");
      StringAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.__typename);

      com.example.named_fragment_with_variables.fragment.QueryFragmentImpl_ResponseAdapter.QueryFragment.INSTANCE.toJson(writer, customScalarAdapters, value.queryFragment);
    }
  }
}
