//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.fragment.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledStringType
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.example.named_fragment_with_variables.type.Types.Organization
import com.example.named_fragment_with_variables.type.Types.User
import kotlin.collections.List

public object QueryFragmentSelections {
  private val user: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("User"),
          selections = UserFragmentSelections.root
        )
      )

  private val organization: List<CompiledSelection> = listOf(
        CompiledField(
          name = "id",
          type = CompiledStringType.notNull()
        ),
        CompiledField(
          name = "user",
          type = User.notNull().list().notNull(),
          arguments = listOf(
            CompiledArgument("query", CompiledVariable("query"))
          ),
          selections = user
        )
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField(
          name = "organization",
          type = Organization,
          arguments = listOf(
            CompiledArgument("id", CompiledVariable("organizationId"))
          ),
          selections = organization
        )
      )
}
