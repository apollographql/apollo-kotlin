//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment_with_nested_fragments

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.root_query_fragment_with_nested_fragments.adapter.TestQuery_ResponseAdapter
import com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment
import com.example.root_query_fragment_with_nested_fragments.selections.TestQuerySelections
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class TestQuery() : Query<TestQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  public override fun selections(): List<CompiledSelection> = TestQuerySelections.root

  public data class Data(
    public val __typename: String,
    /**
     * Synthetic field for grouping fragments
     */
    public val fragments: Fragments
  ) : Query.Data {
    public data class Fragments(
      /**
       * Synthetic field for 'QueryFragment'
       */
      public val queryFragment: QueryFragment
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "28a70b2a9a393b236756d92edea600a8d90d3e5cfb24cdfeda92fec1b5778794"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   __typename
     *   ...QueryFragment
     * }
     *
     * fragment heroFragment on Character {
     *   name
     * }
     *
     * fragment droidFragment on Droid {
     *   name
     *   primaryFunction
     * }
     *
     * fragment QueryFragment on Query {
     *   __typename
     *   hero {
     *     __typename
     *     ...heroFragment
     *   }
     *   droid(id: 1) {
     *     __typename
     *     ...droidFragment
     *   }
     *   human(id: 1) {
     *     __typename
     *     ... on Human {
     *       name
     *       homePlanet
     *     }
     *   }
     * }
     */
    public const val OPERATION_DOCUMENT: String =
        "query TestQuery { __typename ...QueryFragment }  fragment heroFragment on Character { name }  fragment droidFragment on Droid { name primaryFunction }  fragment QueryFragment on Query { __typename hero { __typename ...heroFragment } droid(id: 1) { __typename ...droidFragment } human(id: 1) { __typename ... on Human { name homePlanet } } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
