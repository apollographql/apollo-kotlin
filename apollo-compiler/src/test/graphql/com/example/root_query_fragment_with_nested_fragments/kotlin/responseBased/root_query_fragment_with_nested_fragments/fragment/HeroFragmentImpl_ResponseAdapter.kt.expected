//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment_with_nested_fragments.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object HeroFragmentImpl_ResponseAdapter {
  public object Data : Adapter<HeroFragmentImpl.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("name")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HeroFragmentImpl.Data {
      var name: String? = null

      while (true) {
        val __nameIdx = reader.selectName(RESPONSE_NAMES)
        if (__nameIdx != -1) customScalarAdapters.adapterContext.currentPath.push(RESPONSE_NAMES[__nameIdx])
        when (__nameIdx) {
          0 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
        customScalarAdapters.adapterContext.currentPath.pop()
      }

      return HeroFragmentImpl.Data(
        name = name!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HeroFragmentImpl.Data
    ): Unit {
      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)
    }
  }
}
