//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment_with_nested_fragments.fragment.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledStringType
import com.apollographql.apollo3.api.notNull
import com.example.root_query_fragment_with_nested_fragments.type.Types.Character
import com.example.root_query_fragment_with_nested_fragments.type.Types.Droid
import com.example.root_query_fragment_with_nested_fragments.type.Types.Human
import kotlin.collections.List

public object QueryFragmentSelections {
  private val hero: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("Droid", "Human"),
          selections = heroFragmentSelections.root
        )
      )

  private val droid: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("Droid"),
          selections = droidFragmentSelections.root
        )
      )

  private val onHuman: List<CompiledSelection> = listOf(
        CompiledField(
          name = "name",
          type = CompiledStringType.notNull()
        ),
        CompiledField(
          name = "homePlanet",
          type = CompiledStringType
        )
      )

  private val human: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("Human"),
          selections = onHuman
        )
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledField(
          name = "hero",
          type = Character,
          selections = hero
        ),
        CompiledField(
          name = "droid",
          type = Droid,
          arguments = listOf(
            CompiledArgument("id", 1)
          ),
          selections = droid
        ),
        CompiledField(
          name = "human",
          type = Human,
          arguments = listOf(
            CompiledArgument("id", 1)
          ),
          selections = human
        )
      )
}
