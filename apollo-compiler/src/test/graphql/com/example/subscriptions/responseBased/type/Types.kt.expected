//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.subscriptions.type

import com.apollographql.apollo3.api.CompiledNamedType
import com.apollographql.apollo3.api.CompiledType
import com.apollographql.apollo3.api.EnumType
import com.apollographql.apollo3.api.ObjectType
import kotlin.collections.List

/**
 * Auto generated constants representing the custom scalars, objects, interfaces and unions in the
 * schema. Input objects are left out because they are generated separately
 */
public object Types {
  /**
   * A list of options for the sort order of the feed
   */
  public val FeedType: EnumType = EnumType("FeedType")

  /**
   * The type of vote to record, when submitting a vote
   */
  public val VoteType: EnumType = EnumType("VoteType")

  /**
   * A comment about an entry, submitted by a user
   */
  public val Comment: ObjectType = ObjectType(name = "Comment")

  /**
   * Information about a GitHub repository submitted to GitHunt
   */
  public val Entry: ObjectType = ObjectType(name = "Entry")

  public val Mutation: ObjectType = ObjectType(name = "Mutation")

  public val Query: ObjectType = ObjectType(name = "Query")

  /**
   * A repository object from the GitHub API. This uses the exact field names returned by the
   * GitHub API for simplicity, even though the convention for GraphQL is usually to camel case.
   */
  public val Repository: ObjectType = ObjectType(name = "Repository")

  public val Subscription: ObjectType = ObjectType(name = "Subscription")

  /**
   * A user object from the GitHub API. This uses the exact field names returned from the GitHub
   * API.
   */
  public val User: ObjectType = ObjectType(name = "User")

  /**
   * XXX to be removed
   */
  public val Vote: ObjectType = ObjectType(name = "Vote")

  public val all: List<CompiledType> = listOf(
        FeedType, VoteType, Comment, Entry, Mutation, Query, Repository, Subscription, User, Vote)


  public fun possibleTypes(type: CompiledNamedType): List<ObjectType> =
      com.apollographql.apollo3.api.possibleTypes(all, type)
}
