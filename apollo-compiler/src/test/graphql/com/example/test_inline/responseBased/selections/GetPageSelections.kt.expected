//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.test_inline.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledStringType
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.example.test_inline.type.Types
import com.example.test_inline.type.Types.Collection
import com.example.test_inline.type.Types.Item
import kotlin.collections.List

public object GetPageSelections {
  private val items: List<CompiledSelection> = listOf(
        CompiledField(
          name = "title",
          type = CompiledStringType.notNull()
        )
      )

  private val onParticularItem: List<CompiledSelection> = listOf(
        CompiledField(
          name = "image",
          type = CompiledStringType.notNull()
        )
      )

  private val items1: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("ParticularItem"),
          selections = onParticularItem
        )
      )

  private val onParticularCollection: List<CompiledSelection> = listOf(
        CompiledField(
          name = "items",
          type = Item.notNull().list().notNull(),
          selections = items1
        )
      )

  private val collection: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledStringType.notNull()
        ),
        CompiledField(
          name = "items",
          type = Item.notNull().list().notNull(),
          selections = items
        ),
        CompiledFragment(
          possibleTypes = listOf("ParticularCollection"),
          selections = onParticularCollection
        )
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField(
          name = "collection",
          type = Collection.notNull(),
          selections = collection
        )
      )
}
