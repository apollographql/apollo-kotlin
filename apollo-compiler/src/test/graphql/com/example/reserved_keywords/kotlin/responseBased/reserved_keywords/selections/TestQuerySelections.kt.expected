//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.reserved_keywords.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.example.reserved_keywords.type.Character
import com.example.reserved_keywords.type.GraphQLID
import com.example.reserved_keywords.type.GraphQLString
import com.example.reserved_keywords.type.SearchResult
import kotlin.collections.List

public object TestQuerySelections {
  private val `yield`: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).alias("while")
        .build(),
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).alias("it")
        .build()
      )

  private val onCharacter: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val objects: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Character",
          possibleTypes = listOf("Droid", "Human")
        ).selections(onCharacter)
        .build()
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "hero",
          type = Character.type
        ).alias("yield")
        .selections(`yield`)
        .build(),
        CompiledField.Builder(
          name = "search",
          type = SearchResult.type.list()
        ).alias("objects")
        .arguments(listOf(
          CompiledArgument("text", "abc")
        ))
        .selections(objects)
        .build()
      )
}
