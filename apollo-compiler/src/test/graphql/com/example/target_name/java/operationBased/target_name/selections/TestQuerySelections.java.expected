//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.target_name.selections;

import com.apollographql.apollo3.api.CompiledArgument;
import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompiledFragment;
import com.apollographql.apollo3.api.CompiledNotNullType;
import com.apollographql.apollo3.api.CompiledSelection;
import com.apollographql.apollo3.api.CompiledVariable;
import com.example.target_name.type.GraphQLString;
import com.example.target_name.type.renamedEnum;
import com.example.target_name.type.renamedInterface;
import com.example.target_name.type.renamedObject;
import com.example.target_name.type.renamedScalar;
import com.example.target_name.type.renamedUnion;
import java.util.Arrays;
import java.util.List;

public class TestQuerySelections {
  private static List<CompiledSelection> __object = Arrays.asList(
    new CompiledField.Builder("field", GraphQLString.type).build()
  );

  private static List<CompiledSelection> __interface = Arrays.asList(
    new CompiledField.Builder("field", GraphQLString.type).build()
  );

  private static List<CompiledSelection> __onReservedObject = Arrays.asList(
    new CompiledField.Builder("field", GraphQLString.type).build()
  );

  private static List<CompiledSelection> __union = Arrays.asList(
    new CompiledField.Builder("__typename", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledFragment.Builder("ReservedObject", Arrays.asList("ReservedObject")).selections(__onReservedObject).build()
  );

  public static List<CompiledSelection> __root = Arrays.asList(
    new CompiledField.Builder("object", renamedObject.type).arguments(Arrays.asList(new CompiledArgument.Builder("input", new CompiledVariable("input")).build())).selections(__object).build(),
    new CompiledField.Builder("interface", renamedInterface.type).selections(__interface).build(),
    new CompiledField.Builder("union", renamedUnion.type).selections(__union).build(),
    new CompiledField.Builder("scalar", renamedScalar.type).arguments(Arrays.asList(new CompiledArgument.Builder("scalar", new CompiledVariable("scalar")).build())).build(),
    new CompiledField.Builder("enum", renamedEnum.type).arguments(Arrays.asList(new CompiledArgument.Builder("enum", new CompiledVariable("enum")).build())).build()
  );
}
