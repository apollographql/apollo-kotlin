//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.introspection_query

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.introspection_query.adapter.TestQuery_ResponseAdapter
import com.example.introspection_query.selections.TestQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class TestQuery() : Query<TestQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.introspection_query.type.Query.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val __schema: __Schema,
    public val __type: __Type,
  ) : Query.Data {
    public data class __Schema(
      public val queryType: QueryType,
      public val types: List<Type>,
    ) {
      public data class QueryType(
        public val name: String?,
      )

      public data class Type(
        public val name: String?,
      )
    }

    public data class __Type(
      public val name: String?,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "0df748160db73d1bbdea0e6e8437222dd4026ef9a3d699923485cf95c7df8366"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   __schema {
     *     queryType {
     *       name
     *     }
     *     types {
     *       name
     *     }
     *   }
     *   __type(name: "Vehicle") {
     *     name
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query TestQuery { __schema { queryType { name } types { name } } __type(name: \"Vehicle\") { name } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
