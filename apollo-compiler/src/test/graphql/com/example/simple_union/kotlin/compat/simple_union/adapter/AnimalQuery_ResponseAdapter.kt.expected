//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.simple_union.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.simple_union.AnimalQuery
import com.example.simple_union.fragment.CatFragment
import com.example.simple_union.fragment.DogFragment
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object AnimalQuery_ResponseAdapter {
  public object Data : Adapter<AnimalQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("animal")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        AnimalQuery.Data {
      var _animal: AnimalQuery.Animal? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _animal = Animal.obj(true).nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return AnimalQuery.Data(
        animal = _animal
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: AnimalQuery.Data,
    ): Unit {
      writer.name("animal")
      Animal.obj(true).nullable().toJson(writer, customScalarAdapters, value.animal)
    }
  }

  public object Animal : Adapter<AnimalQuery.Animal> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        AnimalQuery.Animal {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _fragments = com.example.simple_union.adapter.AnimalQuery_ResponseAdapter.Animal.Fragments.fromJson(reader,
          customScalarAdapters)

      return AnimalQuery.Animal(
        __typename = __typename!!,
        fragments = _fragments
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: AnimalQuery.Animal,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.example.simple_union.adapter.AnimalQuery_ResponseAdapter.Animal.Fragments.toJson(writer,
          customScalarAdapters, value.fragments)
    }

    private object Fragments : Adapter<AnimalQuery.Animal.Fragments> {
      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          AnimalQuery.Animal.Fragments {


        reader.rewind()
        val __typename = reader.readTypename()

        var _catFragment: CatFragment? = null
        if (possibleTypes("Cat").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
          reader.rewind()
          _catFragment = com.example.simple_union.fragment.CatFragmentImpl_ResponseAdapter.CatFragment.fromJson(reader,
              customScalarAdapters)
        }

        var _dogFragment: DogFragment? = null
        if (possibleTypes("Dog").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
          reader.rewind()
          _dogFragment = com.example.simple_union.fragment.DogFragmentImpl_ResponseAdapter.DogFragment.fromJson(reader,
              customScalarAdapters)
        }

        return AnimalQuery.Animal.Fragments(
          catFragment = _catFragment,
          dogFragment = _dogFragment
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: AnimalQuery.Animal.Fragments,
      ): Unit {
        if (value.catFragment != null) {
          com.example.simple_union.fragment.CatFragmentImpl_ResponseAdapter.CatFragment.toJson(writer,
              customScalarAdapters, value.catFragment)
        }

        if (value.dogFragment != null) {
          com.example.simple_union.fragment.DogFragmentImpl_ResponseAdapter.DogFragment.toJson(writer,
              customScalarAdapters, value.dogFragment)
        }
      }
    }
  }
}
