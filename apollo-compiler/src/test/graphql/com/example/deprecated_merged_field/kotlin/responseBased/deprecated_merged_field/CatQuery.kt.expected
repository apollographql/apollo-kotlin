//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.deprecated_merged_field

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.deprecated_merged_field.adapter.CatQuery_ResponseAdapter
import com.example.deprecated_merged_field.fragment.AnimalFragment
import com.example.deprecated_merged_field.fragment.CatAnimalFragment
import com.example.deprecated_merged_field.fragment.DogAnimalFragment
import com.example.deprecated_merged_field.selections.CatQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.Int
import kotlin.String
import kotlin.Unit

public class CatQuery() : Query<CatQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> {
    return CatQuery_ResponseAdapter.Data.obj()
  }

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.deprecated_merged_field.type.Query.type
  )
  .selections(selections = CatQuerySelections.root)
  .build()

  public data class Data(
    public val cat: Cat?
  ) : Query.Data {
    public sealed interface Cat {
      public companion object {
        public fun Cat.animalFragment() = this as? AnimalFragment

        public fun Cat.asAnimal() = this as? AnimalCat

        public fun Cat.asAnimalDog() = this as? AnimalDogCat
      }
    }

    public sealed interface AnimalDogCat : AnimalCat, CatAnimalFragment, DogAnimalFragment {
      public override val __typename: String

      @Deprecated(message = "Deprecated in: 'Dog'")
      public override val name: String
    }

    public sealed interface AnimalCat : Cat, CatAnimalFragment {
      public override val __typename: String

      public override val name: String
    }

    public class OtherCat() : Cat

    public data class OtherAnimalCat(
      public override val __typename: String,
      public override val name: String
    ) : AnimalCat, CatAnimalFragment
  }

  public companion object {
    public const val OPERATION_ID: String =
        "bf375798e3fa2a4145a51cd4bb5a3057e2e1575f6cb07f31ba6429e977a27919"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query CatQuery {
     *   cat {
     *     ...AnimalFragment
     *   }
     * }
     *
     * fragment AnimalFragment on Animal {
     *   __typename
     *   ... on Cat {
     *     name
     *   }
     *   ... on Dog {
     *     name
     *   }
     * }
     */
    public const val OPERATION_DOCUMENT: String =
        "query CatQuery { cat { ...AnimalFragment } }  fragment AnimalFragment on Animal { __typename ... on Cat { name } ... on Dog { name } }"

    public const val OPERATION_NAME: String = "CatQuery"
  }
}
