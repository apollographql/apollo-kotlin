//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.__schema.type

import com.apollographql.apollo3.api.Optional
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.List

/**
 * The input object sent when someone is creating a new review
 */
public data class ReviewInput(
  /**
   * 0-5 stars
   */
  public val stars: Int,
  /**
   * for test purpose only
   */
  public val nullableIntFieldWithDefaultValue: Optional<Int?> = Optional.Absent,
  /**
   * Comment about the movie, optional
   */
  public val commentary: Optional<String?> = Optional.Absent,
  /**
   * Favorite color, optional
   */
  public val favoriteColor: ColorInput,
  /**
   * for test purpose only
   */
  public val enumWithDefaultValue: Optional<Episode?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val nonNullableEnumWithDefaultValue: Optional<Episode> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val nullableEnum: Optional<Episode?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val listOfCustomScalar: Optional<List<Any?>?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val customScalar: Optional<Any?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val listOfEnums: Optional<List<Episode?>?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val listOfInt: Optional<List<Int?>?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val listOfString: Optional<List<String?>?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val listOfStringNonOptional: List<String?>,
  /**
   * for test purpose only
   */
  public val listOfInputTypes: Optional<List<ColorInput?>?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val booleanWithDefaultValue: Optional<Boolean?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val booleanNonOptional: Optional<Boolean?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val listOfListOfString: Optional<List<List<String>>?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val listOfListOfEnum: Optional<List<List<Episode>>?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val listOfListOfCustom: Optional<List<List<Any>>?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val listOfListOfObject: Optional<List<List<ColorInput>>?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val CapitalizedField: Optional<String?> = Optional.Absent,
  /**
   * for test purpose only
   */
  public val CapitalizedInt: Optional<Int?> = Optional.Absent,
)
