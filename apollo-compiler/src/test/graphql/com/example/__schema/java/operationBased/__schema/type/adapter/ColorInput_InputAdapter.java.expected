//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.__schema.type.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.DoubleAdapter;
import com.apollographql.apollo3.api.IntAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.__schema.type.ColorInput;
import com.example.__schema.type.Episode;
import com.example.__schema.type.ReviewRefInput;
import java.lang.Double;
import java.lang.IllegalStateException;
import java.lang.Integer;
import java.lang.Override;

public enum ColorInput_InputAdapter implements Adapter<ColorInput> {
  INSTANCE;

  @Override
  public ColorInput fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters) {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      ColorInput value) {
    if (value.red instanceof Optional.Present) {
      writer.name("red");
      Adapters.optional(IntAdapter.INSTANCE).toJson(writer, customScalarAdapters, (Optional.Present<Integer>)value.red);
    }
    if (value.green instanceof Optional.Present) {
      writer.name("green");
      Adapters.optional(Adapters.NullableDoubleAdapter).toJson(writer, customScalarAdapters, (Optional.Present<Double>)value.green);
    }
    if (value.blue instanceof Optional.Present) {
      writer.name("blue");
      Adapters.optional(DoubleAdapter.INSTANCE).toJson(writer, customScalarAdapters, (Optional.Present<Double>)value.blue);
    }
    if (value.enumWithDefaultValue instanceof Optional.Present) {
      writer.name("enumWithDefaultValue");
      Adapters.optional(Adapters.nullable(Episode_ResponseAdapter.INSTANCE)).toJson(writer, customScalarAdapters, (Optional.Present<Episode>)value.enumWithDefaultValue);
    }
    if (value.reviewRefInput instanceof Optional.Present) {
      writer.name("reviewRefInput");
      Adapters.optional(Adapters.nullable(new ObjectAdapter<ReviewRefInput>(ReviewRefInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, (Optional.Present<ReviewRefInput>)value.reviewRefInput);
    }
  }
}
