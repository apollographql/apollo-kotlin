//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_variable_and_argument.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.DoubleAdapter;
import com.apollographql.apollo3.api.IntAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.input_object_variable_and_argument.TestQuery;
import com.example.input_object_variable_and_argument.type.adapter.Episode_ResponseAdapter;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum TestQuery_VariablesAdapter implements Adapter<TestQuery> {
  INSTANCE;

  @Override
  public TestQuery fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters) {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      TestQuery value) {
    writer.name("episode");
    Adapters.nullable(Episode_ResponseAdapter.INSTANCE).toJson(writer, customScalarAdapters, value.episode);
    writer.name("stars");
    IntAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.stars);
    writer.name("greenValue");
    DoubleAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.greenValue);
  }
}
