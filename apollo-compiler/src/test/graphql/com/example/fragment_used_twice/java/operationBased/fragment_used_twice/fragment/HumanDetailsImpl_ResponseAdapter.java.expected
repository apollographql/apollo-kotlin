//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_used_twice.fragment;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.StringAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class HumanDetailsImpl_ResponseAdapter {
  public enum HumanDetails implements Adapter<com.example.fragment_used_twice.fragment.HumanDetails> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename", "name");

    @Override
    public com.example.fragment_used_twice.fragment.HumanDetails fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String __typename = null;
      String name = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = StringAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 1: name = StringAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      reader.rewind();
      CharacterDetails characterDetails = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Droid","Human")), Collections.emptySet(), __typename)) {
        characterDetails = com.example.fragment_used_twice.fragment.CharacterDetailsImpl_ResponseAdapter.CharacterDetails.INSTANCE.fromJson(reader, customScalarAdapters);
      }

      Assertions.checkFieldNotMissing(name, "name");

      return new com.example.fragment_used_twice.fragment.HumanDetails(
        __typename,
        name,
        characterDetails
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.example.fragment_used_twice.fragment.HumanDetails value) throws IOException {
      writer.name("__typename");
      StringAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.__typename);

      writer.name("name");
      StringAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.name);

      if (value.characterDetails != null) {
        com.example.fragment_used_twice.fragment.CharacterDetailsImpl_ResponseAdapter.CharacterDetails.INSTANCE.toJson(writer, customScalarAdapters, value.characterDetails);
      }
    }
  }
}
