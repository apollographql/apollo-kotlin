//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_inline_fragment.fragment.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.example.fragment_with_inline_fragment.type.Character
import com.example.fragment_with_inline_fragment.type.FriendsConnection
import com.example.fragment_with_inline_fragment.type.FriendsEdge
import com.example.fragment_with_inline_fragment.type.Int
import com.example.fragment_with_inline_fragment.type.String
import kotlin.collections.List

public object HeroDetailsSelections {
  private val onDroid: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = String.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Droid",
          possibleTypes = (listOf("Droid"))
        ).selections(DroidDetailsSelections.root)
        .build()
      )

  private val node: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = String.type.notNull()
        ).build()
      )

  private val edges: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "node",
          type = Character.type
        ).selections(node)
        .build()
      )

  private val friendsConnection: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "totalCount",
          type = Int.type
        ).build(),
        CompiledField.Builder(
          name = "edges",
          type = FriendsEdge.type.list()
        ).selections(edges)
        .build()
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = String.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Human",
          possibleTypes = (listOf("Human"))
        ).selections(HumanDetailsSelections.root)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Droid",
          possibleTypes = listOf("Droid")
        ).selections(onDroid)
        .build(),
        CompiledField.Builder(
          name = "name",
          type = String.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "friendsConnection",
          type = FriendsConnection.type.notNull()
        ).selections(friendsConnection)
        .build()
      )
}
