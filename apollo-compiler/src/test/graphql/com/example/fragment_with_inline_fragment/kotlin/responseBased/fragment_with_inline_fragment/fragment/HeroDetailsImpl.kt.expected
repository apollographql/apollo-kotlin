//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_inline_fragment.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Fragment
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.fragment_with_inline_fragment.fragment.selections.HeroDetailsSelections
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class HeroDetailsImpl() : Fragment<HeroDetailsImpl.Data> {
  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This fragment doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> {
    return HeroDetailsImpl_ResponseAdapter.Data.obj()
  }

  public override fun selections(): List<CompiledSelection> = HeroDetailsSelections.root

  public sealed interface Data : HeroDetails, Fragment.Data {
    public override val __typename: String

    /**
     * The name of the character
     */
    public override val name: String

    /**
     * The friends of the character exposed as a connection with edges
     */
    public override val friendsConnection: FriendsConnection

    public sealed interface FriendsConnection : HeroDetails.FriendsConnection {
      /**
       * The total number of friends
       */
      public override val totalCount: Int?

      /**
       * The edges for each of the character's friends.
       */
      public override val edges: List<Edge?>?

      public sealed interface Edge : HeroDetails.FriendsConnection.Edge {
        /**
         * The character represented by this friendship edge
         */
        public override val node: Node?

        public sealed interface Node : HeroDetails.FriendsConnection.Edge.Node {
          /**
           * The name of the character
           */
          public override val name: String
        }
      }
    }

    public companion object {
      public fun Data.humanDetails() = this as? HumanDetails

      public fun Data.droidDetails() = this as? DroidDetails

      public fun Data.asHuman() = this as? HumanData

      public fun Data.asDroid() = this as? DroidData
    }
  }

  public data class HumanData(
    public override val __typename: String,
    /**
     * Merged field with multiple descriptions. See parentTypes: 'Human, Character' for more
     * information
     */
    public override val name: String,
    /**
     * The friends of the character exposed as a connection with edges
     */
    public override val friendsConnection: FriendsConnection
  ) : Data, HumanDetails, HumanHeroDetails {
    public data class FriendsConnection(
      /**
       * The total number of friends
       */
      public override val totalCount: Int?,
      /**
       * The edges for each of the character's friends.
       */
      public override val edges: List<Edge?>?
    ) : Data.FriendsConnection, HumanHeroDetails.FriendsConnection {
      public fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

      public data class Edge(
        /**
         * The character represented by this friendship edge
         */
        public override val node: Node?
      ) : Data.FriendsConnection.Edge, HumanHeroDetails.FriendsConnection.Edge {
        public data class Node(
          /**
           * The name of the character
           */
          public override val name: String
        ) : Data.FriendsConnection.Edge.Node, HumanHeroDetails.FriendsConnection.Edge.Node
      }
    }
  }

  public data class DroidData(
    public override val __typename: String,
    /**
     * Merged field with multiple descriptions. See parentTypes: 'Droid, Character' for more
     * information
     */
    public override val name: String,
    /**
     * This droid's primary function
     */
    public override val primaryFunction: String?,
    /**
     * The friends of the character exposed as a connection with edges
     */
    public override val friendsConnection: FriendsConnection
  ) : Data, DroidDetails, DroidHeroDetails {
    public data class FriendsConnection(
      /**
       * The total number of friends
       */
      public override val totalCount: Int?,
      /**
       * The edges for each of the character's friends.
       */
      public override val edges: List<Edge?>?
    ) : Data.FriendsConnection, DroidHeroDetails.FriendsConnection {
      public fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

      public data class Edge(
        /**
         * The character represented by this friendship edge
         */
        public override val node: Node?
      ) : Data.FriendsConnection.Edge, DroidHeroDetails.FriendsConnection.Edge {
        public data class Node(
          /**
           * The name of the character
           */
          public override val name: String
        ) : Data.FriendsConnection.Edge.Node, DroidHeroDetails.FriendsConnection.Edge.Node
      }
    }
  }

  public data class OtherData(
    public override val __typename: String,
    /**
     * The name of the character
     */
    public override val name: String,
    /**
     * The friends of the character exposed as a connection with edges
     */
    public override val friendsConnection: FriendsConnection
  ) : Data, HeroDetails {
    public data class FriendsConnection(
      /**
       * The total number of friends
       */
      public override val totalCount: Int?,
      /**
       * The edges for each of the character's friends.
       */
      public override val edges: List<Edge?>?
    ) : Data.FriendsConnection, HeroDetails.FriendsConnection {
      public fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

      public data class Edge(
        /**
         * The character represented by this friendship edge
         */
        public override val node: Node?
      ) : Data.FriendsConnection.Edge, HeroDetails.FriendsConnection.Edge {
        public data class Node(
          /**
           * The name of the character
           */
          public override val name: String
        ) : Data.FriendsConnection.Edge.Node, HeroDetails.FriendsConnection.Edge.Node
      }
    }
  }
}
