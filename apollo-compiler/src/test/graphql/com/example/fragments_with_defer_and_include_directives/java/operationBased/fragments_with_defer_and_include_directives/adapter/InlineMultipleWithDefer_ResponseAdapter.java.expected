//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BLabel;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.fragments_with_defer_and_include_directives.InlineMultipleWithDefer;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class InlineMultipleWithDefer_ResponseAdapter {
  public enum Data implements Adapter<InlineMultipleWithDefer.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("hero");

    @Override
    public InlineMultipleWithDefer.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      InlineMultipleWithDefer.Hero hero = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: hero = new NullableAdapter<>(new ObjectAdapter<InlineMultipleWithDefer.Hero>(Hero.INSTANCE, true)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new InlineMultipleWithDefer.Data(
        hero
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        InlineMultipleWithDefer.Data value) throws IOException {
      writer.name("hero");
      new NullableAdapter<>(new ObjectAdapter<InlineMultipleWithDefer.Hero>(Hero.INSTANCE, true)).toJson(writer, customScalarAdapters, value.hero);
    }
  }

  public enum Hero implements Adapter<InlineMultipleWithDefer.Hero> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public InlineMultipleWithDefer.Hero fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String __typename = null;

      String __path = reader.getPath();
      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      InlineMultipleWithDefer.OnDroidDeferFirst onDroidDeferFirst = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.And<BTerm>(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Droid")),new BooleanExpression.Element<BTerm>(new BLabel("first"))), customScalarAdapters.getAdapterContext().variables(), __typename, customScalarAdapters.getAdapterContext(), __path)) {
        reader.rewind();
        onDroidDeferFirst = com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDefer_ResponseAdapter.OnDroidDeferFirst.INSTANCE.fromJson(reader, customScalarAdapters);
      }

      InlineMultipleWithDefer.OnDroidDeferSecond onDroidDeferSecond = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.And<BTerm>(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Droid")),new BooleanExpression.Element<BTerm>(new BLabel("second"))), customScalarAdapters.getAdapterContext().variables(), __typename, customScalarAdapters.getAdapterContext(), __path)) {
        reader.rewind();
        onDroidDeferSecond = com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDefer_ResponseAdapter.OnDroidDeferSecond.INSTANCE.fromJson(reader, customScalarAdapters);
      }

      return new InlineMultipleWithDefer.Hero(
        __typename,
        onDroidDeferFirst,
        onDroidDeferSecond
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        InlineMultipleWithDefer.Hero value) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.__typename);

      if (value.onDroidDeferFirst != null) {
        com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDefer_ResponseAdapter.OnDroidDeferFirst.INSTANCE.toJson(writer, customScalarAdapters, value.onDroidDeferFirst);
      }

      if (value.onDroidDeferSecond != null) {
        com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDefer_ResponseAdapter.OnDroidDeferSecond.INSTANCE.toJson(writer, customScalarAdapters, value.onDroidDeferSecond);
      }
    }
  }

  public enum OnDroidDeferFirst implements Adapter<InlineMultipleWithDefer.OnDroidDeferFirst> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("name");

    @Override
    public InlineMultipleWithDefer.OnDroidDeferFirst fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String name = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: name = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(name, "name");

      return new InlineMultipleWithDefer.OnDroidDeferFirst(
        name
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        InlineMultipleWithDefer.OnDroidDeferFirst value) throws IOException {
      writer.name("name");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.name);
    }
  }

  public enum OnDroidDeferSecond implements Adapter<InlineMultipleWithDefer.OnDroidDeferSecond> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id");

    @Override
    public InlineMultipleWithDefer.OnDroidDeferSecond fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String id = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(id, "id");

      return new InlineMultipleWithDefer.OnDroidDeferSecond(
        id
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        InlineMultipleWithDefer.OnDroidDeferSecond value) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);
    }
  }
}
