//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.label
import com.apollographql.apollo3.api.not
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.or
import com.apollographql.apollo3.api.variable
import com.example.fragments_with_defer_and_include_directives.InlineMultipleWithDeferWithIf
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object InlineMultipleWithDeferWithIf_ResponseAdapter {
  public object Data : Adapter<InlineMultipleWithDeferWithIf.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        InlineMultipleWithDeferWithIf.Data {
      var hero: InlineMultipleWithDeferWithIf.Hero? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> hero = Hero.obj(true).nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return InlineMultipleWithDeferWithIf.Data(
        hero = hero
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: InlineMultipleWithDeferWithIf.Data
    ): Unit {
      writer.name("hero")
      Hero.obj(true).nullable().toJson(writer, customScalarAdapters, value.hero)
    }
  }

  public object Hero : Adapter<InlineMultipleWithDeferWithIf.Hero> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        InlineMultipleWithDeferWithIf.Hero {
      var __typename: String? = null

      val __path = reader.getPath()
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val asCharacter = com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.AsCharacter.fromJson(reader,
          customScalarAdapters)

      var asCharacterDeferSecond: InlineMultipleWithDeferWithIf.AsCharacterDeferSecond? = null
      if (label("second").evaluate(customScalarAdapters.adapterContext.variables(), null, customScalarAdapters.adapterContext, __path)) {
        reader.rewind()
        asCharacterDeferSecond = com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.AsCharacterDeferSecond.fromJson(reader,
            customScalarAdapters)
      }

      var asCharacterDeferThird: InlineMultipleWithDeferWithIf.AsCharacterDeferThird? = null
      if (or(not(variable("cond")),label("third")).evaluate(customScalarAdapters.adapterContext.variables(), null, customScalarAdapters.adapterContext, __path)) {
        reader.rewind()
        asCharacterDeferThird = com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.AsCharacterDeferThird.fromJson(reader,
            customScalarAdapters)
      }

      return InlineMultipleWithDeferWithIf.Hero(
        __typename = __typename!!,
        asCharacter = asCharacter,
        asCharacterDeferSecond = asCharacterDeferSecond,
        asCharacterDeferThird = asCharacterDeferThird
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: InlineMultipleWithDeferWithIf.Hero
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.AsCharacter.toJson(writer,
          customScalarAdapters, value.asCharacter)

      if (value.asCharacterDeferSecond != null) {
        com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.AsCharacterDeferSecond.toJson(writer,
            customScalarAdapters, value.asCharacterDeferSecond)
      }

      if (value.asCharacterDeferThird != null) {
        com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.AsCharacterDeferThird.toJson(writer,
            customScalarAdapters, value.asCharacterDeferThird)
      }
    }
  }

  public object AsCharacter : Adapter<InlineMultipleWithDeferWithIf.AsCharacter> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        InlineMultipleWithDeferWithIf.AsCharacter {
      var __typename: String? = null
      var id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return InlineMultipleWithDeferWithIf.AsCharacter(
        __typename = __typename!!,
        id = id!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: InlineMultipleWithDeferWithIf.AsCharacter
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)
    }
  }

  public object AsCharacterDeferSecond :
      Adapter<InlineMultipleWithDeferWithIf.AsCharacterDeferSecond> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        InlineMultipleWithDeferWithIf.AsCharacterDeferSecond {
      var __typename: String? = null
      var name: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return InlineMultipleWithDeferWithIf.AsCharacterDeferSecond(
        __typename = __typename!!,
        name = name!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: InlineMultipleWithDeferWithIf.AsCharacterDeferSecond
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)
    }
  }

  public object AsCharacterDeferThird : Adapter<InlineMultipleWithDeferWithIf.AsCharacterDeferThird>
      {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        InlineMultipleWithDeferWithIf.AsCharacterDeferThird {
      var __typename: String? = null
      var name: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return InlineMultipleWithDeferWithIf.AsCharacterDeferThird(
        __typename = __typename!!,
        name = name!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: InlineMultipleWithDeferWithIf.AsCharacterDeferThird
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)
    }
  }
}
