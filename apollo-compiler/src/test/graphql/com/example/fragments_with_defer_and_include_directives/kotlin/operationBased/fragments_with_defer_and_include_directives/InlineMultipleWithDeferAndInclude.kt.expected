//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferAndInclude_ResponseAdapter
import com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferAndInclude_VariablesAdapter
import com.example.fragments_with_defer_and_include_directives.selections.InlineMultipleWithDeferAndIncludeSelections
import kotlin.Boolean
import kotlin.String
import kotlin.Unit

public data class InlineMultipleWithDeferAndInclude(
  public val cond1: Boolean,
  public val cond2: Boolean,
  public val cond3: Boolean,
  public val cond4: Boolean
) : Query<InlineMultipleWithDeferAndInclude.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    InlineMultipleWithDeferAndInclude_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> {
    return InlineMultipleWithDeferAndInclude_ResponseAdapter.Data.obj()
  }

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.fragments_with_defer_and_include_directives.type.Query.type
  )
  .selections(selections = InlineMultipleWithDeferAndIncludeSelections.root)
  .build()

  public data class Data(
    public val hero: Hero?
  ) : Query.Data {
    public data class Hero(
      public val __typename: String,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public val onDroidIfCond1: OnDroidIfCond1?,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public val onDroidIfNotCond2: OnDroidIfNotCond2?,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public val onDroidDeferFirst: OnDroidDeferFirst?,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public val onDroidDeferSecond: OnDroidDeferSecond?,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public val onDroidDeferThird: OnDroidDeferThird?,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public val onDroidDeferFourth: OnDroidDeferFourth?
    ) {
      public data class OnDroidIfCond1(
        /**
         * What others call this droid
         */
        public val name: String
      )

      public data class OnDroidIfNotCond2(
        /**
         * The ID of the droid
         */
        public val id: String
      )

      public data class OnDroidDeferFirst(
        /**
         * What others call this droid
         */
        public val name: String
      )

      public data class OnDroidDeferSecond(
        /**
         * The ID of the droid
         */
        public val id: String
      )

      public data class OnDroidDeferThird(
        /**
         * What others call this droid
         */
        public val name: String
      )

      public data class OnDroidDeferFourth(
        /**
         * The ID of the droid
         */
        public val id: String
      )
    }
  }

  public companion object {
    public const val OPERATION_ID: String =
        "62a5b82967659385f084ee5ed37dfa5ec6e659ccc89e419d150c38f08db17bb6"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query InlineMultipleWithDeferAndInclude($cond1: Boolean!, $cond2: Boolean!, $cond3: Boolean!,
     * $cond4: Boolean!) {
     *   hero {
     *     __typename
     *     ... on Droid @include(if: $cond1) {
     *       name
     *     }
     *     ... on Droid @skip(if: $cond2) {
     *       id
     *     }
     *     ... on Droid @defer(label: "first") {
     *       name
     *     }
     *     ... on Droid @defer(label: "second") {
     *       id
     *     }
     *     ... on Droid @defer(label: "third") @include(if: $cond3) {
     *       name
     *     }
     *     ... on Droid @defer(label: "fourth") @skip(if: $cond4) {
     *       id
     *     }
     *   }
     * }
     */
    public const val OPERATION_DOCUMENT: String =
        "query InlineMultipleWithDeferAndInclude(${'$'}cond1: Boolean!, ${'$'}cond2: Boolean!, ${'$'}cond3: Boolean!, ${'$'}cond4: Boolean!) { hero { __typename ... on Droid @include(if: ${'$'}cond1) { name } ... on Droid @skip(if: ${'$'}cond2) { id } ... on Droid @defer(label: \"first\") { name } ... on Droid @defer(label: \"second\") { id } ... on Droid @defer(label: \"third\") @include(if: ${'$'}cond3) { name } ... on Droid @defer(label: \"fourth\") @skip(if: ${'$'}cond4) { id } } }"

    public const val OPERATION_NAME: String = "InlineMultipleWithDeferAndInclude"
  }
}
