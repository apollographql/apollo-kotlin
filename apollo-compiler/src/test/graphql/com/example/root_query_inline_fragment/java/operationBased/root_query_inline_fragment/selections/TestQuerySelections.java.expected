//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_inline_fragment.selections;

import com.apollographql.apollo3.api.CompiledArgument;
import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompiledFragment;
import com.apollographql.apollo3.api.CompiledGraphQL;
import com.apollographql.apollo3.api.CompiledListType;
import com.apollographql.apollo3.api.CompiledNotNullType;
import com.apollographql.apollo3.api.CompiledSelection;
import com.example.root_query_inline_fragment.type.Character;
import com.example.root_query_inline_fragment.type.Droid;
import com.example.root_query_inline_fragment.type.Episode;
import java.util.Arrays;
import java.util.List;

public class TestQuerySelections {
  private static List<CompiledSelection> onHuman = Arrays.asList(
    CompiledField.builder("height", CompiledGraphQL.CompiledFloatType).build()
  );

  private static List<CompiledSelection> hero = Arrays.asList(
    CompiledField.builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("appearsIn", new CompiledNotNullType(new CompiledListType(Episode.type))).build(),
    CompiledFragment.builder(Arrays.asList("Human")).selections(onHuman).build()
  );

  private static List<CompiledSelection> onDroid = Arrays.asList(
    CompiledField.builder("name", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("primaryFunction", CompiledGraphQL.CompiledStringType).build()
  );

  private static List<CompiledSelection> droid = Arrays.asList(
    CompiledField.builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledFragment.builder(Arrays.asList("Droid")).selections(onDroid).build()
  );

  private static List<CompiledSelection> onQuery = Arrays.asList(
    CompiledField.builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledField.builder("hero", Character.type).selections(hero).build(),
    CompiledField.builder("droid", Droid.type).arguments(Arrays.asList(new CompiledArgument("id", 1, false))).selections(droid).build()
  );

  public static List<CompiledSelection> root = Arrays.asList(
    CompiledField.builder("__typename", new CompiledNotNullType(CompiledGraphQL.CompiledStringType)).build(),
    CompiledFragment.builder(Arrays.asList("Query")).selections(onQuery).build()
  );
}
