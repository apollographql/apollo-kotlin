// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxX64.linux, macosArm64, macosX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosSimulatorArm64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.apollographql.apollo:apollo-ast>
final enum class com.apollographql.apollo.ast/GQLDirectiveLocation : kotlin/Enum<com.apollographql.apollo.ast/GQLDirectiveLocation> { // com.apollographql.apollo.ast/GQLDirectiveLocation|null[0]
    enum entry ARGUMENT_DEFINITION // com.apollographql.apollo.ast/GQLDirectiveLocation.ARGUMENT_DEFINITION|null[0]
    enum entry ENUM // com.apollographql.apollo.ast/GQLDirectiveLocation.ENUM|null[0]
    enum entry ENUM_VALUE // com.apollographql.apollo.ast/GQLDirectiveLocation.ENUM_VALUE|null[0]
    enum entry FIELD // com.apollographql.apollo.ast/GQLDirectiveLocation.FIELD|null[0]
    enum entry FIELD_DEFINITION // com.apollographql.apollo.ast/GQLDirectiveLocation.FIELD_DEFINITION|null[0]
    enum entry FRAGMENT_DEFINITION // com.apollographql.apollo.ast/GQLDirectiveLocation.FRAGMENT_DEFINITION|null[0]
    enum entry FRAGMENT_SPREAD // com.apollographql.apollo.ast/GQLDirectiveLocation.FRAGMENT_SPREAD|null[0]
    enum entry INLINE_FRAGMENT // com.apollographql.apollo.ast/GQLDirectiveLocation.INLINE_FRAGMENT|null[0]
    enum entry INPUT_FIELD_DEFINITION // com.apollographql.apollo.ast/GQLDirectiveLocation.INPUT_FIELD_DEFINITION|null[0]
    enum entry INPUT_OBJECT // com.apollographql.apollo.ast/GQLDirectiveLocation.INPUT_OBJECT|null[0]
    enum entry INTERFACE // com.apollographql.apollo.ast/GQLDirectiveLocation.INTERFACE|null[0]
    enum entry MUTATION // com.apollographql.apollo.ast/GQLDirectiveLocation.MUTATION|null[0]
    enum entry OBJECT // com.apollographql.apollo.ast/GQLDirectiveLocation.OBJECT|null[0]
    enum entry QUERY // com.apollographql.apollo.ast/GQLDirectiveLocation.QUERY|null[0]
    enum entry SCALAR // com.apollographql.apollo.ast/GQLDirectiveLocation.SCALAR|null[0]
    enum entry SCHEMA // com.apollographql.apollo.ast/GQLDirectiveLocation.SCHEMA|null[0]
    enum entry SUBSCRIPTION // com.apollographql.apollo.ast/GQLDirectiveLocation.SUBSCRIPTION|null[0]
    enum entry UNION // com.apollographql.apollo.ast/GQLDirectiveLocation.UNION|null[0]
    enum entry VARIABLE_DEFINITION // com.apollographql.apollo.ast/GQLDirectiveLocation.VARIABLE_DEFINITION|null[0]

    final val entries // com.apollographql.apollo.ast/GQLDirectiveLocation.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.apollographql.apollo.ast/GQLDirectiveLocation> // com.apollographql.apollo.ast/GQLDirectiveLocation.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): com.apollographql.apollo.ast/GQLDirectiveLocation // com.apollographql.apollo.ast/GQLDirectiveLocation.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.apollographql.apollo.ast/GQLDirectiveLocation> // com.apollographql.apollo.ast/GQLDirectiveLocation.values|values#static(){}[0]
}

abstract interface com.apollographql.apollo.ast.introspection/IntrospectionSchema // com.apollographql.apollo.ast.introspection/IntrospectionSchema|null[0]

abstract interface com.apollographql.apollo.ast/GQLDescribed { // com.apollographql.apollo.ast/GQLDescribed|null[0]
    abstract val description // com.apollographql.apollo.ast/GQLDescribed.description|{}description[0]
        abstract fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLDescribed.description.<get-description>|<get-description>(){}[0]
}

abstract interface com.apollographql.apollo.ast/GQLHasDirectives { // com.apollographql.apollo.ast/GQLHasDirectives|null[0]
    abstract val directives // com.apollographql.apollo.ast/GQLHasDirectives.directives|{}directives[0]
        abstract fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLHasDirectives.directives.<get-directives>|<get-directives>(){}[0]
}

abstract interface com.apollographql.apollo.ast/GQLNamed { // com.apollographql.apollo.ast/GQLNamed|null[0]
    abstract val name // com.apollographql.apollo.ast/GQLNamed.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLNamed.name.<get-name>|<get-name>(){}[0]
}

sealed interface com.apollographql.apollo.ast/ApolloIssue : com.apollographql.apollo.ast/Issue // com.apollographql.apollo.ast/ApolloIssue|null[0]

sealed interface com.apollographql.apollo.ast/GQLDefinition : com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLDefinition|null[0]

sealed interface com.apollographql.apollo.ast/GQLExecutableDefinition : com.apollographql.apollo.ast/GQLDefinition // com.apollographql.apollo.ast/GQLExecutableDefinition|null[0]

sealed interface com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLNode|null[0]
    abstract val children // com.apollographql.apollo.ast/GQLNode.children|{}children[0]
        abstract fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLNode.children.<get-children>|<get-children>(){}[0]
    abstract val sourceLocation // com.apollographql.apollo.ast/GQLNode.sourceLocation|{}sourceLocation[0]
        abstract fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLNode.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    abstract fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLNode.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    abstract fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLNode.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

sealed interface com.apollographql.apollo.ast/GQLTypeExtension : com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLTypeSystemExtension // com.apollographql.apollo.ast/GQLTypeExtension|null[0]

sealed interface com.apollographql.apollo.ast/GQLTypeSystemExtension : com.apollographql.apollo.ast/GQLDefinition // com.apollographql.apollo.ast/GQLTypeSystemExtension|null[0]

sealed interface com.apollographql.apollo.ast/GraphQLIssue : com.apollographql.apollo.ast/Issue // com.apollographql.apollo.ast/GraphQLIssue|null[0]

sealed interface com.apollographql.apollo.ast/GraphQLValidationIssue : com.apollographql.apollo.ast/GraphQLIssue // com.apollographql.apollo.ast/GraphQLValidationIssue|null[0]

sealed interface com.apollographql.apollo.ast/Issue { // com.apollographql.apollo.ast/Issue|null[0]
    abstract val message // com.apollographql.apollo.ast/Issue.message|{}message[0]
        abstract fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/Issue.message.<get-message>|<get-message>(){}[0]
    abstract val sourceLocation // com.apollographql.apollo.ast/Issue.sourceLocation|{}sourceLocation[0]
        abstract fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/Issue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class <#A: out kotlin/Any> com.apollographql.apollo.ast/GQLResult { // com.apollographql.apollo.ast/GQLResult|null[0]
    constructor <init>(#A?, kotlin.collections/List<com.apollographql.apollo.ast/Issue>) // com.apollographql.apollo.ast/GQLResult.<init>|<init>(1:0?;kotlin.collections.List<com.apollographql.apollo.ast.Issue>){}[0]

    final val issues // com.apollographql.apollo.ast/GQLResult.issues|{}issues[0]
        final fun <get-issues>(): kotlin.collections/List<com.apollographql.apollo.ast/Issue> // com.apollographql.apollo.ast/GQLResult.issues.<get-issues>|<get-issues>(){}[0]
    final val value // com.apollographql.apollo.ast/GQLResult.value|{}value[0]
        final fun <get-value>(): #A? // com.apollographql.apollo.ast/GQLResult.value.<get-value>|<get-value>(){}[0]

    final fun getOrThrow(): #A // com.apollographql.apollo.ast/GQLResult.getOrThrow|getOrThrow(){}[0]
    final fun valueAssertNoErrors(): #A // com.apollographql.apollo.ast/GQLResult.valueAssertNoErrors|valueAssertNoErrors(){}[0]
}

final class com.apollographql.apollo.ast.introspection/ApolloIntrospectionSchema // com.apollographql.apollo.ast.introspection/ApolloIntrospectionSchema|null[0]

final class com.apollographql.apollo.ast/AnonymousOperation : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/AnonymousOperation|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/AnonymousOperation.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/AnonymousOperation.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/AnonymousOperation.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/AnonymousOperation.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/AnonymousOperation.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/ConditionalFragment : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/ConditionalFragment|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/ConditionalFragment.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/ConditionalFragment.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/ConditionalFragment.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/ConditionalFragment.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/ConditionalFragment.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/ConversionException : com.apollographql.apollo.ast/SourceAwareException { // com.apollographql.apollo.ast/ConversionException|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation? = ...) // com.apollographql.apollo.ast/ConversionException.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]
}

final class com.apollographql.apollo.ast/DeprecatedUsage : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/DeprecatedUsage|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/DeprecatedUsage.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/DeprecatedUsage.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/DeprecatedUsage.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/DeprecatedUsage.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/DeprecatedUsage.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/DifferentShape : com.apollographql.apollo.ast/GraphQLValidationIssue { // com.apollographql.apollo.ast/DifferentShape|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/DifferentShape.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/DifferentShape.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/DifferentShape.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/DifferentShape.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/DifferentShape.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/DirectiveRedefinition : com.apollographql.apollo.ast/GraphQLValidationIssue { // com.apollographql.apollo.ast/DirectiveRedefinition|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/DirectiveRedefinition.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/DirectiveRedefinition.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/DirectiveRedefinition.message.<get-message>|<get-message>(){}[0]
    final val name // com.apollographql.apollo.ast/DirectiveRedefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/DirectiveRedefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/DirectiveRedefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/DirectiveRedefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/DuplicateDeferLabel : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/DuplicateDeferLabel|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/DuplicateDeferLabel.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/DuplicateDeferLabel.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/DuplicateDeferLabel.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/DuplicateDeferLabel.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/DuplicateDeferLabel.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/DuplicateTypeName : com.apollographql.apollo.ast/GraphQLValidationIssue { // com.apollographql.apollo.ast/DuplicateTypeName|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/DuplicateTypeName.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/DuplicateTypeName.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/DuplicateTypeName.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/DuplicateTypeName.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/DuplicateTypeName.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/GQLArgument : com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLArgument|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, com.apollographql.apollo.ast/GQLValue) // com.apollographql.apollo.ast/GQLArgument.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;com.apollographql.apollo.ast.GQLValue){}[0]

    final val children // com.apollographql.apollo.ast/GQLArgument.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLValue> // com.apollographql.apollo.ast/GQLArgument.children.<get-children>|<get-children>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLArgument.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLArgument.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLArgument.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLArgument.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val value // com.apollographql.apollo.ast/GQLArgument.value|{}value[0]
        final fun <get-value>(): com.apollographql.apollo.ast/GQLValue // com.apollographql.apollo.ast/GQLArgument.value.<get-value>|<get-value>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., com.apollographql.apollo.ast/GQLValue = ...): com.apollographql.apollo.ast/GQLArgument // com.apollographql.apollo.ast/GQLArgument.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;com.apollographql.apollo.ast.GQLValue){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLArgument.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLArgument.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLArguments : com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLArguments|null[0]
    constructor <init>(kotlin.collections/List<com.apollographql.apollo.ast/GQLArgument>, com.apollographql.apollo.ast/SourceLocation? = ...) // com.apollographql.apollo.ast/GQLArguments.<init>|<init>(kotlin.collections.List<com.apollographql.apollo.ast.GQLArgument>;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val arguments // com.apollographql.apollo.ast/GQLArguments.arguments|{}arguments[0]
        final fun <get-arguments>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLArgument> // com.apollographql.apollo.ast/GQLArguments.arguments.<get-arguments>|<get-arguments>(){}[0]
    final val children // com.apollographql.apollo.ast/GQLArguments.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLArguments.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLArguments.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLArguments.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(kotlin.collections/List<com.apollographql.apollo.ast/GQLArgument> = ..., com.apollographql.apollo.ast/SourceLocation? = ...): com.apollographql.apollo.ast/GQLArguments // com.apollographql.apollo.ast/GQLArguments.copy|copy(kotlin.collections.List<com.apollographql.apollo.ast.GQLArgument>;com.apollographql.apollo.ast.SourceLocation?){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLArguments.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLArguments.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLBooleanValue : com.apollographql.apollo.ast/GQLValue { // com.apollographql.apollo.ast/GQLBooleanValue|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/Boolean) // com.apollographql.apollo.ast/GQLBooleanValue.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.Boolean){}[0]

    final val children // com.apollographql.apollo.ast/GQLBooleanValue.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLBooleanValue.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLBooleanValue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLBooleanValue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val value // com.apollographql.apollo.ast/GQLBooleanValue.value|{}value[0]
        final fun <get-value>(): kotlin/Boolean // com.apollographql.apollo.ast/GQLBooleanValue.value.<get-value>|<get-value>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/Boolean = ...): com.apollographql.apollo.ast/GQLBooleanValue // com.apollographql.apollo.ast/GQLBooleanValue.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.Boolean){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLBooleanValue.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLBooleanValue.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLDirective : com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLDirective|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLArgument>) // com.apollographql.apollo.ast/GQLDirective.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLArgument>){}[0]

    final val arguments // com.apollographql.apollo.ast/GQLDirective.arguments|{}arguments[0]
        final fun <get-arguments>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLArgument> // com.apollographql.apollo.ast/GQLDirective.arguments.<get-arguments>|<get-arguments>(){}[0]
    final val children // com.apollographql.apollo.ast/GQLDirective.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLArgument> // com.apollographql.apollo.ast/GQLDirective.children.<get-children>|<get-children>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLDirective.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLDirective.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLDirective.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLDirective.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLArgument> = ...): com.apollographql.apollo.ast/GQLDirective // com.apollographql.apollo.ast/GQLDirective.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLArgument>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLDirective.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLDirective.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLDirectiveDefinition : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLDescribed, com.apollographql.apollo.ast/GQLNamed { // com.apollographql.apollo.ast/GQLDirectiveDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition>, kotlin/Boolean, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirectiveLocation>) // com.apollographql.apollo.ast/GQLDirectiveDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLInputValueDefinition>;kotlin.Boolean;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirectiveLocation>){}[0]

    final val arguments // com.apollographql.apollo.ast/GQLDirectiveDefinition.arguments|{}arguments[0]
        final fun <get-arguments>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition> // com.apollographql.apollo.ast/GQLDirectiveDefinition.arguments.<get-arguments>|<get-arguments>(){}[0]
    final val children // com.apollographql.apollo.ast/GQLDirectiveDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLDirectiveDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLDirectiveDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLDirectiveDefinition.description.<get-description>|<get-description>(){}[0]
    final val locations // com.apollographql.apollo.ast/GQLDirectiveDefinition.locations|{}locations[0]
        final fun <get-locations>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirectiveLocation> // com.apollographql.apollo.ast/GQLDirectiveDefinition.locations.<get-locations>|<get-locations>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLDirectiveDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLDirectiveDefinition.name.<get-name>|<get-name>(){}[0]
    final val repeatable // com.apollographql.apollo.ast/GQLDirectiveDefinition.repeatable|{}repeatable[0]
        final fun <get-repeatable>(): kotlin/Boolean // com.apollographql.apollo.ast/GQLDirectiveDefinition.repeatable.<get-repeatable>|<get-repeatable>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLDirectiveDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLDirectiveDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition> = ..., kotlin/Boolean = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirectiveLocation> = ...): com.apollographql.apollo.ast/GQLDirectiveDefinition // com.apollographql.apollo.ast/GQLDirectiveDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLInputValueDefinition>;kotlin.Boolean;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirectiveLocation>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLDirectiveDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun isBuiltIn(): kotlin/Boolean // com.apollographql.apollo.ast/GQLDirectiveDefinition.isBuiltIn|isBuiltIn(){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLDirectiveDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]

    final object Companion { // com.apollographql.apollo.ast/GQLDirectiveDefinition.Companion|null[0]
        final val builtInDirectives // com.apollographql.apollo.ast/GQLDirectiveDefinition.Companion.builtInDirectives|{}builtInDirectives[0]
            final fun <get-builtInDirectives>(): kotlin.collections/Set<kotlin/String> // com.apollographql.apollo.ast/GQLDirectiveDefinition.Companion.builtInDirectives.<get-builtInDirectives>|<get-builtInDirectives>(){}[0]
    }
}

final class com.apollographql.apollo.ast/GQLDocument : com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLDocument|null[0]
    constructor <init>(kotlin.collections/List<com.apollographql.apollo.ast/GQLDefinition>, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/GQLDocument.<init>|<init>(kotlin.collections.List<com.apollographql.apollo.ast.GQLDefinition>;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val children // com.apollographql.apollo.ast/GQLDocument.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDefinition> // com.apollographql.apollo.ast/GQLDocument.children.<get-children>|<get-children>(){}[0]
    final val definitions // com.apollographql.apollo.ast/GQLDocument.definitions|{}definitions[0]
        final fun <get-definitions>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDefinition> // com.apollographql.apollo.ast/GQLDocument.definitions.<get-definitions>|<get-definitions>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLDocument.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLDocument.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(kotlin.collections/List<com.apollographql.apollo.ast/GQLDefinition> = ..., com.apollographql.apollo.ast/SourceLocation? = ...): com.apollographql.apollo.ast/GQLDocument // com.apollographql.apollo.ast/GQLDocument.copy|copy(kotlin.collections.List<com.apollographql.apollo.ast.GQLDefinition>;com.apollographql.apollo.ast.SourceLocation?){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLDocument.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLDocument.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]

    final object Companion // com.apollographql.apollo.ast/GQLDocument.Companion|null[0]
}

final class com.apollographql.apollo.ast/GQLEnumTypeDefinition : com.apollographql.apollo.ast/GQLTypeDefinition { // com.apollographql.apollo.ast/GQLEnumTypeDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLEnumValueDefinition>) // com.apollographql.apollo.ast/GQLEnumTypeDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLEnumValueDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLEnumTypeDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLEnumTypeDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLEnumTypeDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLEnumTypeDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLEnumTypeDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLEnumTypeDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val enumValues // com.apollographql.apollo.ast/GQLEnumTypeDefinition.enumValues|{}enumValues[0]
        final fun <get-enumValues>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLEnumValueDefinition> // com.apollographql.apollo.ast/GQLEnumTypeDefinition.enumValues.<get-enumValues>|<get-enumValues>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLEnumTypeDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLEnumTypeDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLEnumTypeDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLEnumTypeDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLEnumValueDefinition> = ...): com.apollographql.apollo.ast/GQLEnumTypeDefinition // com.apollographql.apollo.ast/GQLEnumTypeDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLEnumValueDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLEnumTypeDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLEnumTypeDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLEnumTypeExtension : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLTypeExtension { // com.apollographql.apollo.ast/GQLEnumTypeExtension|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLEnumValueDefinition>) // com.apollographql.apollo.ast/GQLEnumTypeExtension.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLEnumValueDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLEnumTypeExtension.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLEnumTypeExtension.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLEnumTypeExtension.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLEnumTypeExtension.directives.<get-directives>|<get-directives>(){}[0]
    final val enumValues // com.apollographql.apollo.ast/GQLEnumTypeExtension.enumValues|{}enumValues[0]
        final fun <get-enumValues>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLEnumValueDefinition> // com.apollographql.apollo.ast/GQLEnumTypeExtension.enumValues.<get-enumValues>|<get-enumValues>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLEnumTypeExtension.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLEnumTypeExtension.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLEnumTypeExtension.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLEnumTypeExtension.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLEnumValueDefinition> = ...): com.apollographql.apollo.ast/GQLEnumTypeExtension // com.apollographql.apollo.ast/GQLEnumTypeExtension.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLEnumValueDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLEnumTypeExtension.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLEnumTypeExtension.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLEnumValue : com.apollographql.apollo.ast/GQLValue { // com.apollographql.apollo.ast/GQLEnumValue|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String) // com.apollographql.apollo.ast/GQLEnumValue.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]

    final val children // com.apollographql.apollo.ast/GQLEnumValue.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLEnumValue.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLEnumValue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLEnumValue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val value // com.apollographql.apollo.ast/GQLEnumValue.value|{}value[0]
        final fun <get-value>(): kotlin/String // com.apollographql.apollo.ast/GQLEnumValue.value.<get-value>|<get-value>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ...): com.apollographql.apollo.ast/GQLEnumValue // com.apollographql.apollo.ast/GQLEnumValue.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLEnumValue.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLEnumValue.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLEnumValueDefinition : com.apollographql.apollo.ast/GQLDescribed, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLEnumValueDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>) // com.apollographql.apollo.ast/GQLEnumValueDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]

    final val children // com.apollographql.apollo.ast/GQLEnumValueDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLEnumValueDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLEnumValueDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLEnumValueDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLEnumValueDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLEnumValueDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLEnumValueDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLEnumValueDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLEnumValueDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLEnumValueDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ...): com.apollographql.apollo.ast/GQLEnumValueDefinition // com.apollographql.apollo.ast/GQLEnumValueDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLEnumValueDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLEnumValueDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLField : com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLSelection { // com.apollographql.apollo.ast/GQLField|null[0]
    final val alias // com.apollographql.apollo.ast/GQLField.alias|{}alias[0]
        final fun <get-alias>(): kotlin/String? // com.apollographql.apollo.ast/GQLField.alias.<get-alias>|<get-alias>(){}[0]
    final val arguments // com.apollographql.apollo.ast/GQLField.arguments|{}arguments[0]
        final fun <get-arguments>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLArgument> // com.apollographql.apollo.ast/GQLField.arguments.<get-arguments>|<get-arguments>(){}[0]
    final val children // com.apollographql.apollo.ast/GQLField.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLField.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLField.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLField.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLField.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLField.name.<get-name>|<get-name>(){}[0]
    final val selectionSet // com.apollographql.apollo.ast/GQLField.selectionSet|{}selectionSet[0]
        final fun <get-selectionSet>(): com.apollographql.apollo.ast/GQLSelectionSet // com.apollographql.apollo.ast/GQLField.selectionSet.<get-selectionSet>|<get-selectionSet>(){}[0]
    final val selections // com.apollographql.apollo.ast/GQLField.selections|{}selections[0]
        final fun <get-selections>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> // com.apollographql.apollo.ast/GQLField.selections.<get-selections>|<get-selections>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLField.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLField.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLArgument> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> = ...): com.apollographql.apollo.ast/GQLField // com.apollographql.apollo.ast/GQLField.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLArgument>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLSelection>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLField.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLField.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLFieldDefinition : com.apollographql.apollo.ast/GQLDescribed, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLFieldDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition>, com.apollographql.apollo.ast/GQLType, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>) // com.apollographql.apollo.ast/GQLFieldDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLInputValueDefinition>;com.apollographql.apollo.ast.GQLType;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]

    final val arguments // com.apollographql.apollo.ast/GQLFieldDefinition.arguments|{}arguments[0]
        final fun <get-arguments>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition> // com.apollographql.apollo.ast/GQLFieldDefinition.arguments.<get-arguments>|<get-arguments>(){}[0]
    final val children // com.apollographql.apollo.ast/GQLFieldDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLFieldDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLFieldDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLFieldDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLFieldDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLFieldDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLFieldDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLFieldDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLFieldDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLFieldDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val type // com.apollographql.apollo.ast/GQLFieldDefinition.type|{}type[0]
        final fun <get-type>(): com.apollographql.apollo.ast/GQLType // com.apollographql.apollo.ast/GQLFieldDefinition.type.<get-type>|<get-type>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition> = ..., com.apollographql.apollo.ast/GQLType = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ...): com.apollographql.apollo.ast/GQLFieldDefinition // com.apollographql.apollo.ast/GQLFieldDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLInputValueDefinition>;com.apollographql.apollo.ast.GQLType;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLFieldDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLFieldDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLFloatValue : com.apollographql.apollo.ast/GQLValue { // com.apollographql.apollo.ast/GQLFloatValue|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String) // com.apollographql.apollo.ast/GQLFloatValue.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]

    final val children // com.apollographql.apollo.ast/GQLFloatValue.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLFloatValue.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLFloatValue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLFloatValue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val value // com.apollographql.apollo.ast/GQLFloatValue.value|{}value[0]
        final fun <get-value>(): kotlin/String // com.apollographql.apollo.ast/GQLFloatValue.value.<get-value>|<get-value>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ...): com.apollographql.apollo.ast/GQLFloatValue // com.apollographql.apollo.ast/GQLFloatValue.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLFloatValue.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLFloatValue.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLFragmentDefinition : com.apollographql.apollo.ast/GQLDescribed, com.apollographql.apollo.ast/GQLExecutableDefinition, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLNamed { // com.apollographql.apollo.ast/GQLFragmentDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, com.apollographql.apollo.ast/GQLNamedType, kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection>, kotlin/String?) // com.apollographql.apollo.ast/GQLFragmentDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;com.apollographql.apollo.ast.GQLNamedType;kotlin.collections.List<com.apollographql.apollo.ast.GQLSelection>;kotlin.String?){}[0]

    final val children // com.apollographql.apollo.ast/GQLFragmentDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLFragmentDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLFragmentDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLFragmentDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLFragmentDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLFragmentDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLFragmentDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLFragmentDefinition.name.<get-name>|<get-name>(){}[0]
    final val selectionSet // com.apollographql.apollo.ast/GQLFragmentDefinition.selectionSet|{}selectionSet[0]
        final fun <get-selectionSet>(): com.apollographql.apollo.ast/GQLSelectionSet // com.apollographql.apollo.ast/GQLFragmentDefinition.selectionSet.<get-selectionSet>|<get-selectionSet>(){}[0]
    final val selections // com.apollographql.apollo.ast/GQLFragmentDefinition.selections|{}selections[0]
        final fun <get-selections>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> // com.apollographql.apollo.ast/GQLFragmentDefinition.selections.<get-selections>|<get-selections>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLFragmentDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLFragmentDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val typeCondition // com.apollographql.apollo.ast/GQLFragmentDefinition.typeCondition|{}typeCondition[0]
        final fun <get-typeCondition>(): com.apollographql.apollo.ast/GQLNamedType // com.apollographql.apollo.ast/GQLFragmentDefinition.typeCondition.<get-typeCondition>|<get-typeCondition>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., com.apollographql.apollo.ast/GQLNamedType = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> = ..., kotlin/String? = ...): com.apollographql.apollo.ast/GQLFragmentDefinition // com.apollographql.apollo.ast/GQLFragmentDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;com.apollographql.apollo.ast.GQLNamedType;kotlin.collections.List<com.apollographql.apollo.ast.GQLSelection>;kotlin.String?){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLFragmentDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLFragmentDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLFragmentSpread : com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLSelection { // com.apollographql.apollo.ast/GQLFragmentSpread|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>) // com.apollographql.apollo.ast/GQLFragmentSpread.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]

    final val children // com.apollographql.apollo.ast/GQLFragmentSpread.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLFragmentSpread.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLFragmentSpread.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLFragmentSpread.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLFragmentSpread.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLFragmentSpread.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLFragmentSpread.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLFragmentSpread.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ...): com.apollographql.apollo.ast/GQLFragmentSpread // com.apollographql.apollo.ast/GQLFragmentSpread.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLFragmentSpread.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLFragmentSpread.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLInlineFragment : com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLSelection { // com.apollographql.apollo.ast/GQLInlineFragment|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., com.apollographql.apollo.ast/GQLNamedType?, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection>) // com.apollographql.apollo.ast/GQLInlineFragment.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;com.apollographql.apollo.ast.GQLNamedType?;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLSelection>){}[0]

    final val children // com.apollographql.apollo.ast/GQLInlineFragment.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLInlineFragment.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLInlineFragment.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLInlineFragment.directives.<get-directives>|<get-directives>(){}[0]
    final val selectionSet // com.apollographql.apollo.ast/GQLInlineFragment.selectionSet|{}selectionSet[0]
        final fun <get-selectionSet>(): com.apollographql.apollo.ast/GQLSelectionSet // com.apollographql.apollo.ast/GQLInlineFragment.selectionSet.<get-selectionSet>|<get-selectionSet>(){}[0]
    final val selections // com.apollographql.apollo.ast/GQLInlineFragment.selections|{}selections[0]
        final fun <get-selections>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> // com.apollographql.apollo.ast/GQLInlineFragment.selections.<get-selections>|<get-selections>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLInlineFragment.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLInlineFragment.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val typeCondition // com.apollographql.apollo.ast/GQLInlineFragment.typeCondition|{}typeCondition[0]
        final fun <get-typeCondition>(): com.apollographql.apollo.ast/GQLNamedType? // com.apollographql.apollo.ast/GQLInlineFragment.typeCondition.<get-typeCondition>|<get-typeCondition>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., com.apollographql.apollo.ast/GQLNamedType? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> = ...): com.apollographql.apollo.ast/GQLInlineFragment // com.apollographql.apollo.ast/GQLInlineFragment.copy|copy(com.apollographql.apollo.ast.SourceLocation?;com.apollographql.apollo.ast.GQLNamedType?;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLSelection>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLInlineFragment.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLInlineFragment.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLInputObjectTypeDefinition : com.apollographql.apollo.ast/GQLTypeDefinition { // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition>) // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLInputValueDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val inputFields // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.inputFields|{}inputFields[0]
        final fun <get-inputFields>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition> // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.inputFields.<get-inputFields>|<get-inputFields>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition> = ...): com.apollographql.apollo.ast/GQLInputObjectTypeDefinition // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLInputValueDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLInputObjectTypeDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLInputObjectTypeExtension : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLTypeExtension { // com.apollographql.apollo.ast/GQLInputObjectTypeExtension|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition>) // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLInputValueDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.directives.<get-directives>|<get-directives>(){}[0]
    final val inputFields // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.inputFields|{}inputFields[0]
        final fun <get-inputFields>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition> // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.inputFields.<get-inputFields>|<get-inputFields>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLInputValueDefinition> = ...): com.apollographql.apollo.ast/GQLInputObjectTypeExtension // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLInputValueDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLInputObjectTypeExtension.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLInputValueDefinition : com.apollographql.apollo.ast/GQLDescribed, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLInputValueDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, com.apollographql.apollo.ast/GQLType, com.apollographql.apollo.ast/GQLValue?) // com.apollographql.apollo.ast/GQLInputValueDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;com.apollographql.apollo.ast.GQLType;com.apollographql.apollo.ast.GQLValue?){}[0]

    final val children // com.apollographql.apollo.ast/GQLInputValueDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLInputValueDefinition.children.<get-children>|<get-children>(){}[0]
    final val defaultValue // com.apollographql.apollo.ast/GQLInputValueDefinition.defaultValue|{}defaultValue[0]
        final fun <get-defaultValue>(): com.apollographql.apollo.ast/GQLValue? // com.apollographql.apollo.ast/GQLInputValueDefinition.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLInputValueDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLInputValueDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLInputValueDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLInputValueDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLInputValueDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLInputValueDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLInputValueDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLInputValueDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val type // com.apollographql.apollo.ast/GQLInputValueDefinition.type|{}type[0]
        final fun <get-type>(): com.apollographql.apollo.ast/GQLType // com.apollographql.apollo.ast/GQLInputValueDefinition.type.<get-type>|<get-type>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., com.apollographql.apollo.ast/GQLType = ..., com.apollographql.apollo.ast/GQLValue? = ...): com.apollographql.apollo.ast/GQLInputValueDefinition // com.apollographql.apollo.ast/GQLInputValueDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;com.apollographql.apollo.ast.GQLType;com.apollographql.apollo.ast.GQLValue?){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLInputValueDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun write(com.apollographql.apollo.ast/SDLWriter, kotlin/Boolean) // com.apollographql.apollo.ast/GQLInputValueDefinition.write|write(com.apollographql.apollo.ast.SDLWriter;kotlin.Boolean){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLInputValueDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLIntValue : com.apollographql.apollo.ast/GQLValue { // com.apollographql.apollo.ast/GQLIntValue|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String) // com.apollographql.apollo.ast/GQLIntValue.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]

    final val children // com.apollographql.apollo.ast/GQLIntValue.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLIntValue.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLIntValue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLIntValue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val value // com.apollographql.apollo.ast/GQLIntValue.value|{}value[0]
        final fun <get-value>(): kotlin/String // com.apollographql.apollo.ast/GQLIntValue.value.<get-value>|<get-value>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ...): com.apollographql.apollo.ast/GQLIntValue // com.apollographql.apollo.ast/GQLIntValue.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLIntValue.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLIntValue.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLInterfaceTypeDefinition : com.apollographql.apollo.ast/GQLTypeDefinition { // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<kotlin/String>, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition>) // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLFieldDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val fields // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.fields.<get-fields>|<get-fields>(){}[0]
    final val implementsInterfaces // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.implementsInterfaces|{}implementsInterfaces[0]
        final fun <get-implementsInterfaces>(): kotlin.collections/List<kotlin/String> // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.implementsInterfaces.<get-implementsInterfaces>|<get-implementsInterfaces>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> = ...): com.apollographql.apollo.ast/GQLInterfaceTypeDefinition // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLFieldDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLInterfaceTypeDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLInterfaceTypeExtension : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLTypeExtension { // com.apollographql.apollo.ast/GQLInterfaceTypeExtension|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin.collections/List<kotlin/String>, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition>) // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLFieldDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.directives.<get-directives>|<get-directives>(){}[0]
    final val fields // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.fields.<get-fields>|<get-fields>(){}[0]
    final val implementsInterfaces // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.implementsInterfaces|{}implementsInterfaces[0]
        final fun <get-implementsInterfaces>(): kotlin.collections/List<kotlin/String> // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.implementsInterfaces.<get-implementsInterfaces>|<get-implementsInterfaces>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> = ...): com.apollographql.apollo.ast/GQLInterfaceTypeExtension // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLFieldDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLInterfaceTypeExtension.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLListType : com.apollographql.apollo.ast/GQLType { // com.apollographql.apollo.ast/GQLListType|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., com.apollographql.apollo.ast/GQLType) // com.apollographql.apollo.ast/GQLListType.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;com.apollographql.apollo.ast.GQLType){}[0]

    final val children // com.apollographql.apollo.ast/GQLListType.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLType> // com.apollographql.apollo.ast/GQLListType.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLListType.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLListType.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val type // com.apollographql.apollo.ast/GQLListType.type|{}type[0]
        final fun <get-type>(): com.apollographql.apollo.ast/GQLType // com.apollographql.apollo.ast/GQLListType.type.<get-type>|<get-type>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., com.apollographql.apollo.ast/GQLType = ...): com.apollographql.apollo.ast/GQLListType // com.apollographql.apollo.ast/GQLListType.copy|copy(com.apollographql.apollo.ast.SourceLocation?;com.apollographql.apollo.ast.GQLType){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLListType.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLListType.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLListValue : com.apollographql.apollo.ast/GQLValue { // com.apollographql.apollo.ast/GQLListValue|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLValue>) // com.apollographql.apollo.ast/GQLListValue.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.collections.List<com.apollographql.apollo.ast.GQLValue>){}[0]

    final val children // com.apollographql.apollo.ast/GQLListValue.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLValue> // com.apollographql.apollo.ast/GQLListValue.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLListValue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLListValue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val values // com.apollographql.apollo.ast/GQLListValue.values|{}values[0]
        final fun <get-values>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLValue> // com.apollographql.apollo.ast/GQLListValue.values.<get-values>|<get-values>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLValue> = ...): com.apollographql.apollo.ast/GQLListValue // com.apollographql.apollo.ast/GQLListValue.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.collections.List<com.apollographql.apollo.ast.GQLValue>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLListValue.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLListValue.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLNamedType : com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLType { // com.apollographql.apollo.ast/GQLNamedType|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String) // com.apollographql.apollo.ast/GQLNamedType.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]

    final val children // com.apollographql.apollo.ast/GQLNamedType.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLNamedType.children.<get-children>|<get-children>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLNamedType.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLNamedType.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLNamedType.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLNamedType.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ...): com.apollographql.apollo.ast/GQLNamedType // com.apollographql.apollo.ast/GQLNamedType.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLNamedType.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLNamedType.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLNonNullType : com.apollographql.apollo.ast/GQLType { // com.apollographql.apollo.ast/GQLNonNullType|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., com.apollographql.apollo.ast/GQLType) // com.apollographql.apollo.ast/GQLNonNullType.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;com.apollographql.apollo.ast.GQLType){}[0]

    final val children // com.apollographql.apollo.ast/GQLNonNullType.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLType> // com.apollographql.apollo.ast/GQLNonNullType.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLNonNullType.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLNonNullType.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val type // com.apollographql.apollo.ast/GQLNonNullType.type|{}type[0]
        final fun <get-type>(): com.apollographql.apollo.ast/GQLType // com.apollographql.apollo.ast/GQLNonNullType.type.<get-type>|<get-type>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., com.apollographql.apollo.ast/GQLType = ...): com.apollographql.apollo.ast/GQLNonNullType // com.apollographql.apollo.ast/GQLNonNullType.copy|copy(com.apollographql.apollo.ast.SourceLocation?;com.apollographql.apollo.ast.GQLType){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLNonNullType.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLNonNullType.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLNullValue : com.apollographql.apollo.ast/GQLValue { // com.apollographql.apollo.ast/GQLNullValue|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ...) // com.apollographql.apollo.ast/GQLNullValue.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val children // com.apollographql.apollo.ast/GQLNullValue.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLNullValue.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLNullValue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLNullValue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ...): com.apollographql.apollo.ast/GQLNullValue // com.apollographql.apollo.ast/GQLNullValue.copy|copy(com.apollographql.apollo.ast.SourceLocation?){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLNullValue.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLNullValue.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLObjectField : com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLObjectField|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, com.apollographql.apollo.ast/GQLValue) // com.apollographql.apollo.ast/GQLObjectField.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;com.apollographql.apollo.ast.GQLValue){}[0]

    final val children // com.apollographql.apollo.ast/GQLObjectField.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLValue> // com.apollographql.apollo.ast/GQLObjectField.children.<get-children>|<get-children>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLObjectField.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLObjectField.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLObjectField.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLObjectField.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val value // com.apollographql.apollo.ast/GQLObjectField.value|{}value[0]
        final fun <get-value>(): com.apollographql.apollo.ast/GQLValue // com.apollographql.apollo.ast/GQLObjectField.value.<get-value>|<get-value>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., com.apollographql.apollo.ast/GQLValue = ...): com.apollographql.apollo.ast/GQLObjectField // com.apollographql.apollo.ast/GQLObjectField.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;com.apollographql.apollo.ast.GQLValue){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLObjectField.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLObjectField.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLObjectTypeDefinition : com.apollographql.apollo.ast/GQLTypeDefinition { // com.apollographql.apollo.ast/GQLObjectTypeDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<kotlin/String>, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition>) // com.apollographql.apollo.ast/GQLObjectTypeDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLFieldDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLObjectTypeDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLObjectTypeDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLObjectTypeDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLObjectTypeDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLObjectTypeDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLObjectTypeDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val fields // com.apollographql.apollo.ast/GQLObjectTypeDefinition.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> // com.apollographql.apollo.ast/GQLObjectTypeDefinition.fields.<get-fields>|<get-fields>(){}[0]
    final val implementsInterfaces // com.apollographql.apollo.ast/GQLObjectTypeDefinition.implementsInterfaces|{}implementsInterfaces[0]
        final fun <get-implementsInterfaces>(): kotlin.collections/List<kotlin/String> // com.apollographql.apollo.ast/GQLObjectTypeDefinition.implementsInterfaces.<get-implementsInterfaces>|<get-implementsInterfaces>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLObjectTypeDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLObjectTypeDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLObjectTypeDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLObjectTypeDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> = ...): com.apollographql.apollo.ast/GQLObjectTypeDefinition // com.apollographql.apollo.ast/GQLObjectTypeDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLFieldDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLObjectTypeDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLObjectTypeDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLObjectTypeExtension : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLTypeExtension { // com.apollographql.apollo.ast/GQLObjectTypeExtension|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin.collections/List<kotlin/String>, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition>) // com.apollographql.apollo.ast/GQLObjectTypeExtension.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLFieldDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLObjectTypeExtension.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLObjectTypeExtension.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLObjectTypeExtension.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLObjectTypeExtension.directives.<get-directives>|<get-directives>(){}[0]
    final val fields // com.apollographql.apollo.ast/GQLObjectTypeExtension.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> // com.apollographql.apollo.ast/GQLObjectTypeExtension.fields.<get-fields>|<get-fields>(){}[0]
    final val implementsInterfaces // com.apollographql.apollo.ast/GQLObjectTypeExtension.implementsInterfaces|{}implementsInterfaces[0]
        final fun <get-implementsInterfaces>(): kotlin.collections/List<kotlin/String> // com.apollographql.apollo.ast/GQLObjectTypeExtension.implementsInterfaces.<get-implementsInterfaces>|<get-implementsInterfaces>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLObjectTypeExtension.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLObjectTypeExtension.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLObjectTypeExtension.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLObjectTypeExtension.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> = ...): com.apollographql.apollo.ast/GQLObjectTypeExtension // com.apollographql.apollo.ast/GQLObjectTypeExtension.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLFieldDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLObjectTypeExtension.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLObjectTypeExtension.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLObjectValue : com.apollographql.apollo.ast/GQLValue { // com.apollographql.apollo.ast/GQLObjectValue|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLObjectField>) // com.apollographql.apollo.ast/GQLObjectValue.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.collections.List<com.apollographql.apollo.ast.GQLObjectField>){}[0]

    final val children // com.apollographql.apollo.ast/GQLObjectValue.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLObjectField> // com.apollographql.apollo.ast/GQLObjectValue.children.<get-children>|<get-children>(){}[0]
    final val fields // com.apollographql.apollo.ast/GQLObjectValue.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLObjectField> // com.apollographql.apollo.ast/GQLObjectValue.fields.<get-fields>|<get-fields>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLObjectValue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLObjectValue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLObjectField> = ...): com.apollographql.apollo.ast/GQLObjectValue // com.apollographql.apollo.ast/GQLObjectValue.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.collections.List<com.apollographql.apollo.ast.GQLObjectField>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLObjectValue.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLObjectValue.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLOperationDefinition : com.apollographql.apollo.ast/GQLDescribed, com.apollographql.apollo.ast/GQLExecutableDefinition, com.apollographql.apollo.ast/GQLHasDirectives { // com.apollographql.apollo.ast/GQLOperationDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin/String?, kotlin.collections/List<com.apollographql.apollo.ast/GQLVariableDefinition>, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection>, kotlin/String?) // com.apollographql.apollo.ast/GQLOperationDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.String?;kotlin.collections.List<com.apollographql.apollo.ast.GQLVariableDefinition>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLSelection>;kotlin.String?){}[0]

    final val children // com.apollographql.apollo.ast/GQLOperationDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLOperationDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLOperationDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLOperationDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLOperationDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLOperationDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLOperationDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String? // com.apollographql.apollo.ast/GQLOperationDefinition.name.<get-name>|<get-name>(){}[0]
    final val operationType // com.apollographql.apollo.ast/GQLOperationDefinition.operationType|{}operationType[0]
        final fun <get-operationType>(): kotlin/String // com.apollographql.apollo.ast/GQLOperationDefinition.operationType.<get-operationType>|<get-operationType>(){}[0]
    final val selectionSet // com.apollographql.apollo.ast/GQLOperationDefinition.selectionSet|{}selectionSet[0]
        final fun <get-selectionSet>(): com.apollographql.apollo.ast/GQLSelectionSet // com.apollographql.apollo.ast/GQLOperationDefinition.selectionSet.<get-selectionSet>|<get-selectionSet>(){}[0]
    final val selections // com.apollographql.apollo.ast/GQLOperationDefinition.selections|{}selections[0]
        final fun <get-selections>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> // com.apollographql.apollo.ast/GQLOperationDefinition.selections.<get-selections>|<get-selections>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLOperationDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLOperationDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val variableDefinitions // com.apollographql.apollo.ast/GQLOperationDefinition.variableDefinitions|{}variableDefinitions[0]
        final fun <get-variableDefinitions>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLVariableDefinition> // com.apollographql.apollo.ast/GQLOperationDefinition.variableDefinitions.<get-variableDefinitions>|<get-variableDefinitions>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin/String? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLVariableDefinition> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> = ..., kotlin/String? = ...): com.apollographql.apollo.ast/GQLOperationDefinition // com.apollographql.apollo.ast/GQLOperationDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.String?;kotlin.collections.List<com.apollographql.apollo.ast.GQLVariableDefinition>;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLSelection>;kotlin.String?){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLOperationDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLOperationDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLOperationTypeDefinition : com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLOperationTypeDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin/String) // com.apollographql.apollo.ast/GQLOperationTypeDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.String){}[0]

    final val children // com.apollographql.apollo.ast/GQLOperationTypeDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLOperationTypeDefinition.children.<get-children>|<get-children>(){}[0]
    final val namedType // com.apollographql.apollo.ast/GQLOperationTypeDefinition.namedType|{}namedType[0]
        final fun <get-namedType>(): kotlin/String // com.apollographql.apollo.ast/GQLOperationTypeDefinition.namedType.<get-namedType>|<get-namedType>(){}[0]
    final val operationType // com.apollographql.apollo.ast/GQLOperationTypeDefinition.operationType|{}operationType[0]
        final fun <get-operationType>(): kotlin/String // com.apollographql.apollo.ast/GQLOperationTypeDefinition.operationType.<get-operationType>|<get-operationType>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLOperationTypeDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLOperationTypeDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin/String = ...): com.apollographql.apollo.ast/GQLOperationTypeDefinition // com.apollographql.apollo.ast/GQLOperationTypeDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.String){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLOperationTypeDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLOperationTypeDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLScalarTypeDefinition : com.apollographql.apollo.ast/GQLTypeDefinition { // com.apollographql.apollo.ast/GQLScalarTypeDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>) // com.apollographql.apollo.ast/GQLScalarTypeDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]

    final val children // com.apollographql.apollo.ast/GQLScalarTypeDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLScalarTypeDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLScalarTypeDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLScalarTypeDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLScalarTypeDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLScalarTypeDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLScalarTypeDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLScalarTypeDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLScalarTypeDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLScalarTypeDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ...): com.apollographql.apollo.ast/GQLScalarTypeDefinition // com.apollographql.apollo.ast/GQLScalarTypeDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLScalarTypeDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLScalarTypeDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLScalarTypeExtension : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLTypeExtension { // com.apollographql.apollo.ast/GQLScalarTypeExtension|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>) // com.apollographql.apollo.ast/GQLScalarTypeExtension.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]

    final val children // com.apollographql.apollo.ast/GQLScalarTypeExtension.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLScalarTypeExtension.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLScalarTypeExtension.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLScalarTypeExtension.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLScalarTypeExtension.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLScalarTypeExtension.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLScalarTypeExtension.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLScalarTypeExtension.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ...): com.apollographql.apollo.ast/GQLScalarTypeExtension // com.apollographql.apollo.ast/GQLScalarTypeExtension.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLScalarTypeExtension.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLScalarTypeExtension.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLSchemaDefinition : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLDescribed, com.apollographql.apollo.ast/GQLHasDirectives { // com.apollographql.apollo.ast/GQLSchemaDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLOperationTypeDefinition>) // com.apollographql.apollo.ast/GQLSchemaDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLOperationTypeDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLSchemaDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLSchemaDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLSchemaDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLSchemaDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLSchemaDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLSchemaDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val rootOperationTypeDefinitions // com.apollographql.apollo.ast/GQLSchemaDefinition.rootOperationTypeDefinitions|{}rootOperationTypeDefinitions[0]
        final fun <get-rootOperationTypeDefinitions>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLOperationTypeDefinition> // com.apollographql.apollo.ast/GQLSchemaDefinition.rootOperationTypeDefinitions.<get-rootOperationTypeDefinitions>|<get-rootOperationTypeDefinitions>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLSchemaDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLSchemaDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLOperationTypeDefinition> = ...): com.apollographql.apollo.ast/GQLSchemaDefinition // com.apollographql.apollo.ast/GQLSchemaDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLOperationTypeDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLSchemaDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLSchemaDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLSchemaExtension : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLTypeSystemExtension { // com.apollographql.apollo.ast/GQLSchemaExtension|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLOperationTypeDefinition>) // com.apollographql.apollo.ast/GQLSchemaExtension.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLOperationTypeDefinition>){}[0]

    final val children // com.apollographql.apollo.ast/GQLSchemaExtension.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLSchemaExtension.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLSchemaExtension.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLSchemaExtension.directives.<get-directives>|<get-directives>(){}[0]
    final val operationTypeDefinitions // com.apollographql.apollo.ast/GQLSchemaExtension.operationTypeDefinitions|{}operationTypeDefinitions[0]
        final fun <get-operationTypeDefinitions>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLOperationTypeDefinition> // com.apollographql.apollo.ast/GQLSchemaExtension.operationTypeDefinitions.<get-operationTypeDefinitions>|<get-operationTypeDefinitions>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLSchemaExtension.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLSchemaExtension.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLOperationTypeDefinition> = ...): com.apollographql.apollo.ast/GQLSchemaExtension // com.apollographql.apollo.ast/GQLSchemaExtension.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLOperationTypeDefinition>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLSchemaExtension.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLSchemaExtension.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLSelectionSet : com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLSelectionSet|null[0]
    constructor <init>(kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection>, com.apollographql.apollo.ast/SourceLocation? = ...) // com.apollographql.apollo.ast/GQLSelectionSet.<init>|<init>(kotlin.collections.List<com.apollographql.apollo.ast.GQLSelection>;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val children // com.apollographql.apollo.ast/GQLSelectionSet.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> // com.apollographql.apollo.ast/GQLSelectionSet.children.<get-children>|<get-children>(){}[0]
    final val selections // com.apollographql.apollo.ast/GQLSelectionSet.selections|{}selections[0]
        final fun <get-selections>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> // com.apollographql.apollo.ast/GQLSelectionSet.selections.<get-selections>|<get-selections>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLSelectionSet.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLSelectionSet.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> = ..., com.apollographql.apollo.ast/SourceLocation? = ...): com.apollographql.apollo.ast/GQLSelectionSet // com.apollographql.apollo.ast/GQLSelectionSet.copy|copy(kotlin.collections.List<com.apollographql.apollo.ast.GQLSelection>;com.apollographql.apollo.ast.SourceLocation?){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLSelectionSet.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLSelectionSet.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLStringValue : com.apollographql.apollo.ast/GQLValue { // com.apollographql.apollo.ast/GQLStringValue|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String) // com.apollographql.apollo.ast/GQLStringValue.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]

    final val children // com.apollographql.apollo.ast/GQLStringValue.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLStringValue.children.<get-children>|<get-children>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLStringValue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLStringValue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val value // com.apollographql.apollo.ast/GQLStringValue.value|{}value[0]
        final fun <get-value>(): kotlin/String // com.apollographql.apollo.ast/GQLStringValue.value.<get-value>|<get-value>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ...): com.apollographql.apollo.ast/GQLStringValue // com.apollographql.apollo.ast/GQLStringValue.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLStringValue.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLStringValue.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLUnionTypeDefinition : com.apollographql.apollo.ast/GQLTypeDefinition { // com.apollographql.apollo.ast/GQLUnionTypeDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String?, kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLNamedType>) // com.apollographql.apollo.ast/GQLUnionTypeDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLNamedType>){}[0]

    final val children // com.apollographql.apollo.ast/GQLUnionTypeDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLUnionTypeDefinition.children.<get-children>|<get-children>(){}[0]
    final val description // com.apollographql.apollo.ast/GQLUnionTypeDefinition.description|{}description[0]
        final fun <get-description>(): kotlin/String? // com.apollographql.apollo.ast/GQLUnionTypeDefinition.description.<get-description>|<get-description>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLUnionTypeDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLUnionTypeDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val memberTypes // com.apollographql.apollo.ast/GQLUnionTypeDefinition.memberTypes|{}memberTypes[0]
        final fun <get-memberTypes>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNamedType> // com.apollographql.apollo.ast/GQLUnionTypeDefinition.memberTypes.<get-memberTypes>|<get-memberTypes>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLUnionTypeDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLUnionTypeDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLUnionTypeDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLUnionTypeDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLNamedType> = ...): com.apollographql.apollo.ast/GQLUnionTypeDefinition // com.apollographql.apollo.ast/GQLUnionTypeDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLNamedType>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLUnionTypeDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLUnionTypeDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLUnionTypeExtension : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLTypeExtension { // com.apollographql.apollo.ast/GQLUnionTypeExtension|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>, kotlin.collections/List<com.apollographql.apollo.ast/GQLNamedType>) // com.apollographql.apollo.ast/GQLUnionTypeExtension.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLNamedType>){}[0]

    final val children // com.apollographql.apollo.ast/GQLUnionTypeExtension.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLUnionTypeExtension.children.<get-children>|<get-children>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLUnionTypeExtension.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLUnionTypeExtension.directives.<get-directives>|<get-directives>(){}[0]
    final val memberTypes // com.apollographql.apollo.ast/GQLUnionTypeExtension.memberTypes|{}memberTypes[0]
        final fun <get-memberTypes>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNamedType> // com.apollographql.apollo.ast/GQLUnionTypeExtension.memberTypes.<get-memberTypes>|<get-memberTypes>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLUnionTypeExtension.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLUnionTypeExtension.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLUnionTypeExtension.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLUnionTypeExtension.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLNamedType> = ...): com.apollographql.apollo.ast/GQLUnionTypeExtension // com.apollographql.apollo.ast/GQLUnionTypeExtension.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>;kotlin.collections.List<com.apollographql.apollo.ast.GQLNamedType>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLUnionTypeExtension.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLUnionTypeExtension.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLVariableDefinition : com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLNode { // com.apollographql.apollo.ast/GQLVariableDefinition|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String, com.apollographql.apollo.ast/GQLType, com.apollographql.apollo.ast/GQLValue?, kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>) // com.apollographql.apollo.ast/GQLVariableDefinition.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;com.apollographql.apollo.ast.GQLType;com.apollographql.apollo.ast.GQLValue?;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]

    final val children // com.apollographql.apollo.ast/GQLVariableDefinition.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLVariableDefinition.children.<get-children>|<get-children>(){}[0]
    final val defaultValue // com.apollographql.apollo.ast/GQLVariableDefinition.defaultValue|{}defaultValue[0]
        final fun <get-defaultValue>(): com.apollographql.apollo.ast/GQLValue? // com.apollographql.apollo.ast/GQLVariableDefinition.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]
    final val directives // com.apollographql.apollo.ast/GQLVariableDefinition.directives|{}directives[0]
        final fun <get-directives>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> // com.apollographql.apollo.ast/GQLVariableDefinition.directives.<get-directives>|<get-directives>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLVariableDefinition.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLVariableDefinition.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLVariableDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLVariableDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
    final val type // com.apollographql.apollo.ast/GQLVariableDefinition.type|{}type[0]
        final fun <get-type>(): com.apollographql.apollo.ast/GQLType // com.apollographql.apollo.ast/GQLVariableDefinition.type.<get-type>|<get-type>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ..., com.apollographql.apollo.ast/GQLType = ..., com.apollographql.apollo.ast/GQLValue? = ..., kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective> = ...): com.apollographql.apollo.ast/GQLVariableDefinition // com.apollographql.apollo.ast/GQLVariableDefinition.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String;com.apollographql.apollo.ast.GQLType;com.apollographql.apollo.ast.GQLValue?;kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLVariableDefinition.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLVariableDefinition.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/GQLVariableValue : com.apollographql.apollo.ast/GQLNamed, com.apollographql.apollo.ast/GQLValue { // com.apollographql.apollo.ast/GQLVariableValue|null[0]
    constructor <init>(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String) // com.apollographql.apollo.ast/GQLVariableValue.<init>|<init>(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]

    final val children // com.apollographql.apollo.ast/GQLVariableValue.children|{}children[0]
        final fun <get-children>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/GQLVariableValue.children.<get-children>|<get-children>(){}[0]
    final val name // com.apollographql.apollo.ast/GQLVariableValue.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/GQLVariableValue.name.<get-name>|<get-name>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/GQLVariableValue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/GQLVariableValue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final fun copy(com.apollographql.apollo.ast/SourceLocation? = ..., kotlin/String = ...): com.apollographql.apollo.ast/GQLVariableValue // com.apollographql.apollo.ast/GQLVariableValue.copy|copy(com.apollographql.apollo.ast.SourceLocation?;kotlin.String){}[0]
    final fun copyWithNewChildrenInternal(com.apollographql.apollo.ast/NodeContainer): com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLVariableValue.copyWithNewChildrenInternal|copyWithNewChildrenInternal(com.apollographql.apollo.ast.NodeContainer){}[0]
    final fun writeInternal(com.apollographql.apollo.ast/SDLWriter) // com.apollographql.apollo.ast/GQLVariableValue.writeInternal|writeInternal(com.apollographql.apollo.ast.SDLWriter){}[0]
}

final class com.apollographql.apollo.ast/IncompatibleDefinition : com.apollographql.apollo.ast/GraphQLValidationIssue { // com.apollographql.apollo.ast/IncompatibleDefinition|null[0]
    constructor <init>(kotlin/String, kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/IncompatibleDefinition.<init>|<init>(kotlin.String;kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/IncompatibleDefinition.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/IncompatibleDefinition.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/IncompatibleDefinition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/IncompatibleDefinition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/InferredVariable { // com.apollographql.apollo.ast/InferredVariable|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/GQLType) // com.apollographql.apollo.ast/InferredVariable.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.GQLType){}[0]

    final val name // com.apollographql.apollo.ast/InferredVariable.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.apollographql.apollo.ast/InferredVariable.name.<get-name>|<get-name>(){}[0]
    final val type // com.apollographql.apollo.ast/InferredVariable.type|{}type[0]
        final fun <get-type>(): com.apollographql.apollo.ast/GQLType // com.apollographql.apollo.ast/InferredVariable.type.<get-type>|<get-type>(){}[0]
}

final class com.apollographql.apollo.ast/InlineFragmentWithoutTypeCondition : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/InlineFragmentWithoutTypeCondition|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/InlineFragmentWithoutTypeCondition.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/InlineFragmentWithoutTypeCondition.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/InlineFragmentWithoutTypeCondition.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/InlineFragmentWithoutTypeCondition.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/InlineFragmentWithoutTypeCondition.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/InvalidDeferDirective : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/InvalidDeferDirective|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/InvalidDeferDirective.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/InvalidDeferDirective.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/InvalidDeferDirective.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/InvalidDeferDirective.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/InvalidDeferDirective.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/InvalidDeferLabel : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/InvalidDeferLabel|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/InvalidDeferLabel.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/InvalidDeferLabel.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/InvalidDeferLabel.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/InvalidDeferLabel.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/InvalidDeferLabel.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/NoQueryType : com.apollographql.apollo.ast/GraphQLValidationIssue { // com.apollographql.apollo.ast/NoQueryType|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/NoQueryType.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/NoQueryType.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/NoQueryType.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/NoQueryType.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/NoQueryType.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/NodeContainer { // com.apollographql.apollo.ast/NodeContainer|null[0]
    constructor <init>(kotlin.collections/List<com.apollographql.apollo.ast/GQLNode>) // com.apollographql.apollo.ast/NodeContainer.<init>|<init>(kotlin.collections.List<com.apollographql.apollo.ast.GQLNode>){}[0]

    final var remainingNodes // com.apollographql.apollo.ast/NodeContainer.remainingNodes|{}remainingNodes[0]
        final fun <get-remainingNodes>(): kotlin.collections/List<com.apollographql.apollo.ast/GQLNode> // com.apollographql.apollo.ast/NodeContainer.remainingNodes.<get-remainingNodes>|<get-remainingNodes>(){}[0]
        final fun <set-remainingNodes>(kotlin.collections/List<com.apollographql.apollo.ast/GQLNode>) // com.apollographql.apollo.ast/NodeContainer.remainingNodes.<set-remainingNodes>|<set-remainingNodes>(kotlin.collections.List<com.apollographql.apollo.ast.GQLNode>){}[0]

    final fun assert() // com.apollographql.apollo.ast/NodeContainer.assert|assert(){}[0]
    final inline fun <#A1: reified com.apollographql.apollo.ast/GQLNode> take(): kotlin.collections/List<#A1> // com.apollographql.apollo.ast/NodeContainer.take|take(){0§<com.apollographql.apollo.ast.GQLNode>}[0]
    final inline fun <#A1: reified com.apollographql.apollo.ast/GQLNode> takeSingle(): #A1? // com.apollographql.apollo.ast/NodeContainer.takeSingle|takeSingle(){0§<com.apollographql.apollo.ast.GQLNode>}[0]
}

final class com.apollographql.apollo.ast/OtherValidationIssue : com.apollographql.apollo.ast/GraphQLValidationIssue { // com.apollographql.apollo.ast/OtherValidationIssue|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/OtherValidationIssue.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/OtherValidationIssue.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/OtherValidationIssue.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/OtherValidationIssue.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/OtherValidationIssue.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/ParserOptions { // com.apollographql.apollo.ast/ParserOptions|null[0]
    final val allowEmptyDocuments // com.apollographql.apollo.ast/ParserOptions.allowEmptyDocuments|{}allowEmptyDocuments[0]
        final fun <get-allowEmptyDocuments>(): kotlin/Boolean // com.apollographql.apollo.ast/ParserOptions.allowEmptyDocuments.<get-allowEmptyDocuments>|<get-allowEmptyDocuments>(){}[0]
    final val withSourceLocation // com.apollographql.apollo.ast/ParserOptions.withSourceLocation|{}withSourceLocation[0]
        final fun <get-withSourceLocation>(): kotlin/Boolean // com.apollographql.apollo.ast/ParserOptions.withSourceLocation.<get-withSourceLocation>|<get-withSourceLocation>(){}[0]

    final class Builder { // com.apollographql.apollo.ast/ParserOptions.Builder|null[0]
        constructor <init>() // com.apollographql.apollo.ast/ParserOptions.Builder.<init>|<init>(){}[0]

        final var allowEmptyDocuments // com.apollographql.apollo.ast/ParserOptions.Builder.allowEmptyDocuments|{}allowEmptyDocuments[0]
            final fun <get-allowEmptyDocuments>(): kotlin/Boolean // com.apollographql.apollo.ast/ParserOptions.Builder.allowEmptyDocuments.<get-allowEmptyDocuments>|<get-allowEmptyDocuments>(){}[0]
            final fun <set-allowEmptyDocuments>(kotlin/Boolean) // com.apollographql.apollo.ast/ParserOptions.Builder.allowEmptyDocuments.<set-allowEmptyDocuments>|<set-allowEmptyDocuments>(kotlin.Boolean){}[0]
        final var withSourceLocation // com.apollographql.apollo.ast/ParserOptions.Builder.withSourceLocation|{}withSourceLocation[0]
            final fun <get-withSourceLocation>(): kotlin/Boolean // com.apollographql.apollo.ast/ParserOptions.Builder.withSourceLocation.<get-withSourceLocation>|<get-withSourceLocation>(){}[0]
            final fun <set-withSourceLocation>(kotlin/Boolean) // com.apollographql.apollo.ast/ParserOptions.Builder.withSourceLocation.<set-withSourceLocation>|<set-withSourceLocation>(kotlin.Boolean){}[0]

        final fun allowEmptyDocuments(kotlin/Boolean): com.apollographql.apollo.ast/ParserOptions.Builder // com.apollographql.apollo.ast/ParserOptions.Builder.allowEmptyDocuments|allowEmptyDocuments(kotlin.Boolean){}[0]
        final fun build(): com.apollographql.apollo.ast/ParserOptions // com.apollographql.apollo.ast/ParserOptions.Builder.build|build(){}[0]
        final fun withSourceLocation(kotlin/Boolean): com.apollographql.apollo.ast/ParserOptions.Builder // com.apollographql.apollo.ast/ParserOptions.Builder.withSourceLocation|withSourceLocation(kotlin.Boolean){}[0]
    }

    final object Companion { // com.apollographql.apollo.ast/ParserOptions.Companion|null[0]
        final val Default // com.apollographql.apollo.ast/ParserOptions.Companion.Default|{}Default[0]
            final fun <get-Default>(): com.apollographql.apollo.ast/ParserOptions // com.apollographql.apollo.ast/ParserOptions.Companion.Default.<get-Default>|<get-Default>(){}[0]
    }
}

final class com.apollographql.apollo.ast/ParsingError : com.apollographql.apollo.ast/GraphQLIssue { // com.apollographql.apollo.ast/ParsingError|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/ParsingError.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/ParsingError.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/ParsingError.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/ParsingError.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/ParsingError.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/ReservedEnumValueName : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/ReservedEnumValueName|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/ReservedEnumValueName.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/ReservedEnumValueName.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/ReservedEnumValueName.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/ReservedEnumValueName.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/ReservedEnumValueName.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/Schema { // com.apollographql.apollo.ast/Schema|null[0]
    final val directiveDefinitions // com.apollographql.apollo.ast/Schema.directiveDefinitions|{}directiveDefinitions[0]
        final fun <get-directiveDefinitions>(): kotlin.collections/Map<kotlin/String, com.apollographql.apollo.ast/GQLDirectiveDefinition> // com.apollographql.apollo.ast/Schema.directiveDefinitions.<get-directiveDefinitions>|<get-directiveDefinitions>(){}[0]
    final val errorAware // com.apollographql.apollo.ast/Schema.errorAware|{}errorAware[0]
        final fun <get-errorAware>(): kotlin/Boolean // com.apollographql.apollo.ast/Schema.errorAware.<get-errorAware>|<get-errorAware>(){}[0]
    final val foreignNames // com.apollographql.apollo.ast/Schema.foreignNames|{}foreignNames[0]
        final fun <get-foreignNames>(): kotlin.collections/Map<kotlin/String, kotlin/String> // com.apollographql.apollo.ast/Schema.foreignNames.<get-foreignNames>|<get-foreignNames>(){}[0]
    final val mutationTypeDefinition // com.apollographql.apollo.ast/Schema.mutationTypeDefinition|{}mutationTypeDefinition[0]
        final fun <get-mutationTypeDefinition>(): com.apollographql.apollo.ast/GQLTypeDefinition? // com.apollographql.apollo.ast/Schema.mutationTypeDefinition.<get-mutationTypeDefinition>|<get-mutationTypeDefinition>(){}[0]
    final val queryTypeDefinition // com.apollographql.apollo.ast/Schema.queryTypeDefinition|{}queryTypeDefinition[0]
        final fun <get-queryTypeDefinition>(): com.apollographql.apollo.ast/GQLTypeDefinition // com.apollographql.apollo.ast/Schema.queryTypeDefinition.<get-queryTypeDefinition>|<get-queryTypeDefinition>(){}[0]
    final val subscriptionTypeDefinition // com.apollographql.apollo.ast/Schema.subscriptionTypeDefinition|{}subscriptionTypeDefinition[0]
        final fun <get-subscriptionTypeDefinition>(): com.apollographql.apollo.ast/GQLTypeDefinition? // com.apollographql.apollo.ast/Schema.subscriptionTypeDefinition.<get-subscriptionTypeDefinition>|<get-subscriptionTypeDefinition>(){}[0]
    final val typeDefinitions // com.apollographql.apollo.ast/Schema.typeDefinitions|{}typeDefinitions[0]
        final fun <get-typeDefinitions>(): kotlin.collections/Map<kotlin/String, com.apollographql.apollo.ast/GQLTypeDefinition> // com.apollographql.apollo.ast/Schema.typeDefinitions.<get-typeDefinitions>|<get-typeDefinitions>(){}[0]

    final fun hasTypeWithTypePolicy(): kotlin/Boolean // com.apollographql.apollo.ast/Schema.hasTypeWithTypePolicy|hasTypeWithTypePolicy(){}[0]
    final fun implementedTypes(kotlin/String): kotlin.collections/Set<kotlin/String> // com.apollographql.apollo.ast/Schema.implementedTypes|implementedTypes(kotlin.String){}[0]
    final fun isTypeASubTypeOf(kotlin/String, kotlin/String): kotlin/Boolean // com.apollographql.apollo.ast/Schema.isTypeASubTypeOf|isTypeASubTypeOf(kotlin.String;kotlin.String){}[0]
    final fun isTypeASuperTypeOf(kotlin/String, kotlin/String): kotlin/Boolean // com.apollographql.apollo.ast/Schema.isTypeASuperTypeOf|isTypeASuperTypeOf(kotlin.String;kotlin.String){}[0]
    final fun originalDirectiveName(kotlin/String): kotlin/String // com.apollographql.apollo.ast/Schema.originalDirectiveName|originalDirectiveName(kotlin.String){}[0]
    final fun originalTypeName(kotlin/String): kotlin/String // com.apollographql.apollo.ast/Schema.originalTypeName|originalTypeName(kotlin.String){}[0]
    final fun possibleTypes(com.apollographql.apollo.ast/GQLTypeDefinition): kotlin.collections/Set<kotlin/String> // com.apollographql.apollo.ast/Schema.possibleTypes|possibleTypes(com.apollographql.apollo.ast.GQLTypeDefinition){}[0]
    final fun possibleTypes(kotlin/String): kotlin.collections/Set<kotlin/String> // com.apollographql.apollo.ast/Schema.possibleTypes|possibleTypes(kotlin.String){}[0]
    final fun rootTypeNameFor(kotlin/String): kotlin/String // com.apollographql.apollo.ast/Schema.rootTypeNameFor|rootTypeNameFor(kotlin.String){}[0]
    final fun rootTypeNameOrNullFor(kotlin/String): kotlin/String? // com.apollographql.apollo.ast/Schema.rootTypeNameOrNullFor|rootTypeNameOrNullFor(kotlin.String){}[0]
    final fun superTypes(com.apollographql.apollo.ast/GQLObjectTypeDefinition): kotlin.collections/Set<kotlin/String> // com.apollographql.apollo.ast/Schema.superTypes|superTypes(com.apollographql.apollo.ast.GQLObjectTypeDefinition){}[0]
    final fun toGQLDocument(): com.apollographql.apollo.ast/GQLDocument // com.apollographql.apollo.ast/Schema.toGQLDocument|toGQLDocument(){}[0]
    final fun typeDefinition(kotlin/String): com.apollographql.apollo.ast/GQLTypeDefinition // com.apollographql.apollo.ast/Schema.typeDefinition|typeDefinition(kotlin.String){}[0]

    final object Companion { // com.apollographql.apollo.ast/Schema.Companion|null[0]
        final const val FIELD_POLICY // com.apollographql.apollo.ast/Schema.Companion.FIELD_POLICY|{}FIELD_POLICY[0]
            final fun <get-FIELD_POLICY>(): kotlin/String // com.apollographql.apollo.ast/Schema.Companion.FIELD_POLICY.<get-FIELD_POLICY>|<get-FIELD_POLICY>(){}[0]
        final const val FIELD_POLICY_FOR_FIELD // com.apollographql.apollo.ast/Schema.Companion.FIELD_POLICY_FOR_FIELD|{}FIELD_POLICY_FOR_FIELD[0]
            final fun <get-FIELD_POLICY_FOR_FIELD>(): kotlin/String // com.apollographql.apollo.ast/Schema.Companion.FIELD_POLICY_FOR_FIELD.<get-FIELD_POLICY_FOR_FIELD>|<get-FIELD_POLICY_FOR_FIELD>(){}[0]
        final const val FIELD_POLICY_KEY_ARGS // com.apollographql.apollo.ast/Schema.Companion.FIELD_POLICY_KEY_ARGS|{}FIELD_POLICY_KEY_ARGS[0]
            final fun <get-FIELD_POLICY_KEY_ARGS>(): kotlin/String // com.apollographql.apollo.ast/Schema.Companion.FIELD_POLICY_KEY_ARGS.<get-FIELD_POLICY_KEY_ARGS>|<get-FIELD_POLICY_KEY_ARGS>(){}[0]
        final const val NONNULL // com.apollographql.apollo.ast/Schema.Companion.NONNULL|{}NONNULL[0]
            final fun <get-NONNULL>(): kotlin/String // com.apollographql.apollo.ast/Schema.Companion.NONNULL.<get-NONNULL>|<get-NONNULL>(){}[0]
        final const val OPTIONAL // com.apollographql.apollo.ast/Schema.Companion.OPTIONAL|{}OPTIONAL[0]
            final fun <get-OPTIONAL>(): kotlin/String // com.apollographql.apollo.ast/Schema.Companion.OPTIONAL.<get-OPTIONAL>|<get-OPTIONAL>(){}[0]
        final const val REQUIRES_OPT_IN // com.apollographql.apollo.ast/Schema.Companion.REQUIRES_OPT_IN|{}REQUIRES_OPT_IN[0]
            final fun <get-REQUIRES_OPT_IN>(): kotlin/String // com.apollographql.apollo.ast/Schema.Companion.REQUIRES_OPT_IN.<get-REQUIRES_OPT_IN>|<get-REQUIRES_OPT_IN>(){}[0]
        final const val TARGET_NAME // com.apollographql.apollo.ast/Schema.Companion.TARGET_NAME|{}TARGET_NAME[0]
            final fun <get-TARGET_NAME>(): kotlin/String // com.apollographql.apollo.ast/Schema.Companion.TARGET_NAME.<get-TARGET_NAME>|<get-TARGET_NAME>(){}[0]
        final const val TYPE_POLICY // com.apollographql.apollo.ast/Schema.Companion.TYPE_POLICY|{}TYPE_POLICY[0]
            final fun <get-TYPE_POLICY>(): kotlin/String // com.apollographql.apollo.ast/Schema.Companion.TYPE_POLICY.<get-TYPE_POLICY>|<get-TYPE_POLICY>(){}[0]
    }
}

final class com.apollographql.apollo.ast/SchemaValidationException : com.apollographql.apollo.ast/SourceAwareException { // com.apollographql.apollo.ast/SchemaValidationException|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation? = ...) // com.apollographql.apollo.ast/SchemaValidationException.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]
}

final class com.apollographql.apollo.ast/SourceLocation { // com.apollographql.apollo.ast/SourceLocation|null[0]
    constructor <init>(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/String?) // com.apollographql.apollo.ast/SourceLocation.<init>|<init>(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.String?){}[0]

    final val column // com.apollographql.apollo.ast/SourceLocation.column|{}column[0]
        final fun <get-column>(): kotlin/Int // com.apollographql.apollo.ast/SourceLocation.column.<get-column>|<get-column>(){}[0]
    final val end // com.apollographql.apollo.ast/SourceLocation.end|{}end[0]
        final fun <get-end>(): kotlin/Int // com.apollographql.apollo.ast/SourceLocation.end.<get-end>|<get-end>(){}[0]
    final val filePath // com.apollographql.apollo.ast/SourceLocation.filePath|{}filePath[0]
        final fun <get-filePath>(): kotlin/String? // com.apollographql.apollo.ast/SourceLocation.filePath.<get-filePath>|<get-filePath>(){}[0]
    final val line // com.apollographql.apollo.ast/SourceLocation.line|{}line[0]
        final fun <get-line>(): kotlin/Int // com.apollographql.apollo.ast/SourceLocation.line.<get-line>|<get-line>(){}[0]
    final val position // com.apollographql.apollo.ast/SourceLocation.position|{}position[0]
        final fun <get-position>(): kotlin/Int // com.apollographql.apollo.ast/SourceLocation.position.<get-position>|<get-position>(){}[0]
    final val start // com.apollographql.apollo.ast/SourceLocation.start|{}start[0]
        final fun <get-start>(): kotlin/Int // com.apollographql.apollo.ast/SourceLocation.start.<get-start>|<get-start>(){}[0]

    final fun pretty(): kotlin/String // com.apollographql.apollo.ast/SourceLocation.pretty|pretty(){}[0]
    final fun toString(): kotlin/String // com.apollographql.apollo.ast/SourceLocation.toString|toString(){}[0]

    final object Companion { // com.apollographql.apollo.ast/SourceLocation.Companion|null[0]
        final val UNKNOWN // com.apollographql.apollo.ast/SourceLocation.Companion.UNKNOWN|{}UNKNOWN[0]
            final fun <get-UNKNOWN>(): com.apollographql.apollo.ast/SourceLocation // com.apollographql.apollo.ast/SourceLocation.Companion.UNKNOWN.<get-UNKNOWN>|<get-UNKNOWN>(){}[0]
    }
}

final class com.apollographql.apollo.ast/UnknownDirective : com.apollographql.apollo.ast/GraphQLValidationIssue { // com.apollographql.apollo.ast/UnknownDirective|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/UnknownDirective.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/UnknownDirective.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/UnknownDirective.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/UnknownDirective.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/UnknownDirective.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/UnusedFragment : com.apollographql.apollo.ast/GraphQLValidationIssue { // com.apollographql.apollo.ast/UnusedFragment|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/UnusedFragment.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/UnusedFragment.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/UnusedFragment.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/UnusedFragment.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/UnusedFragment.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/UnusedVariable : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/UnusedVariable|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/UnusedVariable.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/UnusedVariable.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/UnusedVariable.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/UnusedVariable.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/UnusedVariable.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/UpperCaseField : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/UpperCaseField|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/UpperCaseField.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/UpperCaseField.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/UpperCaseField.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/UpperCaseField.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/UpperCaseField.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/VariableDeferLabel : com.apollographql.apollo.ast/ApolloIssue { // com.apollographql.apollo.ast/VariableDeferLabel|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/VariableDeferLabel.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val message // com.apollographql.apollo.ast/VariableDeferLabel.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.apollographql.apollo.ast/VariableDeferLabel.message.<get-message>|<get-message>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/VariableDeferLabel.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/VariableDeferLabel.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]
}

final class com.apollographql.apollo.ast/VariableUsage { // com.apollographql.apollo.ast/VariableUsage|null[0]
    constructor <init>(com.apollographql.apollo.ast/GQLVariableValue, com.apollographql.apollo.ast/GQLType, kotlin/Boolean, kotlin/Boolean) // com.apollographql.apollo.ast/VariableUsage.<init>|<init>(com.apollographql.apollo.ast.GQLVariableValue;com.apollographql.apollo.ast.GQLType;kotlin.Boolean;kotlin.Boolean){}[0]

    final val hasLocationDefaultValue // com.apollographql.apollo.ast/VariableUsage.hasLocationDefaultValue|{}hasLocationDefaultValue[0]
        final fun <get-hasLocationDefaultValue>(): kotlin/Boolean // com.apollographql.apollo.ast/VariableUsage.hasLocationDefaultValue.<get-hasLocationDefaultValue>|<get-hasLocationDefaultValue>(){}[0]
    final val isOneOfInputField // com.apollographql.apollo.ast/VariableUsage.isOneOfInputField|{}isOneOfInputField[0]
        final fun <get-isOneOfInputField>(): kotlin/Boolean // com.apollographql.apollo.ast/VariableUsage.isOneOfInputField.<get-isOneOfInputField>|<get-isOneOfInputField>(){}[0]
    final val locationType // com.apollographql.apollo.ast/VariableUsage.locationType|{}locationType[0]
        final fun <get-locationType>(): com.apollographql.apollo.ast/GQLType // com.apollographql.apollo.ast/VariableUsage.locationType.<get-locationType>|<get-locationType>(){}[0]
    final val variable // com.apollographql.apollo.ast/VariableUsage.variable|{}variable[0]
        final fun <get-variable>(): com.apollographql.apollo.ast/GQLVariableValue // com.apollographql.apollo.ast/VariableUsage.variable.<get-variable>|<get-variable>(){}[0]
}

open class com.apollographql.apollo.ast/SourceAwareException : kotlin/RuntimeException { // com.apollographql.apollo.ast/SourceAwareException|null[0]
    constructor <init>(kotlin/String, com.apollographql.apollo.ast/SourceLocation?) // com.apollographql.apollo.ast/SourceAwareException.<init>|<init>(kotlin.String;com.apollographql.apollo.ast.SourceLocation?){}[0]

    final val error // com.apollographql.apollo.ast/SourceAwareException.error|{}error[0]
        final fun <get-error>(): kotlin/String // com.apollographql.apollo.ast/SourceAwareException.error.<get-error>|<get-error>(){}[0]
    final val sourceLocation // com.apollographql.apollo.ast/SourceAwareException.sourceLocation|{}sourceLocation[0]
        final fun <get-sourceLocation>(): com.apollographql.apollo.ast/SourceLocation? // com.apollographql.apollo.ast/SourceAwareException.sourceLocation.<get-sourceLocation>|<get-sourceLocation>(){}[0]

    final object Companion // com.apollographql.apollo.ast/SourceAwareException.Companion|null[0]
}

sealed class com.apollographql.apollo.ast/GQLSelection : com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLSelection|null[0]

sealed class com.apollographql.apollo.ast/GQLType : com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLType|null[0]

sealed class com.apollographql.apollo.ast/GQLTypeDefinition : com.apollographql.apollo.ast/GQLDefinition, com.apollographql.apollo.ast/GQLDescribed, com.apollographql.apollo.ast/GQLHasDirectives, com.apollographql.apollo.ast/GQLNamed { // com.apollographql.apollo.ast/GQLTypeDefinition|null[0]
    final fun isBuiltIn(): kotlin/Boolean // com.apollographql.apollo.ast/GQLTypeDefinition.isBuiltIn|isBuiltIn(){}[0]

    final object Companion { // com.apollographql.apollo.ast/GQLTypeDefinition.Companion|null[0]
        final val builtInTypes // com.apollographql.apollo.ast/GQLTypeDefinition.Companion.builtInTypes|{}builtInTypes[0]
            final fun <get-builtInTypes>(): kotlin.collections/Set<kotlin/String> // com.apollographql.apollo.ast/GQLTypeDefinition.Companion.builtInTypes.<get-builtInTypes>|<get-builtInTypes>(){}[0]
    }
}

sealed class com.apollographql.apollo.ast/GQLValue : com.apollographql.apollo.ast/GQLNode // com.apollographql.apollo.ast/GQLValue|null[0]

final object com.apollographql.apollo.ast/QueryDocumentMinifier { // com.apollographql.apollo.ast/QueryDocumentMinifier|null[0]
    final fun minify(kotlin/String): kotlin/String // com.apollographql.apollo.ast/QueryDocumentMinifier.minify|minify(kotlin.String){}[0]
}

final fun (com.apollographql.apollo.ast.introspection/ApolloIntrospectionSchema).com.apollographql.apollo.ast.introspection/toJson(): kotlin/String // com.apollographql.apollo.ast.introspection/toJson|toJson@com.apollographql.apollo.ast.introspection.ApolloIntrospectionSchema(){}[0]
final fun (com.apollographql.apollo.ast.introspection/IntrospectionSchema).com.apollographql.apollo.ast.introspection/toGQLDocument(): com.apollographql.apollo.ast/GQLDocument // com.apollographql.apollo.ast.introspection/toGQLDocument|toGQLDocument@com.apollographql.apollo.ast.introspection.IntrospectionSchema(){}[0]
final fun (com.apollographql.apollo.ast/GQLDocument).com.apollographql.apollo.ast.introspection/toIntrospectionSchema(): com.apollographql.apollo.ast.introspection/ApolloIntrospectionSchema // com.apollographql.apollo.ast.introspection/toIntrospectionSchema|toIntrospectionSchema@com.apollographql.apollo.ast.GQLDocument(){}[0]
final fun (com.apollographql.apollo.ast/GQLDocument).com.apollographql.apollo.ast/toSchema(): com.apollographql.apollo.ast/Schema // com.apollographql.apollo.ast/toSchema|toSchema@com.apollographql.apollo.ast.GQLDocument(){}[0]
final fun (com.apollographql.apollo.ast/GQLDocument).com.apollographql.apollo.ast/withBuiltinDefinitions(): com.apollographql.apollo.ast/GQLDocument // com.apollographql.apollo.ast/withBuiltinDefinitions|withBuiltinDefinitions@com.apollographql.apollo.ast.GQLDocument(){}[0]
final fun (com.apollographql.apollo.ast/GQLDocument).com.apollographql.apollo.ast/withoutBuiltinDefinitions(): com.apollographql.apollo.ast/GQLDocument // com.apollographql.apollo.ast/withoutBuiltinDefinitions|withoutBuiltinDefinitions@com.apollographql.apollo.ast.GQLDocument(){}[0]
final fun (com.apollographql.apollo.ast/GQLField).com.apollographql.apollo.ast/definitionFromScope(com.apollographql.apollo.ast/Schema, com.apollographql.apollo.ast/GQLTypeDefinition): com.apollographql.apollo.ast/GQLFieldDefinition? // com.apollographql.apollo.ast/definitionFromScope|definitionFromScope@com.apollographql.apollo.ast.GQLField(com.apollographql.apollo.ast.Schema;com.apollographql.apollo.ast.GQLTypeDefinition){}[0]
final fun (com.apollographql.apollo.ast/GQLField).com.apollographql.apollo.ast/definitionFromScope(com.apollographql.apollo.ast/Schema, kotlin/String): com.apollographql.apollo.ast/GQLFieldDefinition? // com.apollographql.apollo.ast/definitionFromScope|definitionFromScope@com.apollographql.apollo.ast.GQLField(com.apollographql.apollo.ast.Schema;kotlin.String){}[0]
final fun (com.apollographql.apollo.ast/GQLField).com.apollographql.apollo.ast/responseName(): kotlin/String // com.apollographql.apollo.ast/responseName|responseName@com.apollographql.apollo.ast.GQLField(){}[0]
final fun (com.apollographql.apollo.ast/GQLNode).com.apollographql.apollo.ast/toUtf8(kotlin/String = ...): kotlin/String // com.apollographql.apollo.ast/toUtf8|toUtf8@com.apollographql.apollo.ast.GQLNode(kotlin.String){}[0]
final fun (com.apollographql.apollo.ast/GQLOperationDefinition).com.apollographql.apollo.ast/rootTypeDefinition(com.apollographql.apollo.ast/Schema): com.apollographql.apollo.ast/GQLTypeDefinition? // com.apollographql.apollo.ast/rootTypeDefinition|rootTypeDefinition@com.apollographql.apollo.ast.GQLOperationDefinition(com.apollographql.apollo.ast.Schema){}[0]
final fun (com.apollographql.apollo.ast/GQLOperationDefinition).com.apollographql.apollo.ast/validate(com.apollographql.apollo.ast/Schema, kotlin.collections/Map<kotlin/String, com.apollographql.apollo.ast/GQLFragmentDefinition>): kotlin.collections/List<com.apollographql.apollo.ast/Issue> // com.apollographql.apollo.ast/validate|validate@com.apollographql.apollo.ast.GQLOperationDefinition(com.apollographql.apollo.ast.Schema;kotlin.collections.Map<kotlin.String,com.apollographql.apollo.ast.GQLFragmentDefinition>){}[0]
final fun (com.apollographql.apollo.ast/GQLType).com.apollographql.apollo.ast/leafType(): com.apollographql.apollo.ast/GQLNamedType // com.apollographql.apollo.ast/leafType|leafType@com.apollographql.apollo.ast.GQLType(){}[0]
final fun (com.apollographql.apollo.ast/GQLType).com.apollographql.apollo.ast/pretty(): kotlin/String // com.apollographql.apollo.ast/pretty|pretty@com.apollographql.apollo.ast.GQLType(){}[0]
final fun (com.apollographql.apollo.ast/GQLType).com.apollographql.apollo.ast/rawType(): com.apollographql.apollo.ast/GQLNamedType // com.apollographql.apollo.ast/rawType|rawType@com.apollographql.apollo.ast.GQLType(){}[0]
final fun (com.apollographql.apollo.ast/GQLTypeDefinition).com.apollographql.apollo.ast/canHaveKeyFields(): kotlin/Boolean // com.apollographql.apollo.ast/canHaveKeyFields|canHaveKeyFields@com.apollographql.apollo.ast.GQLTypeDefinition(){}[0]
final fun (com.apollographql.apollo.ast/GQLTypeDefinition).com.apollographql.apollo.ast/fieldDefinitions(com.apollographql.apollo.ast/Schema): kotlin.collections/List<com.apollographql.apollo.ast/GQLFieldDefinition> // com.apollographql.apollo.ast/fieldDefinitions|fieldDefinitions@com.apollographql.apollo.ast.GQLTypeDefinition(com.apollographql.apollo.ast.Schema){}[0]
final fun (com.apollographql.apollo.ast/GQLTypeDefinition).com.apollographql.apollo.ast/implementsAbstractType(com.apollographql.apollo.ast/Schema): kotlin/Boolean // com.apollographql.apollo.ast/implementsAbstractType|implementsAbstractType@com.apollographql.apollo.ast.GQLTypeDefinition(com.apollographql.apollo.ast.Schema){}[0]
final fun (com.apollographql.apollo.ast/GQLTypeDefinition).com.apollographql.apollo.ast/isAbstract(): kotlin/Boolean // com.apollographql.apollo.ast/isAbstract|isAbstract@com.apollographql.apollo.ast.GQLTypeDefinition(){}[0]
final fun (com.apollographql.apollo.ast/GQLTypeDefinition).com.apollographql.apollo.ast/possibleTypes(com.apollographql.apollo.ast/Schema): kotlin.collections/Set<kotlin/String> // com.apollographql.apollo.ast/possibleTypes|possibleTypes@com.apollographql.apollo.ast.GQLTypeDefinition(com.apollographql.apollo.ast.Schema){}[0]
final fun (com.apollographql.apollo.ast/GQLValue).com.apollographql.apollo.ast/coerceInExecutableContextOrThrow(com.apollographql.apollo.ast/GQLType, com.apollographql.apollo.ast/Schema): com.apollographql.apollo.ast/GQLValue // com.apollographql.apollo.ast/coerceInExecutableContextOrThrow|coerceInExecutableContextOrThrow@com.apollographql.apollo.ast.GQLValue(com.apollographql.apollo.ast.GQLType;com.apollographql.apollo.ast.Schema){}[0]
final fun (com.apollographql.apollo.ast/GQLValue).com.apollographql.apollo.ast/coerceInSchemaContextOrThrow(com.apollographql.apollo.ast/GQLType, com.apollographql.apollo.ast/Schema): com.apollographql.apollo.ast/GQLValue // com.apollographql.apollo.ast/coerceInSchemaContextOrThrow|coerceInSchemaContextOrThrow@com.apollographql.apollo.ast.GQLValue(com.apollographql.apollo.ast.GQLType;com.apollographql.apollo.ast.Schema){}[0]
final fun (com.apollographql.apollo.ast/SourceLocation?).com.apollographql.apollo.ast/pretty(): kotlin/String // com.apollographql.apollo.ast/pretty|pretty@com.apollographql.apollo.ast.SourceLocation?(){}[0]
final fun (kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>).com.apollographql.apollo.ast/findDeprecationReason(): kotlin/String? // com.apollographql.apollo.ast/findDeprecationReason|findDeprecationReason@kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>(){}[0]
final fun (kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>).com.apollographql.apollo.ast/findOneOf(): kotlin/Boolean // com.apollographql.apollo.ast/findOneOf|findOneOf@kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>(){}[0]
final fun (kotlin.collections/List<com.apollographql.apollo.ast/GQLDirective>).com.apollographql.apollo.ast/findSpecifiedBy(): kotlin/String? // com.apollographql.apollo.ast/findSpecifiedBy|findSpecifiedBy@kotlin.collections.List<com.apollographql.apollo.ast.GQLDirective>(){}[0]
final fun (kotlin.collections/List<com.apollographql.apollo.ast/Issue>).com.apollographql.apollo.ast/checkEmpty() // com.apollographql.apollo.ast/checkEmpty|checkEmpty@kotlin.collections.List<com.apollographql.apollo.ast.Issue>(){}[0]
final fun (kotlin.collections/List<com.apollographql.apollo.ast/Issue>).com.apollographql.apollo.ast/checkValidGraphQL() // com.apollographql.apollo.ast/checkValidGraphQL|checkValidGraphQL@kotlin.collections.List<com.apollographql.apollo.ast.Issue>(){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast.introspection/toIntrospectionSchema(): com.apollographql.apollo.ast.introspection/IntrospectionSchema // com.apollographql.apollo.ast.introspection/toIntrospectionSchema|toIntrospectionSchema@kotlin.String(){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/decodeAsGraphQLSingleQuoted(): kotlin/String // com.apollographql.apollo.ast/decodeAsGraphQLSingleQuoted|decodeAsGraphQLSingleQuoted@kotlin.String(){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/decodeAsGraphQLTripleQuoted(): kotlin/String // com.apollographql.apollo.ast/decodeAsGraphQLTripleQuoted|decodeAsGraphQLTripleQuoted@kotlin.String(){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/encodeToGraphQLSingleQuoted(): kotlin/String // com.apollographql.apollo.ast/encodeToGraphQLSingleQuoted|encodeToGraphQLSingleQuoted@kotlin.String(){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/encodeToGraphQLTripleQuoted(): kotlin/String // com.apollographql.apollo.ast/encodeToGraphQLTripleQuoted|encodeToGraphQLTripleQuoted@kotlin.String(){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/parseAsGQLDocument(com.apollographql.apollo.ast/ParserOptions = ...): com.apollographql.apollo.ast/GQLResult<com.apollographql.apollo.ast/GQLDocument> // com.apollographql.apollo.ast/parseAsGQLDocument|parseAsGQLDocument@kotlin.String(com.apollographql.apollo.ast.ParserOptions){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/parseAsGQLSelections(com.apollographql.apollo.ast/ParserOptions = ...): com.apollographql.apollo.ast/GQLResult<kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection>> // com.apollographql.apollo.ast/parseAsGQLSelections|parseAsGQLSelections@kotlin.String(com.apollographql.apollo.ast.ParserOptions){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/parseAsGQLType(com.apollographql.apollo.ast/ParserOptions = ...): com.apollographql.apollo.ast/GQLResult<com.apollographql.apollo.ast/GQLType> // com.apollographql.apollo.ast/parseAsGQLType|parseAsGQLType@kotlin.String(com.apollographql.apollo.ast.ParserOptions){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/parseAsGQLValue(com.apollographql.apollo.ast/ParserOptions = ...): com.apollographql.apollo.ast/GQLResult<com.apollographql.apollo.ast/GQLValue> // com.apollographql.apollo.ast/parseAsGQLValue|parseAsGQLValue@kotlin.String(com.apollographql.apollo.ast.ParserOptions){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/toGQLDocument(com.apollographql.apollo.ast/ParserOptions = ...): com.apollographql.apollo.ast/GQLDocument // com.apollographql.apollo.ast/toGQLDocument|toGQLDocument@kotlin.String(com.apollographql.apollo.ast.ParserOptions){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/toGQLSelections(com.apollographql.apollo.ast/ParserOptions = ...): kotlin.collections/List<com.apollographql.apollo.ast/GQLSelection> // com.apollographql.apollo.ast/toGQLSelections|toGQLSelections@kotlin.String(com.apollographql.apollo.ast.ParserOptions){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/toGQLType(com.apollographql.apollo.ast/ParserOptions = ...): com.apollographql.apollo.ast/GQLType // com.apollographql.apollo.ast/toGQLType|toGQLType@kotlin.String(com.apollographql.apollo.ast.ParserOptions){}[0]
final fun (kotlin/String).com.apollographql.apollo.ast/toGQLValue(com.apollographql.apollo.ast/ParserOptions = ...): com.apollographql.apollo.ast/GQLValue // com.apollographql.apollo.ast/toGQLValue|toGQLValue@kotlin.String(com.apollographql.apollo.ast.ParserOptions){}[0]
final fun (okio/Path).com.apollographql.apollo.ast/parseAsGQLDocument(com.apollographql.apollo.ast/ParserOptions = ...): com.apollographql.apollo.ast/GQLResult<com.apollographql.apollo.ast/GQLDocument> // com.apollographql.apollo.ast/parseAsGQLDocument|parseAsGQLDocument@okio.Path(com.apollographql.apollo.ast.ParserOptions){}[0]
final fun (okio/Path).com.apollographql.apollo.ast/toGQLDocument(com.apollographql.apollo.ast/ParserOptions = ..., kotlin/Boolean = ...): com.apollographql.apollo.ast/GQLDocument // com.apollographql.apollo.ast/toGQLDocument|toGQLDocument@okio.Path(com.apollographql.apollo.ast.ParserOptions;kotlin.Boolean){}[0]
final fun com.apollographql.apollo.ast/builtinDefinitions(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDefinition> // com.apollographql.apollo.ast/builtinDefinitions|builtinDefinitions(){}[0]
final fun com.apollographql.apollo.ast/kotlinLabsDefinitions(kotlin/String): kotlin.collections/List<com.apollographql.apollo.ast/GQLDefinition> // com.apollographql.apollo.ast/kotlinLabsDefinitions|kotlinLabsDefinitions(kotlin.String){}[0]
final fun com.apollographql.apollo.ast/linkDefinitions(): kotlin.collections/List<com.apollographql.apollo.ast/GQLDefinition> // com.apollographql.apollo.ast/linkDefinitions|linkDefinitions(){}[0]
final fun com.apollographql.apollo.ast/nullabilityDefinitions(kotlin/String): kotlin.collections/List<com.apollographql.apollo.ast/GQLDefinition> // com.apollographql.apollo.ast/nullabilityDefinitions|nullabilityDefinitions(kotlin.String){}[0]
