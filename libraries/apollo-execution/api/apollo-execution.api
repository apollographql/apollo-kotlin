public final class com/apollographql/apollo3/execution/ExecutableSchema {
	public final fun execute (Lcom/apollographql/apollo3/execution/GraphQLRequest;Lcom/apollographql/apollo3/api/ExecutionContext;)Lcom/apollographql/apollo3/execution/GraphQLResponse;
	public final fun executeSubscription (Lcom/apollographql/apollo3/execution/GraphQLRequest;Lcom/apollographql/apollo3/api/ExecutionContext;)Lkotlinx/coroutines/flow/Flow;
}

public final class com/apollographql/apollo3/execution/ExecutableSchema$Builder {
	public fun <init> ()V
	public final fun adapterRegistry (Lcom/apollographql/apollo3/api/CustomScalarAdapters;)Lcom/apollographql/apollo3/execution/ExecutableSchema$Builder;
	public final fun addInstrumentation (Lcom/apollographql/apollo3/execution/Instrumentation;)Lcom/apollographql/apollo3/execution/ExecutableSchema$Builder;
	public final fun build ()Lcom/apollographql/apollo3/execution/ExecutableSchema;
	public final fun persistedDocumentCache (Lcom/apollographql/apollo3/execution/PersistedDocumentCache;)Lcom/apollographql/apollo3/execution/ExecutableSchema$Builder;
	public final fun resolver (Lcom/apollographql/apollo3/execution/MainResolver;)Lcom/apollographql/apollo3/execution/ExecutableSchema$Builder;
	public final fun roots (Lcom/apollographql/apollo3/execution/Roots;)Lcom/apollographql/apollo3/execution/ExecutableSchema$Builder;
	public final fun schema (Lcom/apollographql/apollo3/ast/Schema;)Lcom/apollographql/apollo3/execution/ExecutableSchema$Builder;
	public final fun schema (Ljava/lang/String;)Lcom/apollographql/apollo3/execution/ExecutableSchema$Builder;
}

public final class com/apollographql/apollo3/execution/GraphQLRequest : com/apollographql/apollo3/execution/GraphQLRequestResult {
	public final fun getDocument ()Ljava/lang/String;
	public final fun getExtensions ()Ljava/util/Map;
	public final fun getOperationName ()Ljava/lang/String;
	public final fun getVariables ()Ljava/util/Map;
}

public final class com/apollographql/apollo3/execution/GraphQLRequest$Builder {
	public fun <init> ()V
	public final fun build ()Lcom/apollographql/apollo3/execution/GraphQLRequest;
	public final fun document (Ljava/lang/String;)Lcom/apollographql/apollo3/execution/GraphQLRequest$Builder;
	public final fun extensions (Ljava/util/Map;)Lcom/apollographql/apollo3/execution/GraphQLRequest$Builder;
	public final fun getDocument ()Ljava/lang/String;
	public final fun getExtensions ()Ljava/util/Map;
	public final fun getOperationName ()Ljava/lang/String;
	public final fun getVariables ()Ljava/util/Map;
	public final fun operationName (Ljava/lang/String;)Lcom/apollographql/apollo3/execution/GraphQLRequest$Builder;
	public final fun setDocument (Ljava/lang/String;)V
	public final fun setExtensions (Ljava/util/Map;)V
	public final fun setOperationName (Ljava/lang/String;)V
	public final fun setVariables (Ljava/util/Map;)V
	public final fun variables (Ljava/util/Map;)Lcom/apollographql/apollo3/execution/GraphQLRequest$Builder;
}

public final class com/apollographql/apollo3/execution/GraphQLRequestError : com/apollographql/apollo3/execution/GraphQLRequestResult {
	public final fun getMessage ()Ljava/lang/String;
}

public final class com/apollographql/apollo3/execution/GraphQLRequestKt {
	public static final fun parseGetGraphQLRequest (Ljava/lang/String;)Lcom/apollographql/apollo3/execution/GraphQLRequestResult;
	public static final fun parsePostGraphQLRequest (Lokio/BufferedSource;)Lcom/apollographql/apollo3/execution/GraphQLRequestResult;
	public static final fun toGraphQLRequest (Ljava/util/Map;)Lcom/apollographql/apollo3/execution/GraphQLRequestResult;
}

public abstract interface class com/apollographql/apollo3/execution/GraphQLRequestResult {
}

public final class com/apollographql/apollo3/execution/GraphQLResponse {
	public final fun getData ()Ljava/lang/Object;
	public final fun getErrors ()Ljava/util/List;
	public final fun getExtensions ()Ljava/util/Map;
	public final fun serialize (Lcom/apollographql/apollo3/api/json/JsonWriter;)V
	public final fun serialize (Lokio/Sink;)V
}

public final class com/apollographql/apollo3/execution/GraphQLResponse$Builder {
	public fun <init> ()V
	public final fun build ()Lcom/apollographql/apollo3/execution/GraphQLResponse;
	public final fun data (Ljava/util/Map;)Lcom/apollographql/apollo3/execution/GraphQLResponse$Builder;
	public final fun errors (Ljava/util/List;)Lcom/apollographql/apollo3/execution/GraphQLResponse$Builder;
	public final fun extensions (Ljava/util/Map;)Lcom/apollographql/apollo3/execution/GraphQLResponse$Builder;
	public final fun getData ()Ljava/util/Map;
	public final fun getErrors ()Ljava/util/List;
	public final fun getExtensions ()Ljava/util/Map;
	public final fun setData (Ljava/util/Map;)V
	public final fun setErrors (Ljava/util/List;)V
	public final fun setExtensions (Ljava/util/Map;)V
}

public final class com/apollographql/apollo3/execution/InMemoryPersistedDocumentCache : com/apollographql/apollo3/execution/PersistedDocumentCache {
	public fun <init> ()V
	public fun get (Ljava/lang/String;)Lcom/apollographql/apollo3/execution/PersistedDocument;
	public fun put (Ljava/lang/String;Lcom/apollographql/apollo3/execution/PersistedDocument;)V
}

public abstract interface class com/apollographql/apollo3/execution/Instrumentation {
	public abstract fun beforeResolve (Lcom/apollographql/apollo3/execution/ResolveInfo;)V
}

public abstract interface class com/apollographql/apollo3/execution/MainResolver : com/apollographql/apollo3/execution/Resolver {
	public abstract fun typename (Ljava/lang/Object;)Ljava/lang/String;
}

public final class com/apollographql/apollo3/execution/MergedField {
	public fun <init> (Lcom/apollographql/apollo3/ast/GQLField;Ljava/util/List;)V
	public final fun getFirst ()Lcom/apollographql/apollo3/ast/GQLField;
	public final fun getSelections ()Ljava/util/List;
}

public final class com/apollographql/apollo3/execution/NullRoots : com/apollographql/apollo3/execution/Roots {
	public static final field INSTANCE Lcom/apollographql/apollo3/execution/NullRoots;
	public fun mutation ()Ljava/lang/Object;
	public fun query ()Ljava/lang/Object;
	public fun subscription ()Ljava/lang/Object;
}

public final class com/apollographql/apollo3/execution/PersistedDocument {
	public fun <init> (Lcom/apollographql/apollo3/ast/GQLDocument;Ljava/util/List;)V
	public final fun getDocument ()Lcom/apollographql/apollo3/ast/GQLDocument;
	public final fun getIssues ()Ljava/util/List;
}

public abstract interface class com/apollographql/apollo3/execution/PersistedDocumentCache {
	public abstract fun get (Ljava/lang/String;)Lcom/apollographql/apollo3/execution/PersistedDocument;
	public abstract fun put (Ljava/lang/String;Lcom/apollographql/apollo3/execution/PersistedDocument;)V
}

public final class com/apollographql/apollo3/execution/ResolveInfo {
	public fun <init> (Ljava/lang/Object;Lcom/apollographql/apollo3/api/ExecutionContext;Lcom/apollographql/apollo3/execution/MergedField;Lcom/apollographql/apollo3/ast/Schema;Ljava/util/Map;Lcom/apollographql/apollo3/api/CustomScalarAdapters;Ljava/lang/String;)V
	public final fun adaptFromJson (Ljava/lang/Object;Lcom/apollographql/apollo3/ast/GQLType;)Ljava/lang/Object;
	public final fun fieldDefinition ()Lcom/apollographql/apollo3/ast/GQLFieldDefinition;
	public final fun getAdapters ()Lcom/apollographql/apollo3/api/CustomScalarAdapters;
	public final fun getArgument (Ljava/lang/String;)Lcom/apollographql/apollo3/api/Optional;
	public final fun getExecutionContext ()Lcom/apollographql/apollo3/api/ExecutionContext;
	public final fun getField ()Lcom/apollographql/apollo3/execution/MergedField;
	public final fun getFieldName ()Ljava/lang/String;
	public final fun getParentObject ()Ljava/lang/Object;
	public final fun getParentType ()Ljava/lang/String;
	public final fun getSchema ()Lcom/apollographql/apollo3/ast/Schema;
	public final fun getVariables ()Ljava/util/Map;
}

public abstract interface class com/apollographql/apollo3/execution/Resolver {
	public abstract fun resolve (Lcom/apollographql/apollo3/execution/ResolveInfo;)Ljava/lang/Object;
}

public abstract interface class com/apollographql/apollo3/execution/Roots {
	public static final field Companion Lcom/apollographql/apollo3/execution/Roots$Companion;
	public abstract fun mutation ()Ljava/lang/Object;
	public abstract fun query ()Ljava/lang/Object;
	public abstract fun subscription ()Ljava/lang/Object;
}

public final class com/apollographql/apollo3/execution/Roots$Companion {
	public final fun create (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lcom/apollographql/apollo3/execution/Roots;
}

public abstract interface class com/apollographql/apollo3/execution/SubscriptionItem {
}

public final class com/apollographql/apollo3/execution/SubscriptionItemError : com/apollographql/apollo3/execution/SubscriptionItem {
	public fun <init> (Lcom/apollographql/apollo3/api/Error;)V
	public final fun getError ()Lcom/apollographql/apollo3/api/Error;
}

public final class com/apollographql/apollo3/execution/SubscriptionItemResponse : com/apollographql/apollo3/execution/SubscriptionItem {
	public fun <init> (Lcom/apollographql/apollo3/execution/GraphQLResponse;)V
	public final fun getResponse ()Lcom/apollographql/apollo3/execution/GraphQLResponse;
}

public final class com/apollographql/apollo3/execution/ThrowingResolver : com/apollographql/apollo3/execution/MainResolver {
	public static final field INSTANCE Lcom/apollographql/apollo3/execution/ThrowingResolver;
	public fun resolve (Lcom/apollographql/apollo3/execution/ResolveInfo;)Ljava/lang/Object;
	public fun typename (Ljava/lang/Object;)Ljava/lang/String;
}

public final class com/apollographql/apollo3/execution/WebSocketBinaryMessage : com/apollographql/apollo3/execution/WebSocketMessage {
	public fun <init> ([B)V
	public final fun getData ()[B
}

public abstract interface class com/apollographql/apollo3/execution/WebSocketHandler {
	public abstract fun handleMessage (Lcom/apollographql/apollo3/execution/WebSocketMessage;)V
}

public abstract interface class com/apollographql/apollo3/execution/WebSocketMessage {
}

public final class com/apollographql/apollo3/execution/WebSocketTextMessage : com/apollographql/apollo3/execution/WebSocketMessage {
	public fun <init> (Ljava/lang/String;)V
	public final fun getData ()Ljava/lang/String;
}

public final class com/apollographql/apollo3/execution/websocket/ApolloWebSocketHandler : com/apollographql/apollo3/execution/WebSocketHandler {
	public fun <init> (Lcom/apollographql/apollo3/execution/ExecutableSchema;Lkotlinx/coroutines/CoroutineScope;Lcom/apollographql/apollo3/api/ExecutionContext;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lcom/apollographql/apollo3/execution/ExecutableSchema;Lkotlinx/coroutines/CoroutineScope;Lcom/apollographql/apollo3/api/ExecutionContext;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun close ()V
	public fun handleMessage (Lcom/apollographql/apollo3/execution/WebSocketMessage;)V
}

public final class com/apollographql/apollo3/execution/websocket/ConnectionInitAck : com/apollographql/apollo3/execution/websocket/ConnectionInitResult {
	public static final field INSTANCE Lcom/apollographql/apollo3/execution/websocket/ConnectionInitAck;
}

public final class com/apollographql/apollo3/execution/websocket/ConnectionInitError : com/apollographql/apollo3/execution/websocket/ConnectionInitResult {
	public fun <init> ()V
	public fun <init> (Lcom/apollographql/apollo3/api/Optional;)V
	public synthetic fun <init> (Lcom/apollographql/apollo3/api/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getPayload ()Lcom/apollographql/apollo3/api/Optional;
}

public abstract interface class com/apollographql/apollo3/execution/websocket/ConnectionInitResult {
}

