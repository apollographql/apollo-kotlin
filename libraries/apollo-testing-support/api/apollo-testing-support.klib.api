// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, macosArm64, macosX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosSimulatorArm64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.apollographql.apollo:apollo-testing-support>
final class com.apollographql.apollo.mockserver/MockServer { // com.apollographql.apollo.mockserver/MockServer|null[0]
    constructor <init>() // com.apollographql.apollo.mockserver/MockServer.<init>|<init>(){}[0]
}

final class com.apollographql.apollo.mockserver/WebsocketMockRequest { // com.apollographql.apollo.mockserver/WebsocketMockRequest|null[0]
    constructor <init>() // com.apollographql.apollo.mockserver/WebsocketMockRequest.<init>|<init>(){}[0]
}

final class com.apollographql.apollo.testing/MapTestNetworkTransport : com.apollographql.apollo.network/NetworkTransport { // com.apollographql.apollo.testing/MapTestNetworkTransport|null[0]
    constructor <init>() // com.apollographql.apollo.testing/MapTestNetworkTransport.<init>|<init>(){}[0]

    final fun <#A1: com.apollographql.apollo.api/Operation.Data> execute(com.apollographql.apollo.api/ApolloRequest<#A1>): kotlinx.coroutines.flow/Flow<com.apollographql.apollo.api/ApolloResponse<#A1>> // com.apollographql.apollo.testing/MapTestNetworkTransport.execute|execute(com.apollographql.apollo.api.ApolloRequest<0:0>){0§<com.apollographql.apollo.api.Operation.Data>}[0]
    final fun <#A1: com.apollographql.apollo.api/Operation.Data> register(com.apollographql.apollo.api/Operation<#A1>, com.apollographql.apollo.api/ApolloResponse<#A1>) // com.apollographql.apollo.testing/MapTestNetworkTransport.register|register(com.apollographql.apollo.api.Operation<0:0>;com.apollographql.apollo.api.ApolloResponse<0:0>){0§<com.apollographql.apollo.api.Operation.Data>}[0]
    final fun <#A1: com.apollographql.apollo.api/Operation.Data> registerNetworkError(com.apollographql.apollo.api/Operation<#A1>) // com.apollographql.apollo.testing/MapTestNetworkTransport.registerNetworkError|registerNetworkError(com.apollographql.apollo.api.Operation<0:0>){0§<com.apollographql.apollo.api.Operation.Data>}[0]
    final fun dispose() // com.apollographql.apollo.testing/MapTestNetworkTransport.dispose|dispose(){}[0]
}

final class com.apollographql.apollo.testing/QueueTestNetworkTransport : com.apollographql.apollo.network/NetworkTransport { // com.apollographql.apollo.testing/QueueTestNetworkTransport|null[0]
    constructor <init>() // com.apollographql.apollo.testing/QueueTestNetworkTransport.<init>|<init>(){}[0]

    final fun <#A1: com.apollographql.apollo.api/Operation.Data> enqueue(com.apollographql.apollo.api/ApolloResponse<#A1>) // com.apollographql.apollo.testing/QueueTestNetworkTransport.enqueue|enqueue(com.apollographql.apollo.api.ApolloResponse<0:0>){0§<com.apollographql.apollo.api.Operation.Data>}[0]
    final fun <#A1: com.apollographql.apollo.api/Operation.Data> execute(com.apollographql.apollo.api/ApolloRequest<#A1>): kotlinx.coroutines.flow/Flow<com.apollographql.apollo.api/ApolloResponse<#A1>> // com.apollographql.apollo.testing/QueueTestNetworkTransport.execute|execute(com.apollographql.apollo.api.ApolloRequest<0:0>){0§<com.apollographql.apollo.api.Operation.Data>}[0]
    final fun dispose() // com.apollographql.apollo.testing/QueueTestNetworkTransport.dispose|dispose(){}[0]
    final fun enqueueNetworkError() // com.apollographql.apollo.testing/QueueTestNetworkTransport.enqueueNetworkError|enqueueNetworkError(){}[0]
}

final fun (com.apollographql.apollo/ApolloClient).com.apollographql.apollo.testing/enqueueTestNetworkError() // com.apollographql.apollo.testing/enqueueTestNetworkError|enqueueTestNetworkError@com.apollographql.apollo.ApolloClient(){}[0]
final fun <#A: com.apollographql.apollo.api/Operation.Data> (com.apollographql.apollo/ApolloClient).com.apollographql.apollo.testing/enqueueTestResponse(com.apollographql.apollo.api/ApolloResponse<#A>) // com.apollographql.apollo.testing/enqueueTestResponse|enqueueTestResponse@com.apollographql.apollo.ApolloClient(com.apollographql.apollo.api.ApolloResponse<0:0>){0§<com.apollographql.apollo.api.Operation.Data>}[0]
final fun <#A: com.apollographql.apollo.api/Operation.Data> (com.apollographql.apollo/ApolloClient).com.apollographql.apollo.testing/enqueueTestResponse(com.apollographql.apollo.api/Operation<#A>, #A? = ..., kotlin.collections/List<com.apollographql.apollo.api/Error>? = ...) // com.apollographql.apollo.testing/enqueueTestResponse|enqueueTestResponse@com.apollographql.apollo.ApolloClient(com.apollographql.apollo.api.Operation<0:0>;0:0?;kotlin.collections.List<com.apollographql.apollo.api.Error>?){0§<com.apollographql.apollo.api.Operation.Data>}[0]
final fun <#A: com.apollographql.apollo.api/Operation.Data> (com.apollographql.apollo/ApolloClient).com.apollographql.apollo.testing/registerTestNetworkError(com.apollographql.apollo.api/Operation<#A>) // com.apollographql.apollo.testing/registerTestNetworkError|registerTestNetworkError@com.apollographql.apollo.ApolloClient(com.apollographql.apollo.api.Operation<0:0>){0§<com.apollographql.apollo.api.Operation.Data>}[0]
final fun <#A: com.apollographql.apollo.api/Operation.Data> (com.apollographql.apollo/ApolloClient).com.apollographql.apollo.testing/registerTestResponse(com.apollographql.apollo.api/Operation<#A>, #A? = ..., kotlin.collections/List<com.apollographql.apollo.api/Error>? = ...) // com.apollographql.apollo.testing/registerTestResponse|registerTestResponse@com.apollographql.apollo.ApolloClient(com.apollographql.apollo.api.Operation<0:0>;0:0?;kotlin.collections.List<com.apollographql.apollo.api.Error>?){0§<com.apollographql.apollo.api.Operation.Data>}[0]
final fun <#A: com.apollographql.apollo.api/Operation.Data> (com.apollographql.apollo/ApolloClient).com.apollographql.apollo.testing/registerTestResponse(com.apollographql.apollo.api/Operation<#A>, com.apollographql.apollo.api/ApolloResponse<#A>) // com.apollographql.apollo.testing/registerTestResponse|registerTestResponse@com.apollographql.apollo.ApolloClient(com.apollographql.apollo.api.Operation<0:0>;com.apollographql.apollo.api.ApolloResponse<0:0>){0§<com.apollographql.apollo.api.Operation.Data>}[0]
