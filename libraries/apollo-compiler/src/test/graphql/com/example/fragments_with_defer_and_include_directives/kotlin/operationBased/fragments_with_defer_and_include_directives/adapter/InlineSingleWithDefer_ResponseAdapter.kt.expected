//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.and
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.label
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.fragments_with_defer_and_include_directives.InlineSingleWithDefer
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object InlineSingleWithDefer_ResponseAdapter {
  public object Data : CompositeAdapter<InlineSingleWithDefer.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): InlineSingleWithDefer.Data {
      var _hero: InlineSingleWithDefer.Data.Hero? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj(true).nullable().deserializeComposite(reader, context)
          else -> break
        }
      }

      return InlineSingleWithDefer.Data(
        hero = _hero
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: InlineSingleWithDefer.Data,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("hero")
      Hero.obj(true).nullable().serializeComposite(writer, value.hero, context)
    }

    private object Hero : CompositeAdapter<InlineSingleWithDefer.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      public override fun deserializeComposite(reader: JsonReader,
          context: CompositeAdapter.DeserializeCompositeContext): InlineSingleWithDefer.Data.Hero {
        var __typename: String? = null

        val __path = reader.getPath()
        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _onDroid: InlineSingleWithDefer.Data.Hero.OnDroid? = null
        if (and(possibleTypes("Droid"),label()).evaluate(context.falseBooleanVariables, __typename, context, __path)) {
          reader.rewind()
          _onDroid = com.example.fragments_with_defer_and_include_directives.adapter.InlineSingleWithDefer_ResponseAdapter.Data.Hero.OnDroid.deserializeComposite(reader,
              context)
        }

        return InlineSingleWithDefer.Data.Hero(
          __typename = __typename,
          onDroid = _onDroid
        )
      }

      public override fun serializeComposite(
        writer: JsonWriter,
        `value`: InlineSingleWithDefer.Data.Hero,
        context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        if (value.onDroid != null) {
          com.example.fragments_with_defer_and_include_directives.adapter.InlineSingleWithDefer_ResponseAdapter.Data.Hero.OnDroid.serializeComposite(writer,
              value.onDroid, context)
        }
      }

      private object OnDroid : CompositeAdapter<InlineSingleWithDefer.Data.Hero.OnDroid> {
        public val RESPONSE_NAMES: List<String> = listOf("name")

        public override fun deserializeComposite(reader: JsonReader,
            context: CompositeAdapter.DeserializeCompositeContext):
            InlineSingleWithDefer.Data.Hero.OnDroid {
          var _name: String? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
              else -> break
            }
          }

          return InlineSingleWithDefer.Data.Hero.OnDroid(
            name = _name!!
          )
        }

        public override fun serializeComposite(
          writer: JsonWriter,
          `value`: InlineSingleWithDefer.Data.Hero.OnDroid,
          context: CompositeAdapter.SerializeCompositeContext,
        ): Unit {
          writer.name("name")
          StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)
        }
      }
    }
  }
}
