//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives.adapter;

import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BLabel;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BVariable;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.NullableDataAdapter;
import com.apollographql.apollo3.api.ObjectDataAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.fragments_with_defer_and_include_directives.InlineMultipleWithDeferWithIf;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class InlineMultipleWithDeferWithIf_ResponseAdapter {
  public enum Data implements DataAdapter<InlineMultipleWithDeferWithIf.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("hero");

    @Override
    public InlineMultipleWithDeferWithIf.Data deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      InlineMultipleWithDeferWithIf.Hero _hero = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _hero = new NullableDataAdapter<>(new ObjectDataAdapter<InlineMultipleWithDeferWithIf.Hero>(Hero.INSTANCE, true)).deserializeData(reader, context); break;
          default: break loop;
        }
      }

      return new InlineMultipleWithDeferWithIf.Data(
        _hero
      );
    }

    @Override
    public void serializeData(JsonWriter writer, InlineMultipleWithDeferWithIf.Data value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("hero");
      new NullableDataAdapter<>(new ObjectDataAdapter<InlineMultipleWithDeferWithIf.Hero>(Hero.INSTANCE, true)).serializeData(writer, value.hero, context);
    }
  }

  public enum Hero implements DataAdapter<InlineMultipleWithDeferWithIf.Hero> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public InlineMultipleWithDeferWithIf.Hero deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      String __typename = null;

      List<Object> __path = reader.getPath();
      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = DataAdapters.StringDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      reader.rewind();
      InlineMultipleWithDeferWithIf.OnCharacter _onCharacter = com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.OnCharacter.INSTANCE.deserializeData(reader, context);

      InlineMultipleWithDeferWithIf.OnCharacterDeferF_second _onCharacterDeferF_second = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BLabel("f_second")), context.falseBooleanVariables, __typename, context, __path)) {
        reader.rewind();
        _onCharacterDeferF_second = com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.OnCharacterDeferF_second.INSTANCE.deserializeData(reader, context);
      }

      InlineMultipleWithDeferWithIf.OnCharacterDeferF_third _onCharacterDeferF_third = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Or<BTerm>(new BooleanExpression.Not<BTerm>(new BooleanExpression.Element<BTerm>(new BVariable("cond"))),new BooleanExpression.Element<BTerm>(new BLabel("f_third"))), context.falseBooleanVariables, __typename, context, __path)) {
        reader.rewind();
        _onCharacterDeferF_third = com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.OnCharacterDeferF_third.INSTANCE.deserializeData(reader, context);
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");

      return new InlineMultipleWithDeferWithIf.Hero(
        __typename,
        _onCharacter,
        _onCharacterDeferF_second,
        _onCharacterDeferF_third
      );
    }

    @Override
    public void serializeData(JsonWriter writer, InlineMultipleWithDeferWithIf.Hero value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("__typename");
      DataAdapters.StringDataAdapter.serializeData(writer, value.__typename, context);

      com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.OnCharacter.INSTANCE.serializeData(writer, value.onCharacter, context);

      if (value.onCharacterDeferF_second != null) {
        com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.OnCharacterDeferF_second.INSTANCE.serializeData(writer, value.onCharacterDeferF_second, context);
      }

      if (value.onCharacterDeferF_third != null) {
        com.example.fragments_with_defer_and_include_directives.adapter.InlineMultipleWithDeferWithIf_ResponseAdapter.OnCharacterDeferF_third.INSTANCE.serializeData(writer, value.onCharacterDeferF_third, context);
      }
    }
  }

  public enum OnCharacter implements DataAdapter<InlineMultipleWithDeferWithIf.OnCharacter> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id");

    @Override
    public InlineMultipleWithDeferWithIf.OnCharacter deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      String _id = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = DataAdapters.StringDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");

      return new InlineMultipleWithDeferWithIf.OnCharacter(
        _id
      );
    }

    @Override
    public void serializeData(JsonWriter writer, InlineMultipleWithDeferWithIf.OnCharacter value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("id");
      DataAdapters.StringDataAdapter.serializeData(writer, value.id, context);
    }
  }

  public enum OnCharacterDeferF_second implements DataAdapter<InlineMultipleWithDeferWithIf.OnCharacterDeferF_second> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("name");

    @Override
    public InlineMultipleWithDeferWithIf.OnCharacterDeferF_second deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      String _name = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _name = DataAdapters.StringDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_name, "name");

      return new InlineMultipleWithDeferWithIf.OnCharacterDeferF_second(
        _name
      );
    }

    @Override
    public void serializeData(JsonWriter writer,
        InlineMultipleWithDeferWithIf.OnCharacterDeferF_second value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("name");
      DataAdapters.StringDataAdapter.serializeData(writer, value.name, context);
    }
  }

  public enum OnCharacterDeferF_third implements DataAdapter<InlineMultipleWithDeferWithIf.OnCharacterDeferF_third> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("name");

    @Override
    public InlineMultipleWithDeferWithIf.OnCharacterDeferF_third deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      String _name = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _name = DataAdapters.StringDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_name, "name");

      return new InlineMultipleWithDeferWithIf.OnCharacterDeferF_third(
        _name
      );
    }

    @Override
    public void serializeData(JsonWriter writer,
        InlineMultipleWithDeferWithIf.OnCharacterDeferF_third value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("name");
      DataAdapters.StringDataAdapter.serializeData(writer, value.name, context);
    }
  }
}
