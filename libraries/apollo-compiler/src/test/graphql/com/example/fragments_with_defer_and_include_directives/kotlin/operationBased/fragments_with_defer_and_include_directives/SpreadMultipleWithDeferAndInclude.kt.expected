//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.fragments_with_defer_and_include_directives.adapter.SpreadMultipleWithDeferAndInclude_ResponseAdapter
import com.example.fragments_with_defer_and_include_directives.adapter.SpreadMultipleWithDeferAndInclude_VariablesAdapter
import com.example.fragments_with_defer_and_include_directives.fragment.DroidDetails
import com.example.fragments_with_defer_and_include_directives.selections.SpreadMultipleWithDeferAndIncludeSelections
import kotlin.Boolean
import kotlin.String
import com.example.fragments_with_defer_and_include_directives.type.Query as CompiledQuery

public data class SpreadMultipleWithDeferAndInclude(
  public val cond1: Boolean,
  public val cond2: Boolean,
  public val cond3: Boolean,
  public val cond4: Boolean,
) : Query<SpreadMultipleWithDeferAndInclude.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    SpreadMultipleWithDeferAndInclude_VariablesAdapter.serializeVariables(writer, this, customScalarAdapters, withDefaultValues)
  }

  override fun adapter(): Adapter<Data> = SpreadMultipleWithDeferAndInclude_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = SpreadMultipleWithDeferAndIncludeSelections.__root)
  .build()

  @ApolloAdaptableWith(SpreadMultipleWithDeferAndInclude_ResponseAdapter.Data::class)
  public data class Data(
    public val hero: Hero?,
  ) : Query.Data {
    public data class Hero(
      public val __typename: String,
      /**
       * Synthetic field for 'DroidDetails'
       */
      public val droidDetails: DroidDetails?,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "1c9d61b4af65df2bfed92353244efbb66d20a35daf747507e66ed9d20dcd1517"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query SpreadMultipleWithDeferAndInclude($cond1: Boolean!, $cond2: Boolean!, $cond3: Boolean!, $cond4: Boolean!) {
     *   hero {
     *     __typename
     *     ...DroidDetails @include(if: $cond1)
     *     ...DroidDetails @skip(if: $cond2)
     *     ...DroidDetails @defer(label: "b_first")
     *     ...DroidDetails @defer(label: "b_second")
     *     ...DroidDetails @defer(label: "b_third") @include(if: $cond3)
     *     ...DroidDetails @defer(label: "b_fourth") @skip(if: $cond4)
     *   }
     * }
     *
     * fragment DroidDetails on Droid {
     *   name
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query SpreadMultipleWithDeferAndInclude(${'$'}cond1: Boolean!, ${'$'}cond2: Boolean!, ${'$'}cond3: Boolean!, ${'$'}cond4: Boolean!) { hero { __typename ...DroidDetails @include(if: ${'$'}cond1) ...DroidDetails @skip(if: ${'$'}cond2) ...DroidDetails @defer(label: \"b_first\") ...DroidDetails @defer(label: \"b_second\") ...DroidDetails @defer(label: \"b_third\") @include(if: ${'$'}cond3) ...DroidDetails @defer(label: \"b_fourth\") @skip(if: ${'$'}cond4) } }  fragment DroidDetails on Droid { name }"

    public const val OPERATION_NAME: String = "SpreadMultipleWithDeferAndInclude"
  }
}
