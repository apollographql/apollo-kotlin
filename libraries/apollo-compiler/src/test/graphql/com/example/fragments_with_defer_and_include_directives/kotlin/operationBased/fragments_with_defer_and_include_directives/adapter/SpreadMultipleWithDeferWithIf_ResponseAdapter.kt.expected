//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.and
import com.apollographql.apollo.api.evaluate
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.label
import com.apollographql.apollo.api.not
import com.apollographql.apollo.api.nullable
import com.apollographql.apollo.api.obj
import com.apollographql.apollo.api.or
import com.apollographql.apollo.api.possibleTypes
import com.apollographql.apollo.api.variable
import com.example.fragments_with_defer_and_include_directives.SpreadMultipleWithDeferWithIf
import com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails
import com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails2
import com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails3
import kotlin.String
import kotlin.collections.List

public object SpreadMultipleWithDeferWithIf_ResponseAdapter {
  public object Data : Adapter<SpreadMultipleWithDeferWithIf.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): SpreadMultipleWithDeferWithIf.Data {
      var _hero: SpreadMultipleWithDeferWithIf.Data.Hero? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj(true).nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SpreadMultipleWithDeferWithIf.Data(
        hero = _hero
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SpreadMultipleWithDeferWithIf.Data,
    ) {
      writer.name("hero")
      Hero.obj(true).nullable().toJson(writer, customScalarAdapters, value.hero)
    }

    private object Hero : Adapter<SpreadMultipleWithDeferWithIf.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): SpreadMultipleWithDeferWithIf.Data.Hero {
        var __typename: String? = null

        val __path = reader.getPath()
        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _characterDetails: CharacterDetails? = null
        if (possibleTypes("Droid").evaluate(customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, __path)) {
          reader.rewind()
          _characterDetails = com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetailsImpl_ResponseAdapter.CharacterDetails.fromJson(reader, customScalarAdapters)
        }

        var _characterDetails2: CharacterDetails2? = null
        if (and(possibleTypes("Droid"),label("c_second")).evaluate(customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, __path)) {
          reader.rewind()
          _characterDetails2 = com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails2Impl_ResponseAdapter.CharacterDetails2.fromJson(reader, customScalarAdapters)
        }

        var _characterDetails3: CharacterDetails3? = null
        if (and(possibleTypes("Droid"),or(not(variable("cond")),label("c_third"))).evaluate(customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, __path)) {
          reader.rewind()
          _characterDetails3 = com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails3Impl_ResponseAdapter.CharacterDetails3.fromJson(reader, customScalarAdapters)
        }

        return SpreadMultipleWithDeferWithIf.Data.Hero(
          __typename = __typename,
          characterDetails = _characterDetails,
          characterDetails2 = _characterDetails2,
          characterDetails3 = _characterDetails3
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: SpreadMultipleWithDeferWithIf.Data.Hero,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

        if (value.characterDetails != null) {
          com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetailsImpl_ResponseAdapter.CharacterDetails.toJson(writer, customScalarAdapters, value.characterDetails)
        }

        if (value.characterDetails2 != null) {
          com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails2Impl_ResponseAdapter.CharacterDetails2.toJson(writer, customScalarAdapters, value.characterDetails2)
        }

        if (value.characterDetails3 != null) {
          com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails3Impl_ResponseAdapter.CharacterDetails3.toJson(writer, customScalarAdapters, value.characterDetails3)
        }
      }
    }
  }
}
