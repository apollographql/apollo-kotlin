//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloAdapter;
import com.apollographql.apollo3.api.ScalarAdapters;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.fragments_with_defer_and_include_directives.InlineMultipleWithDeferAndInclude;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum InlineMultipleWithDeferAndInclude_VariablesAdapter implements ApolloAdapter<InlineMultipleWithDeferAndInclude> {
  INSTANCE;

  @Override
  public InlineMultipleWithDeferAndInclude fromJson(JsonReader reader,
      ScalarAdapters scalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, ScalarAdapters scalarAdapters,
      InlineMultipleWithDeferAndInclude value) throws IOException {
    writer.name("cond1");
    Adapters.BooleanApolloAdapter.toJson(writer, scalarAdapters, value.cond1);
    writer.name("cond2");
    Adapters.BooleanApolloAdapter.toJson(writer, scalarAdapters, value.cond2);
    writer.name("cond3");
    Adapters.BooleanApolloAdapter.toJson(writer, scalarAdapters, value.cond3);
    writer.name("cond4");
    Adapters.BooleanApolloAdapter.toJson(writer, scalarAdapters, value.cond4);
  }
}
