//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives.fragment

import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.missingField
import kotlin.Any
import kotlin.String
import kotlin.collections.List

public object CharacterDetails3Impl_ResponseAdapter {
  public object CharacterDetails3 :
      CompositeAdapter<com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails3>
      {
    public val RESPONSE_NAMES: List<String> = listOf("birthDate")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails3 {
      var _birthDate: Any? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _birthDate = AnyAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          else -> break
        }
      }

      return com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails3(
        birthDate = _birthDate ?: missingField(reader, "birthDate")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: com.example.fragments_with_defer_and_include_directives.fragment.CharacterDetails3,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("birthDate")
      AnyAdapter.toJson(writer, CustomScalarAdapters.Empty, value.birthDate)
    }
  }
}
