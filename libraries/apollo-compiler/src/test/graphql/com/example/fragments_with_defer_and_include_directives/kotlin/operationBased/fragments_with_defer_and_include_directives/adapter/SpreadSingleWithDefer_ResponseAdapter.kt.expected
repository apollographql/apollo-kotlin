//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives.adapter

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.ScalarAdapters
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.and
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.label
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.fragments_with_defer_and_include_directives.SpreadSingleWithDefer
import com.example.fragments_with_defer_and_include_directives.fragment.DroidDetails
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object SpreadSingleWithDefer_ResponseAdapter {
  public object Data : ApolloAdapter<SpreadSingleWithDefer.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
        SpreadSingleWithDefer.Data {
      var _hero: SpreadSingleWithDefer.Data.Hero? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj(true).nullable().fromJson(reader, scalarAdapters)
          else -> break
        }
      }

      return SpreadSingleWithDefer.Data(
        hero = _hero
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      scalarAdapters: ScalarAdapters,
      `value`: SpreadSingleWithDefer.Data,
    ): Unit {
      writer.name("hero")
      Hero.obj(true).nullable().toJson(writer, scalarAdapters, value.hero)
    }

    private object Hero : ApolloAdapter<SpreadSingleWithDefer.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
          SpreadSingleWithDefer.Data.Hero {
        var __typename: String? = null

        val __path = reader.getPath()
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringApolloAdapter.fromJson(reader, scalarAdapters)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _droidDetails: DroidDetails? = null
        if (and(possibleTypes("Droid"),label()).evaluate(scalarAdapters.adapterContext.variables(), __typename, scalarAdapters.adapterContext, __path)) {
          reader.rewind()
          _droidDetails = com.example.fragments_with_defer_and_include_directives.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.fromJson(reader,
              scalarAdapters)
        }

        return SpreadSingleWithDefer.Data.Hero(
          __typename = __typename,
          droidDetails = _droidDetails
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        scalarAdapters: ScalarAdapters,
        `value`: SpreadSingleWithDefer.Data.Hero,
      ): Unit {
        writer.name("__typename")
        StringApolloAdapter.toJson(writer, scalarAdapters, value.__typename)

        if (value.droidDetails != null) {
          com.example.fragments_with_defer_and_include_directives.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.toJson(writer,
              scalarAdapters, value.droidDetails)
        }
      }
    }
  }
}
