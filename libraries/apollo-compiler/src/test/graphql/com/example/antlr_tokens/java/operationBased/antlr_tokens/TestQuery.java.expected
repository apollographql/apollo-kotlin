//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.antlr_tokens;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.Optional;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.json.JsonWriter;
import com.example.antlr_tokens.adapter.TestQuery_ResponseAdapter;
import com.example.antlr_tokens.adapter.TestQuery_VariablesAdapter;
import com.example.antlr_tokens.selections.TestQuerySelections;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "197e186cfb461d1c38c0be4da7b182eff42e304043973b994c8c2de3535daea6";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery($operation: String) {
   *   typeWithGraphQLKeywords {
   *     on
   *     null(fragment: $operation)
   *     alias: null(fragment: "A string\nwith a new line")
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery($operation: String) { typeWithGraphQLKeywords { on null(fragment: $operation) alias: null(fragment: \"A string\\nwith a new line\") } }";

  public static final String OPERATION_NAME = "TestQuery";

  public final Optional<String> operation;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public TestQuery(Optional<String> operation) {
    this.operation = operation;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof TestQuery) {
      TestQuery that = (TestQuery) o;
      return ((this.operation == null) ? (that.operation == null) : this.operation.equals(that.operation));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (operation == null) ? 0 : operation.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "TestQuery{"
        + "operation=" + operation
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withDefaultValues) throws IOException {
    TestQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withDefaultValues);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.antlr_tokens.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private Optional<String> operation = Optional.absent();

    Builder() {
    }

    public Builder operation(String operation) {
      this.operation = Optional.present(operation);
      return this;
    }

    public TestQuery build() {
      return new TestQuery(operation);
    }
  }

  public static class Data implements Query.Data {
    public TypeWithGraphQLKeywords typeWithGraphQLKeywords;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(TypeWithGraphQLKeywords typeWithGraphQLKeywords) {
      this.typeWithGraphQLKeywords = typeWithGraphQLKeywords;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.typeWithGraphQLKeywords == null) ? (that.typeWithGraphQLKeywords == null) : this.typeWithGraphQLKeywords.equals(that.typeWithGraphQLKeywords));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (typeWithGraphQLKeywords == null) ? 0 : typeWithGraphQLKeywords.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "typeWithGraphQLKeywords=" + typeWithGraphQLKeywords
          + "}";
      }
      return $toString;
    }
  }

  public static class TypeWithGraphQLKeywords {
    public String on;

    public String null_;

    public String alias;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public TypeWithGraphQLKeywords(String on, String null_, String alias) {
      this.on = on;
      this.null_ = null_;
      this.alias = alias;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof TypeWithGraphQLKeywords) {
        TypeWithGraphQLKeywords that = (TypeWithGraphQLKeywords) o;
        return ((this.on == null) ? (that.on == null) : this.on.equals(that.on))
         &&((this.null_ == null) ? (that.null_ == null) : this.null_.equals(that.null_))
         &&((this.alias == null) ? (that.alias == null) : this.alias.equals(that.alias));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (on == null) ? 0 : on.hashCode();
        __h *= 1000003;
        __h ^= (null_ == null) ? 0 : null_.hashCode();
        __h *= 1000003;
        __h ^= (alias == null) ? 0 : alias.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "TypeWithGraphQLKeywords{"
          + "on=" + on + ", "
          + "null_=" + null_ + ", "
          + "alias=" + alias
          + "}";
      }
      return $toString;
    }
  }
}
