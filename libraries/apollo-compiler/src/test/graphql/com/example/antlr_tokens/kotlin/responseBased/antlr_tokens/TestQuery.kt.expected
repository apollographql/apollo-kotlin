//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.antlr_tokens

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Optional
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.antlr_tokens.adapter.TestQuery_ResponseAdapter
import com.example.antlr_tokens.adapter.TestQuery_VariablesAdapter
import com.example.antlr_tokens.selections.TestQuerySelections
import kotlin.Boolean
import kotlin.String
import com.example.antlr_tokens.type.Query as CompiledQuery

public data class TestQuery(
  public val operation: Optional<String?> = Optional.Absent,
) : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    TestQuery_VariablesAdapter.serializeVariables(writer, this, customScalarAdapters, withDefaultValues)
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val typeWithGraphQLKeywords: TypeWithGraphQLKeywords?,
  ) : Query.Data {
    public data class TypeWithGraphQLKeywords(
      public val on: String?,
      public val `null`: String?,
      public val alias: String?,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "197e186cfb461d1c38c0be4da7b182eff42e304043973b994c8c2de3535daea6"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery($operation: String) {
     *   typeWithGraphQLKeywords {
     *     on
     *     null(fragment: $operation)
     *     alias: null(fragment: "A string\nwith a new line")
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery(${'$'}operation: String) { typeWithGraphQLKeywords { on null(fragment: ${'$'}operation) alias: null(fragment: \"A string\\nwith a new line\") } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
