//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.typepolicy.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.Assertions;
import com.apollographql.apollo.api.BPossibleTypes;
import com.apollographql.apollo.api.BTerm;
import com.apollographql.apollo.api.BooleanExpression;
import com.apollographql.apollo.api.BooleanExpressions;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.NullableAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.example.typepolicy.GetInterfaceA;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Arrays;
import java.util.List;

public class GetInterfaceA_ResponseAdapter {
  public enum Data implements Adapter<GetInterfaceA.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("interfaceA");

    @SuppressWarnings("unchecked")
    @Override
    public GetInterfaceA.Data fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      GetInterfaceA.InterfaceA _interfaceA = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _interfaceA = new NullableAdapter<>(new ObjectAdapter<GetInterfaceA.InterfaceA>(InterfaceA.INSTANCE, true)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new GetInterfaceA.Data(
        _interfaceA
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetInterfaceA.Data value) throws IOException {
      writer.name("interfaceA");
      new NullableAdapter<>(new ObjectAdapter<GetInterfaceA.InterfaceA>(InterfaceA.INSTANCE, true)).toJson(writer, customScalarAdapters, value.interfaceA);
    }
  }

  public enum InterfaceA implements Adapter<GetInterfaceA.InterfaceA> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @SuppressWarnings("unchecked")
    @Override
    public GetInterfaceA.InterfaceA fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      reader.rewind();
      GetInterfaceA.OnInterfaceA _onInterfaceA = com.example.typepolicy.adapter.GetInterfaceA_ResponseAdapter.OnInterfaceA.INSTANCE.fromJson(reader, customScalarAdapters);

      GetInterfaceA.OnB _onB = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("B")), customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, null)) {
        reader.rewind();
        _onB = com.example.typepolicy.adapter.GetInterfaceA_ResponseAdapter.OnB.INSTANCE.fromJson(reader, customScalarAdapters);
      }

      GetInterfaceA.OnC _onC = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("C")), customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, null)) {
        reader.rewind();
        _onC = com.example.typepolicy.adapter.GetInterfaceA_ResponseAdapter.OnC.INSTANCE.fromJson(reader, customScalarAdapters);
      }

      return new GetInterfaceA.InterfaceA(
        __typename,
        _onInterfaceA,
        _onB,
        _onC
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetInterfaceA.InterfaceA value) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.__typename);

      com.example.typepolicy.adapter.GetInterfaceA_ResponseAdapter.OnInterfaceA.INSTANCE.toJson(writer, customScalarAdapters, value.onInterfaceA);

      if (value.onB != null) {
        com.example.typepolicy.adapter.GetInterfaceA_ResponseAdapter.OnB.INSTANCE.toJson(writer, customScalarAdapters, value.onB);
      }

      if (value.onC != null) {
        com.example.typepolicy.adapter.GetInterfaceA_ResponseAdapter.OnC.INSTANCE.toJson(writer, customScalarAdapters, value.onC);
      }
    }
  }

  public enum OnInterfaceA implements Adapter<GetInterfaceA.OnInterfaceA> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("interfaceAField");

    @SuppressWarnings("unchecked")
    @Override
    public GetInterfaceA.OnInterfaceA fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _interfaceAField = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _interfaceAField = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new GetInterfaceA.OnInterfaceA(
        _interfaceAField
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetInterfaceA.OnInterfaceA value) throws IOException {
      writer.name("interfaceAField");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.interfaceAField);
    }
  }

  public enum OnB implements Adapter<GetInterfaceA.OnB> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("idB");

    @SuppressWarnings("unchecked")
    @Override
    public GetInterfaceA.OnB fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      String _idB = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _idB = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new GetInterfaceA.OnB(
        _idB
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetInterfaceA.OnB value) throws IOException {
      writer.name("idB");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.idB);
    }
  }

  public enum OnC implements Adapter<GetInterfaceA.OnC> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("idC");

    @SuppressWarnings("unchecked")
    @Override
    public GetInterfaceA.OnC fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      String _idC = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _idC = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new GetInterfaceA.OnC(
        _idC
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetInterfaceA.OnC value) throws IOException {
      writer.name("idC");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.idC);
    }
  }
}
