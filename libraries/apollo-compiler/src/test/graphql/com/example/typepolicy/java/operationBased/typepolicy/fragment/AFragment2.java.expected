//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.typepolicy.fragment;

import com.apollographql.apollo.api.Fragment;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

public class AFragment2 implements Fragment.Data {
  public String bar;

  public String myId;

  public String id;

  public String __typename;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public AFragment2(String bar, String myId, String id, String __typename) {
    this.bar = bar;
    this.myId = myId;
    this.id = id;
    this.__typename = __typename;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof AFragment2) {
      AFragment2 that = (AFragment2) o;
      return ((this.bar == null) ? (that.bar == null) : this.bar.equals(that.bar))
       &&((this.myId == null) ? (that.myId == null) : this.myId.equals(that.myId))
       &&((this.id == null) ? (that.id == null) : this.id.equals(that.id))
       &&((this.__typename == null) ? (that.__typename == null) : this.__typename.equals(that.__typename));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (bar == null) ? 0 : bar.hashCode();
      __h *= 1000003;
      __h ^= (myId == null) ? 0 : myId.hashCode();
      __h *= 1000003;
      __h ^= (id == null) ? 0 : id.hashCode();
      __h *= 1000003;
      __h ^= (__typename == null) ? 0 : __typename.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "AFragment2{"
        + "bar=" + bar + ", "
        + "myId=" + myId + ", "
        + "id=" + id + ", "
        + "__typename=" + __typename
        + "}";
    }
    return $toString;
  }
}
