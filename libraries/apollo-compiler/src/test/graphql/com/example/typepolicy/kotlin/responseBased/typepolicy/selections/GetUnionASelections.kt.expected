//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.typepolicy.selections

import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CompiledFragment
import com.apollographql.apollo.api.CompiledSelection
import com.apollographql.apollo.api.notNull
import com.example.typepolicy.type.GraphQLID
import com.example.typepolicy.type.GraphQLString
import com.example.typepolicy.type.UnionA
import kotlin.collections.List

public object GetUnionASelections {
  private val __onUnionA: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __onA: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build()
      )

  private val __onB: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "idB",
          type = GraphQLString.type
        ).build()
      )

  private val __onC: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "idC",
          type = GraphQLString.type
        ).build()
      )

  private val __unionA: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "UnionA",
          possibleTypes = listOf("A", "B", "C")
        ).selections(__onUnionA)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "A",
          possibleTypes = listOf("A")
        ).selections(__onA)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "B",
          possibleTypes = listOf("B")
        ).selections(__onB)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "C",
          possibleTypes = listOf("C")
        ).selections(__onC)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "unionA",
          type = UnionA.type
        ).selections(__unionA)
        .build()
      )
}
