//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.typepolicy.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.Assertions;
import com.apollographql.apollo.api.BPossibleTypes;
import com.apollographql.apollo.api.BTerm;
import com.apollographql.apollo.api.BooleanExpression;
import com.apollographql.apollo.api.BooleanExpressions;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.NullableAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.example.typepolicy.GetUnionA;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Arrays;
import java.util.List;

public class GetUnionA_ResponseAdapter {
  public enum Data implements Adapter<GetUnionA.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("unionA");

    @SuppressWarnings("unchecked")
    @Override
    public GetUnionA.Data fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      GetUnionA.UnionA _unionA = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _unionA = new NullableAdapter<>(new ObjectAdapter<GetUnionA.UnionA>(UnionA.INSTANCE, true)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new GetUnionA.Data(
        _unionA
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetUnionA.Data value) throws IOException {
      writer.name("unionA");
      new NullableAdapter<>(new ObjectAdapter<GetUnionA.UnionA>(UnionA.INSTANCE, true)).toJson(writer, customScalarAdapters, value.unionA);
    }
  }

  public enum UnionA implements Adapter<GetUnionA.UnionA> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @SuppressWarnings("unchecked")
    @Override
    public GetUnionA.UnionA fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      reader.rewind();
      GetUnionA.OnUnionA _onUnionA = com.example.typepolicy.adapter.GetUnionA_ResponseAdapter.OnUnionA.INSTANCE.fromJson(reader, customScalarAdapters);

      GetUnionA.OnA _onA = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("A")), customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, null)) {
        reader.rewind();
        _onA = com.example.typepolicy.adapter.GetUnionA_ResponseAdapter.OnA.INSTANCE.fromJson(reader, customScalarAdapters);
      }

      GetUnionA.OnB _onB = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("B")), customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, null)) {
        reader.rewind();
        _onB = com.example.typepolicy.adapter.GetUnionA_ResponseAdapter.OnB.INSTANCE.fromJson(reader, customScalarAdapters);
      }

      GetUnionA.OnC _onC = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("C")), customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, null)) {
        reader.rewind();
        _onC = com.example.typepolicy.adapter.GetUnionA_ResponseAdapter.OnC.INSTANCE.fromJson(reader, customScalarAdapters);
      }

      return new GetUnionA.UnionA(
        __typename,
        _onUnionA,
        _onA,
        _onB,
        _onC
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetUnionA.UnionA value) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.__typename);

      com.example.typepolicy.adapter.GetUnionA_ResponseAdapter.OnUnionA.INSTANCE.toJson(writer, customScalarAdapters, value.onUnionA);

      if (value.onA != null) {
        com.example.typepolicy.adapter.GetUnionA_ResponseAdapter.OnA.INSTANCE.toJson(writer, customScalarAdapters, value.onA);
      }

      if (value.onB != null) {
        com.example.typepolicy.adapter.GetUnionA_ResponseAdapter.OnB.INSTANCE.toJson(writer, customScalarAdapters, value.onB);
      }

      if (value.onC != null) {
        com.example.typepolicy.adapter.GetUnionA_ResponseAdapter.OnC.INSTANCE.toJson(writer, customScalarAdapters, value.onC);
      }
    }
  }

  public enum OnUnionA implements Adapter<GetUnionA.OnUnionA> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @SuppressWarnings("unchecked")
    @Override
    public GetUnionA.OnUnionA fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");

      return new GetUnionA.OnUnionA(
        __typename
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetUnionA.OnUnionA value) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.__typename);
    }
  }

  public enum OnA implements Adapter<GetUnionA.OnA> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id");

    @SuppressWarnings("unchecked")
    @Override
    public GetUnionA.OnA fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      String _id = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");

      return new GetUnionA.OnA(
        _id
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetUnionA.OnA value) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);
    }
  }

  public enum OnB implements Adapter<GetUnionA.OnB> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("idB");

    @SuppressWarnings("unchecked")
    @Override
    public GetUnionA.OnB fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      String _idB = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _idB = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new GetUnionA.OnB(
        _idB
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetUnionA.OnB value) throws IOException {
      writer.name("idB");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.idB);
    }
  }

  public enum OnC implements Adapter<GetUnionA.OnC> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("idC");

    @SuppressWarnings("unchecked")
    @Override
    public GetUnionA.OnC fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      String _idC = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _idC = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new GetUnionA.OnC(
        _idC
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        GetUnionA.OnC value) throws IOException {
      writer.name("idC");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.idC);
    }
  }
}
