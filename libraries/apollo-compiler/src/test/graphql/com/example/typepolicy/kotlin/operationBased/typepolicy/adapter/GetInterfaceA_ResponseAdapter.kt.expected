//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.typepolicy.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.NullableStringAdapter
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.evaluate
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.nullable
import com.apollographql.apollo.api.obj
import com.apollographql.apollo.api.possibleTypes
import com.example.typepolicy.GetInterfaceA
import kotlin.String
import kotlin.collections.List

public object GetInterfaceA_ResponseAdapter {
  public object Data : Adapter<GetInterfaceA.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("interfaceA")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): GetInterfaceA.Data {
      var _interfaceA: GetInterfaceA.Data.InterfaceA? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _interfaceA = InterfaceA.obj(true).nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetInterfaceA.Data(
        interfaceA = _interfaceA
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetInterfaceA.Data,
    ) {
      writer.name("interfaceA")
      InterfaceA.obj(true).nullable().toJson(writer, customScalarAdapters, value.interfaceA)
    }

    private object InterfaceA : Adapter<GetInterfaceA.Data.InterfaceA> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): GetInterfaceA.Data.InterfaceA {
        var __typename: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        reader.rewind()
        val _onInterfaceA = com.example.typepolicy.adapter.GetInterfaceA_ResponseAdapter.Data.InterfaceA.OnInterfaceA.fromJson(reader, customScalarAdapters)

        var _onB: GetInterfaceA.Data.InterfaceA.OnB? = null
        if (possibleTypes("B").evaluate(customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _onB = com.example.typepolicy.adapter.GetInterfaceA_ResponseAdapter.Data.InterfaceA.OnB.fromJson(reader, customScalarAdapters)
        }

        var _onC: GetInterfaceA.Data.InterfaceA.OnC? = null
        if (possibleTypes("C").evaluate(customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _onC = com.example.typepolicy.adapter.GetInterfaceA_ResponseAdapter.Data.InterfaceA.OnC.fromJson(reader, customScalarAdapters)
        }

        return GetInterfaceA.Data.InterfaceA(
          __typename = __typename,
          onInterfaceA = _onInterfaceA,
          onB = _onB,
          onC = _onC
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: GetInterfaceA.Data.InterfaceA,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

        OnInterfaceA.toJson(writer, customScalarAdapters, value.onInterfaceA)

        if (value.onB != null) {
          OnB.toJson(writer, customScalarAdapters, value.onB)
        }

        if (value.onC != null) {
          OnC.toJson(writer, customScalarAdapters, value.onC)
        }
      }

      private object OnInterfaceA : Adapter<GetInterfaceA.Data.InterfaceA.OnInterfaceA> {
        public val RESPONSE_NAMES: List<String> = listOf("interfaceAField")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): GetInterfaceA.Data.InterfaceA.OnInterfaceA {
          var _interfaceAField: String? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _interfaceAField = NullableStringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return GetInterfaceA.Data.InterfaceA.OnInterfaceA(
            interfaceAField = _interfaceAField
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: GetInterfaceA.Data.InterfaceA.OnInterfaceA,
        ) {
          writer.name("interfaceAField")
          NullableStringAdapter.toJson(writer, customScalarAdapters, value.interfaceAField)
        }
      }

      private object OnB : Adapter<GetInterfaceA.Data.InterfaceA.OnB> {
        public val RESPONSE_NAMES: List<String> = listOf("idB")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): GetInterfaceA.Data.InterfaceA.OnB {
          var _idB: String? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _idB = NullableStringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return GetInterfaceA.Data.InterfaceA.OnB(
            idB = _idB
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: GetInterfaceA.Data.InterfaceA.OnB,
        ) {
          writer.name("idB")
          NullableStringAdapter.toJson(writer, customScalarAdapters, value.idB)
        }
      }

      private object OnC : Adapter<GetInterfaceA.Data.InterfaceA.OnC> {
        public val RESPONSE_NAMES: List<String> = listOf("idC")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): GetInterfaceA.Data.InterfaceA.OnC {
          var _idC: String? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _idC = NullableStringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return GetInterfaceA.Data.InterfaceA.OnC(
            idC = _idC
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: GetInterfaceA.Data.InterfaceA.OnC,
        ) {
          writer.name("idC")
          NullableStringAdapter.toJson(writer, customScalarAdapters, value.idC)
        }
      }
    }
  }
}
