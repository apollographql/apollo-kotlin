//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_inline_fragment.fragment

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.missingField
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

public object HeroDetailsImpl_ResponseAdapter {
  public object Data : CompositeAdapter<HeroDetailsImpl.Data> {
    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        HeroDetailsImpl.Data {
      val __typename = reader.readTypename()
      return when(__typename) {
        "Human",
        -> HumanData.fromJson(reader, adapterContext, __typename)
        "Droid",
        -> DroidData.fromJson(reader, adapterContext, __typename)
        else
        -> OtherData.fromJson(reader, adapterContext, __typename)
      }
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      when(value) {
        is HeroDetailsImpl.HumanData -> HumanData.toJson(writer, value, adapterContext)
        is HeroDetailsImpl.DroidData -> DroidData.toJson(writer, value, adapterContext)
        is HeroDetailsImpl.OtherData -> OtherData.toJson(writer, value, adapterContext)
      }
    }
  }

  public object HumanData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection")

    public fun fromJson(
      reader: JsonReader,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
      typename: String,
    ): HeroDetailsImpl.HumanData {
      var __typename: String? = typename
      var _name: String? = null
      var _friendsConnection: HeroDetailsImpl.HumanData.FriendsConnection? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          2 -> _friendsConnection = FriendsConnection.obj().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return HeroDetailsImpl.HumanData(
        __typename = __typename ?: missingField(reader, "__typename"),
        name = _name ?: missingField(reader, "name"),
        friendsConnection = _friendsConnection ?: missingField(reader, "friendsConnection")
      )
    }

    public fun toJson(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.HumanData,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, value.friendsConnection, adapterContext)
    }

    private object FriendsConnection : CompositeAdapter<HeroDetailsImpl.HumanData.FriendsConnection>
        {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          HeroDetailsImpl.HumanData.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.HumanData.FriendsConnection.Edge?>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader, adapterContext)
            else -> break
          }
        }

        return HeroDetailsImpl.HumanData.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.HumanData.FriendsConnection,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, value.edges, adapterContext)
      }

      private object Edge : CompositeAdapter<HeroDetailsImpl.HumanData.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
            HeroDetailsImpl.HumanData.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().fromJson(reader, adapterContext)
              else -> break
            }
          }

          return HeroDetailsImpl.HumanData.FriendsConnection.Edge(
            node = _node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          `value`: HeroDetailsImpl.HumanData.FriendsConnection.Edge,
          adapterContext: CompositeAdapterContext,
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, value.node, adapterContext)
        }

        private object Node :
            CompositeAdapter<HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
              HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node {
            var _name: String? = null

            while (true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
                else -> break
              }
            }

            return HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node(
              name = _name ?: missingField(reader, "name")
            )
          }

          override fun toJson(
            writer: JsonWriter,
            `value`: HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node,
            adapterContext: CompositeAdapterContext,
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)
          }
        }
      }
    }
  }

  public object DroidData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "primaryFunction",
        "friendsConnection")

    public fun fromJson(
      reader: JsonReader,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
      typename: String,
    ): HeroDetailsImpl.DroidData {
      var __typename: String? = typename
      var _name: String? = null
      var _primaryFunction: String? = null
      var _friendsConnection: HeroDetailsImpl.DroidData.FriendsConnection? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          2 -> _primaryFunction = NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          3 -> _friendsConnection = FriendsConnection.obj().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return HeroDetailsImpl.DroidData(
        __typename = __typename ?: missingField(reader, "__typename"),
        name = _name ?: missingField(reader, "name"),
        primaryFunction = _primaryFunction,
        friendsConnection = _friendsConnection ?: missingField(reader, "friendsConnection")
      )
    }

    public fun toJson(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.DroidData,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

      writer.name("primaryFunction")
      NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.primaryFunction)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, value.friendsConnection, adapterContext)
    }

    private object FriendsConnection : CompositeAdapter<HeroDetailsImpl.DroidData.FriendsConnection>
        {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          HeroDetailsImpl.DroidData.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.DroidData.FriendsConnection.Edge?>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader, adapterContext)
            else -> break
          }
        }

        return HeroDetailsImpl.DroidData.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.DroidData.FriendsConnection,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, value.edges, adapterContext)
      }

      private object Edge : CompositeAdapter<HeroDetailsImpl.DroidData.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
            HeroDetailsImpl.DroidData.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().fromJson(reader, adapterContext)
              else -> break
            }
          }

          return HeroDetailsImpl.DroidData.FriendsConnection.Edge(
            node = _node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          `value`: HeroDetailsImpl.DroidData.FriendsConnection.Edge,
          adapterContext: CompositeAdapterContext,
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, value.node, adapterContext)
        }

        private object Node :
            CompositeAdapter<HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
              HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node {
            var _name: String? = null

            while (true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
                else -> break
              }
            }

            return HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node(
              name = _name ?: missingField(reader, "name")
            )
          }

          override fun toJson(
            writer: JsonWriter,
            `value`: HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node,
            adapterContext: CompositeAdapterContext,
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)
          }
        }
      }
    }
  }

  public object OtherData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection")

    public fun fromJson(
      reader: JsonReader,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
      typename: String,
    ): HeroDetailsImpl.OtherData {
      var __typename: String? = typename
      var _name: String? = null
      var _friendsConnection: HeroDetailsImpl.OtherData.FriendsConnection? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          2 -> _friendsConnection = FriendsConnection.obj().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return HeroDetailsImpl.OtherData(
        __typename = __typename ?: missingField(reader, "__typename"),
        name = _name ?: missingField(reader, "name"),
        friendsConnection = _friendsConnection ?: missingField(reader, "friendsConnection")
      )
    }

    public fun toJson(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.OtherData,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, value.friendsConnection, adapterContext)
    }

    private object FriendsConnection : CompositeAdapter<HeroDetailsImpl.OtherData.FriendsConnection>
        {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          HeroDetailsImpl.OtherData.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.OtherData.FriendsConnection.Edge?>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader, adapterContext)
            else -> break
          }
        }

        return HeroDetailsImpl.OtherData.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.OtherData.FriendsConnection,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, value.edges, adapterContext)
      }

      private object Edge : CompositeAdapter<HeroDetailsImpl.OtherData.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
            HeroDetailsImpl.OtherData.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().fromJson(reader, adapterContext)
              else -> break
            }
          }

          return HeroDetailsImpl.OtherData.FriendsConnection.Edge(
            node = _node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          `value`: HeroDetailsImpl.OtherData.FriendsConnection.Edge,
          adapterContext: CompositeAdapterContext,
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, value.node, adapterContext)
        }

        private object Node :
            CompositeAdapter<HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
              HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node {
            var _name: String? = null

            while (true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
                else -> break
              }
            }

            return HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node(
              name = _name ?: missingField(reader, "name")
            )
          }

          override fun toJson(
            writer: JsonWriter,
            `value`: HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node,
            adapterContext: CompositeAdapterContext,
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)
          }
        }
      }
    }
  }
}
