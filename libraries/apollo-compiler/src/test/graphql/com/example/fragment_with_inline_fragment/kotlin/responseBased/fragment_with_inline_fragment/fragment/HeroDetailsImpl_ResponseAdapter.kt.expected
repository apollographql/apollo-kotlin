//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_inline_fragment.fragment

import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.NullableIntDataAdapter
import com.apollographql.apollo3.api.NullableStringDataAdapter
import com.apollographql.apollo3.api.StringDataAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object HeroDetailsImpl_ResponseAdapter {
  public object Data : DataAdapter<HeroDetailsImpl.Data> {
    public override fun deserializeData(reader: JsonReader,
        context: DataAdapter.DeserializeDataContext): HeroDetailsImpl.Data {
      val __typename = reader.readTypename()
      return when(__typename) {
        "Human",
        -> HumanData.deserializeData(reader, context, __typename)
        "Droid",
        -> DroidData.deserializeData(reader, context, __typename)
        else
        -> OtherData.deserializeData(reader, context, __typename)
      }
    }

    public override fun serializeData(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.Data,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      when(value) {
        is HeroDetailsImpl.HumanData -> HumanData.serializeData(writer, value, context)
        is HeroDetailsImpl.DroidData -> DroidData.serializeData(writer, value, context)
        is HeroDetailsImpl.OtherData -> OtherData.serializeData(writer, value, context)
      }
    }
  }

  public object HumanData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection")

    public fun deserializeData(
      reader: JsonReader,
      context: DataAdapter.DeserializeDataContext,
      typename: String,
    ): HeroDetailsImpl.HumanData {
      var __typename: String? = typename
      var _name: String? = null
      var _friendsConnection: HeroDetailsImpl.HumanData.FriendsConnection? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringDataAdapter.deserializeData(reader, context)
          1 -> _name = StringDataAdapter.deserializeData(reader, context)
          2 -> _friendsConnection = FriendsConnection.obj().deserializeData(reader, context)
          else -> break
        }
      }

      return HeroDetailsImpl.HumanData(
        __typename = __typename!!,
        name = _name!!,
        friendsConnection = _friendsConnection!!
      )
    }

    public fun serializeData(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.HumanData,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("__typename")
      StringDataAdapter.serializeData(writer, value.__typename, context)

      writer.name("name")
      StringDataAdapter.serializeData(writer, value.name, context)

      writer.name("friendsConnection")
      FriendsConnection.obj().serializeData(writer, value.friendsConnection, context)
    }

    private object FriendsConnection : DataAdapter<HeroDetailsImpl.HumanData.FriendsConnection> {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext):
          HeroDetailsImpl.HumanData.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.HumanData.FriendsConnection.Edge?>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntDataAdapter.deserializeData(reader, context)
            1 -> _edges = Edge.obj().nullable().list().nullable().deserializeData(reader, context)
            else -> break
          }
        }

        return HeroDetailsImpl.HumanData.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.HumanData.FriendsConnection,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("totalCount")
        NullableIntDataAdapter.serializeData(writer, value.totalCount, context)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().serializeData(writer, value.edges, context)
      }

      private object Edge : DataAdapter<HeroDetailsImpl.HumanData.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        public override fun deserializeData(reader: JsonReader,
            context: DataAdapter.DeserializeDataContext):
            HeroDetailsImpl.HumanData.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().deserializeData(reader, context)
              else -> break
            }
          }

          return HeroDetailsImpl.HumanData.FriendsConnection.Edge(
            node = _node
          )
        }

        public override fun serializeData(
          writer: JsonWriter,
          `value`: HeroDetailsImpl.HumanData.FriendsConnection.Edge,
          context: DataAdapter.SerializeDataContext,
        ): Unit {
          writer.name("node")
          Node.obj().nullable().serializeData(writer, value.node, context)
        }

        private object Node : DataAdapter<HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          public override fun deserializeData(reader: JsonReader,
              context: DataAdapter.DeserializeDataContext):
              HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node {
            var _name: String? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringDataAdapter.deserializeData(reader, context)
                else -> break
              }
            }

            return HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node(
              name = _name!!
            )
          }

          public override fun serializeData(
            writer: JsonWriter,
            `value`: HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node,
            context: DataAdapter.SerializeDataContext,
          ): Unit {
            writer.name("name")
            StringDataAdapter.serializeData(writer, value.name, context)
          }
        }
      }
    }
  }

  public object DroidData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "primaryFunction",
        "friendsConnection")

    public fun deserializeData(
      reader: JsonReader,
      context: DataAdapter.DeserializeDataContext,
      typename: String,
    ): HeroDetailsImpl.DroidData {
      var __typename: String? = typename
      var _name: String? = null
      var _primaryFunction: String? = null
      var _friendsConnection: HeroDetailsImpl.DroidData.FriendsConnection? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringDataAdapter.deserializeData(reader, context)
          1 -> _name = StringDataAdapter.deserializeData(reader, context)
          2 -> _primaryFunction = NullableStringDataAdapter.deserializeData(reader, context)
          3 -> _friendsConnection = FriendsConnection.obj().deserializeData(reader, context)
          else -> break
        }
      }

      return HeroDetailsImpl.DroidData(
        __typename = __typename!!,
        name = _name!!,
        primaryFunction = _primaryFunction,
        friendsConnection = _friendsConnection!!
      )
    }

    public fun serializeData(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.DroidData,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("__typename")
      StringDataAdapter.serializeData(writer, value.__typename, context)

      writer.name("name")
      StringDataAdapter.serializeData(writer, value.name, context)

      writer.name("primaryFunction")
      NullableStringDataAdapter.serializeData(writer, value.primaryFunction, context)

      writer.name("friendsConnection")
      FriendsConnection.obj().serializeData(writer, value.friendsConnection, context)
    }

    private object FriendsConnection : DataAdapter<HeroDetailsImpl.DroidData.FriendsConnection> {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext):
          HeroDetailsImpl.DroidData.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.DroidData.FriendsConnection.Edge?>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntDataAdapter.deserializeData(reader, context)
            1 -> _edges = Edge.obj().nullable().list().nullable().deserializeData(reader, context)
            else -> break
          }
        }

        return HeroDetailsImpl.DroidData.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.DroidData.FriendsConnection,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("totalCount")
        NullableIntDataAdapter.serializeData(writer, value.totalCount, context)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().serializeData(writer, value.edges, context)
      }

      private object Edge : DataAdapter<HeroDetailsImpl.DroidData.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        public override fun deserializeData(reader: JsonReader,
            context: DataAdapter.DeserializeDataContext):
            HeroDetailsImpl.DroidData.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().deserializeData(reader, context)
              else -> break
            }
          }

          return HeroDetailsImpl.DroidData.FriendsConnection.Edge(
            node = _node
          )
        }

        public override fun serializeData(
          writer: JsonWriter,
          `value`: HeroDetailsImpl.DroidData.FriendsConnection.Edge,
          context: DataAdapter.SerializeDataContext,
        ): Unit {
          writer.name("node")
          Node.obj().nullable().serializeData(writer, value.node, context)
        }

        private object Node : DataAdapter<HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          public override fun deserializeData(reader: JsonReader,
              context: DataAdapter.DeserializeDataContext):
              HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node {
            var _name: String? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringDataAdapter.deserializeData(reader, context)
                else -> break
              }
            }

            return HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node(
              name = _name!!
            )
          }

          public override fun serializeData(
            writer: JsonWriter,
            `value`: HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node,
            context: DataAdapter.SerializeDataContext,
          ): Unit {
            writer.name("name")
            StringDataAdapter.serializeData(writer, value.name, context)
          }
        }
      }
    }
  }

  public object OtherData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection")

    public fun deserializeData(
      reader: JsonReader,
      context: DataAdapter.DeserializeDataContext,
      typename: String,
    ): HeroDetailsImpl.OtherData {
      var __typename: String? = typename
      var _name: String? = null
      var _friendsConnection: HeroDetailsImpl.OtherData.FriendsConnection? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringDataAdapter.deserializeData(reader, context)
          1 -> _name = StringDataAdapter.deserializeData(reader, context)
          2 -> _friendsConnection = FriendsConnection.obj().deserializeData(reader, context)
          else -> break
        }
      }

      return HeroDetailsImpl.OtherData(
        __typename = __typename!!,
        name = _name!!,
        friendsConnection = _friendsConnection!!
      )
    }

    public fun serializeData(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.OtherData,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("__typename")
      StringDataAdapter.serializeData(writer, value.__typename, context)

      writer.name("name")
      StringDataAdapter.serializeData(writer, value.name, context)

      writer.name("friendsConnection")
      FriendsConnection.obj().serializeData(writer, value.friendsConnection, context)
    }

    private object FriendsConnection : DataAdapter<HeroDetailsImpl.OtherData.FriendsConnection> {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext):
          HeroDetailsImpl.OtherData.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.OtherData.FriendsConnection.Edge?>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntDataAdapter.deserializeData(reader, context)
            1 -> _edges = Edge.obj().nullable().list().nullable().deserializeData(reader, context)
            else -> break
          }
        }

        return HeroDetailsImpl.OtherData.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.OtherData.FriendsConnection,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("totalCount")
        NullableIntDataAdapter.serializeData(writer, value.totalCount, context)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().serializeData(writer, value.edges, context)
      }

      private object Edge : DataAdapter<HeroDetailsImpl.OtherData.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        public override fun deserializeData(reader: JsonReader,
            context: DataAdapter.DeserializeDataContext):
            HeroDetailsImpl.OtherData.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().deserializeData(reader, context)
              else -> break
            }
          }

          return HeroDetailsImpl.OtherData.FriendsConnection.Edge(
            node = _node
          )
        }

        public override fun serializeData(
          writer: JsonWriter,
          `value`: HeroDetailsImpl.OtherData.FriendsConnection.Edge,
          context: DataAdapter.SerializeDataContext,
        ): Unit {
          writer.name("node")
          Node.obj().nullable().serializeData(writer, value.node, context)
        }

        private object Node : DataAdapter<HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          public override fun deserializeData(reader: JsonReader,
              context: DataAdapter.DeserializeDataContext):
              HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node {
            var _name: String? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringDataAdapter.deserializeData(reader, context)
                else -> break
              }
            }

            return HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node(
              name = _name!!
            )
          }

          public override fun serializeData(
            writer: JsonWriter,
            `value`: HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node,
            context: DataAdapter.SerializeDataContext,
          ): Unit {
            writer.name("name")
            StringDataAdapter.serializeData(writer, value.name, context)
          }
        }
      }
    }
  }
}
