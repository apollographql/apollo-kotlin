//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_inline_fragment.fragment

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.NullableIntAdapter
import com.apollographql.apollo.api.NullableStringAdapter
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.json.readTypename
import com.apollographql.apollo.api.list
import com.apollographql.apollo.api.missingField
import com.apollographql.apollo.api.nullable
import com.apollographql.apollo.api.obj
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

public object HeroDetailsImpl_ResponseAdapter {
  public object Data : Adapter<HeroDetailsImpl.Data> {
    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.Data {
      val __typename = reader.readTypename()
      return when(__typename) {
        "Human",
        -> HumanData.fromJson(reader, customScalarAdapters, __typename)
        "Droid",
        -> DroidData.fromJson(reader, customScalarAdapters, __typename)
        else
        -> OtherData.fromJson(reader, customScalarAdapters, __typename)
      }
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HeroDetailsImpl.Data,
    ) {
      when(value) {
        is HeroDetailsImpl.HumanData -> HumanData.toJson(writer, customScalarAdapters, value)
        is HeroDetailsImpl.DroidData -> DroidData.toJson(writer, customScalarAdapters, value)
        is HeroDetailsImpl.OtherData -> OtherData.toJson(writer, customScalarAdapters, value)
      }
    }
  }

  public object HumanData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection")

    public fun fromJson(
      reader: JsonReader,
      @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): HeroDetailsImpl.HumanData {
      var __typename: String? = typename
      var _name: String? = null
      var _friendsConnection: HeroDetailsImpl.HumanData.FriendsConnection? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HeroDetailsImpl.HumanData(
        __typename = __typename ?: missingField(reader, "__typename"),
        name = _name ?: missingField(reader, "name"),
        friendsConnection = _friendsConnection ?: missingField(reader, "friendsConnection")
      )
    }

    public fun toJson(
      writer: JsonWriter,
      @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
      `value`: HeroDetailsImpl.HumanData,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
    }

    private object FriendsConnection : Adapter<HeroDetailsImpl.HumanData.FriendsConnection> {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.HumanData.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.HumanData.FriendsConnection.Edge?>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
            1 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return HeroDetailsImpl.HumanData.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: HeroDetailsImpl.HumanData.FriendsConnection,
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
      }

      private object Edge : Adapter<HeroDetailsImpl.HumanData.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.HumanData.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return HeroDetailsImpl.HumanData.FriendsConnection.Edge(
            node = _node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: HeroDetailsImpl.HumanData.FriendsConnection.Edge,
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
        }

        private object Node : Adapter<HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node {
            var _name: String? = null

            while (true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node(
              name = _name ?: missingField(reader, "name")
            )
          }

          override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            `value`: HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node,
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, customScalarAdapters, value.name)
          }
        }
      }
    }
  }

  public object DroidData {
    public val RESPONSE_NAMES: List<String> =
        listOf("__typename", "name", "primaryFunction", "friendsConnection")

    public fun fromJson(
      reader: JsonReader,
      @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): HeroDetailsImpl.DroidData {
      var __typename: String? = typename
      var _name: String? = null
      var _primaryFunction: String? = null
      var _friendsConnection: HeroDetailsImpl.DroidData.FriendsConnection? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _primaryFunction = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HeroDetailsImpl.DroidData(
        __typename = __typename ?: missingField(reader, "__typename"),
        name = _name ?: missingField(reader, "name"),
        primaryFunction = _primaryFunction,
        friendsConnection = _friendsConnection ?: missingField(reader, "friendsConnection")
      )
    }

    public fun toJson(
      writer: JsonWriter,
      @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
      `value`: HeroDetailsImpl.DroidData,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("primaryFunction")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.primaryFunction)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
    }

    private object FriendsConnection : Adapter<HeroDetailsImpl.DroidData.FriendsConnection> {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.DroidData.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.DroidData.FriendsConnection.Edge?>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
            1 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return HeroDetailsImpl.DroidData.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: HeroDetailsImpl.DroidData.FriendsConnection,
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
      }

      private object Edge : Adapter<HeroDetailsImpl.DroidData.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.DroidData.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return HeroDetailsImpl.DroidData.FriendsConnection.Edge(
            node = _node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: HeroDetailsImpl.DroidData.FriendsConnection.Edge,
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
        }

        private object Node : Adapter<HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node {
            var _name: String? = null

            while (true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node(
              name = _name ?: missingField(reader, "name")
            )
          }

          override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            `value`: HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node,
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, customScalarAdapters, value.name)
          }
        }
      }
    }
  }

  public object OtherData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection")

    public fun fromJson(
      reader: JsonReader,
      @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): HeroDetailsImpl.OtherData {
      var __typename: String? = typename
      var _name: String? = null
      var _friendsConnection: HeroDetailsImpl.OtherData.FriendsConnection? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HeroDetailsImpl.OtherData(
        __typename = __typename ?: missingField(reader, "__typename"),
        name = _name ?: missingField(reader, "name"),
        friendsConnection = _friendsConnection ?: missingField(reader, "friendsConnection")
      )
    }

    public fun toJson(
      writer: JsonWriter,
      @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
      `value`: HeroDetailsImpl.OtherData,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
    }

    private object FriendsConnection : Adapter<HeroDetailsImpl.OtherData.FriendsConnection> {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.OtherData.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.OtherData.FriendsConnection.Edge?>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
            1 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return HeroDetailsImpl.OtherData.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: HeroDetailsImpl.OtherData.FriendsConnection,
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
      }

      private object Edge : Adapter<HeroDetailsImpl.OtherData.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.OtherData.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return HeroDetailsImpl.OtherData.FriendsConnection.Edge(
            node = _node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: HeroDetailsImpl.OtherData.FriendsConnection.Edge,
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
        }

        private object Node : Adapter<HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node {
            var _name: String? = null

            while (true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node(
              name = _name ?: missingField(reader, "name")
            )
          }

          override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            `value`: HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node,
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, customScalarAdapters, value.name)
          }
        }
      }
    }
  }
}
