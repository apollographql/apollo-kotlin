//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_inline_fragment.fragment;

import com.apollographql.apollo.api.Fragment;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

public class DroidDetails implements Fragment.Data {
  /**
   * What others call this droid
   */
  public String name;

  /**
   * This droid's primary function
   */
  public String primaryFunction;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public DroidDetails(String name, String primaryFunction) {
    this.name = name;
    this.primaryFunction = primaryFunction;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof DroidDetails) {
      DroidDetails that = (DroidDetails) o;
      return ((this.name == null) ? (that.name == null) : this.name.equals(that.name))
       &&((this.primaryFunction == null) ? (that.primaryFunction == null) : this.primaryFunction.equals(that.primaryFunction));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (name == null) ? 0 : name.hashCode();
      __h *= 1000003;
      __h ^= (primaryFunction == null) ? 0 : primaryFunction.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "DroidDetails{"
        + "name=" + name + ", "
        + "primaryFunction=" + primaryFunction
        + "}";
    }
    return $toString;
  }

  public Builder toBuilder() {
    Builder builder = new Builder();
    builder.name = name;
    builder.primaryFunction = primaryFunction;
    return builder;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private String name;

    private String primaryFunction;

    Builder() {
    }

    /**
     * What others call this droid
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * This droid's primary function
     */
    public Builder primaryFunction(String primaryFunction) {
      this.primaryFunction = primaryFunction;
      return this;
    }

    public DroidDetails build() {
      return new DroidDetails(name, primaryFunction);
    }
  }
}
