//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.merged_include.adapter

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.ScalarAdapters
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.merged_include.TestQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : ApolloAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
        TestQuery.Data {
      var _hero: TestQuery.Data.Hero? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj().nullable().fromJson(reader, scalarAdapters)
          else -> break
        }
      }

      return TestQuery.Data(
        hero = _hero
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      scalarAdapters: ScalarAdapters,
      `value`: TestQuery.Data,
    ): Unit {
      writer.name("hero")
      Hero.obj().nullable().toJson(writer, scalarAdapters, value.hero)
    }

    private object Hero : ApolloAdapter<TestQuery.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("name", "id")

      public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
          TestQuery.Data.Hero {
        var _name: String? = null
        var _id: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = StringApolloAdapter.fromJson(reader, scalarAdapters)
            1 -> _id = StringApolloAdapter.fromJson(reader, scalarAdapters)
            else -> break
          }
        }

        return TestQuery.Data.Hero(
          name = _name!!,
          id = _id!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        scalarAdapters: ScalarAdapters,
        `value`: TestQuery.Data.Hero,
      ): Unit {
        writer.name("name")
        StringApolloAdapter.toJson(writer, scalarAdapters, value.name)

        writer.name("id")
        StringApolloAdapter.toJson(writer, scalarAdapters, value.id)
      }
    }
  }
}
