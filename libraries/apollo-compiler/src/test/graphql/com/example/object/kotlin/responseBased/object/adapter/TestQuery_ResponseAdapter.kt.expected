//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.`object`.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.`object`.TestQuery
import kotlin.Int
import kotlin.String
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : CompositeAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("object")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        TestQuery.Data {
      var _object: TestQuery.Data.Object? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _object = Object.obj().nullable().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return TestQuery.Data(
        `object` = _object
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("object")
      Object.obj().nullable().toJson(writer, value.`object`, adapterContext)
    }

    private object Object : CompositeAdapter<TestQuery.Data.Object> {
      public val RESPONSE_NAMES: List<String> = listOf("random")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          TestQuery.Data.Object {
        var _random: Int? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _random = NullableIntAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return TestQuery.Data.Object(
          random = _random
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: TestQuery.Data.Object,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("random")
        NullableIntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.random)
      }
    }
  }
}
