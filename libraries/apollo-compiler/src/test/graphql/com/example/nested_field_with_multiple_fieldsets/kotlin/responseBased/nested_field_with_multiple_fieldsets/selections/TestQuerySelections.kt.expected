//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_field_with_multiple_fieldsets.selections

import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CompiledFragment
import com.apollographql.apollo.api.CompiledSelection
import com.apollographql.apollo.api.notNull
import com.example.nested_field_with_multiple_fieldsets.type.GraphQLString
import com.example.nested_field_with_multiple_fieldsets.type.Iface1
import com.example.nested_field_with_multiple_fieldsets.type.Iface2
import kotlin.collections.List

public object TestQuerySelections {
  private val __onIface2: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "scalar1",
          type = GraphQLString.type
        ).build()
      )

  private val __onImpl2: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "scalar2",
          type = GraphQLString.type
        ).build()
      )

  private val __iface2: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Iface2",
          possibleTypes = listOf("Impl2")
        ).selections(__onIface2)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Impl2",
          possibleTypes = listOf("Impl2")
        ).selections(__onImpl2)
        .build()
      )

  private val __onIface1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "iface2",
          type = Iface2.type
        ).selections(__iface2)
        .build()
      )

  private val __onIface21: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "scalar3",
          type = GraphQLString.type
        ).build()
      )

  private val __onImpl21: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "scalar4",
          type = GraphQLString.type
        ).build()
      )

  private val __iface21: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Iface2",
          possibleTypes = listOf("Impl2")
        ).selections(__onIface21)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Impl2",
          possibleTypes = listOf("Impl2")
        ).selections(__onImpl21)
        .build()
      )

  private val __onImpl1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "iface2",
          type = Iface2.type
        ).selections(__iface21)
        .build()
      )

  private val __iface1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Iface1",
          possibleTypes = listOf("Impl1")
        ).selections(__onIface1)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Impl1",
          possibleTypes = listOf("Impl1")
        ).selections(__onImpl1)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "iface1",
          type = Iface1.type
        ).selections(__iface1)
        .build()
      )
}
