//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.custom_scalar_type.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.custom_scalar_type.TestQuery
import com.example.custom_scalar_type.type.GraphQLID
import java.util.Date
import kotlin.Any
import kotlin.Long
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : Adapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Data {
      var _hero: TestQuery.Data.Hero? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.Data(
        hero = _hero
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Data,
    ): Unit {
      writer.name("hero")
      Hero.obj().nullable().toJson(writer, customScalarAdapters, value.hero)
    }

    private object Hero : Adapter<TestQuery.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("id", "name", "birthDate", "appearanceDates",
          "fieldWithUnsupportedType", "profileLink", "links")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          TestQuery.Data.Hero {
        var _id: Long? = null
        var _name: String? = null
        var _birthDate: Date? = null
        var _appearanceDates: List<Date>? = null
        var _fieldWithUnsupportedType: Any? = null
        var _profileLink: String? = null
        var _links: List<String>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _id = customScalarAdapters.responseAdapterFor<Long>(GraphQLID.type).fromJson(reader,
                customScalarAdapters)
            1 -> _name = com.example.MyStringAdapter().fromJson(reader, customScalarAdapters)
            2 -> _birthDate = customScalarAdapters.responseAdapterFor<Date>(com.example.custom_scalar_type.type.Date.type).fromJson(reader,
                customScalarAdapters)
            3 -> _appearanceDates = customScalarAdapters.responseAdapterFor<Date>(com.example.custom_scalar_type.type.Date.type).list().fromJson(reader,
                customScalarAdapters)
            4 -> _fieldWithUnsupportedType = AnyAdapter.fromJson(reader, customScalarAdapters)
            5 -> _profileLink = com.example.UrlAdapter.fromJson(reader, customScalarAdapters)
            6 -> _links = com.example.UrlAdapter.list().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return TestQuery.Data.Hero(
          id = _id!!,
          name = _name!!,
          birthDate = _birthDate!!,
          appearanceDates = _appearanceDates!!,
          fieldWithUnsupportedType = _fieldWithUnsupportedType!!,
          profileLink = _profileLink!!,
          links = _links!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: TestQuery.Data.Hero,
      ): Unit {
        writer.name("id")
        customScalarAdapters.responseAdapterFor<Long>(GraphQLID.type).toJson(writer,
            customScalarAdapters, value.id)

        writer.name("name")
        com.example.MyStringAdapter().toJson(writer, customScalarAdapters, value.name)

        writer.name("birthDate")
        customScalarAdapters.responseAdapterFor<Date>(com.example.custom_scalar_type.type.Date.type).toJson(writer,
            customScalarAdapters, value.birthDate)

        writer.name("appearanceDates")
        customScalarAdapters.responseAdapterFor<Date>(com.example.custom_scalar_type.type.Date.type).list().toJson(writer,
            customScalarAdapters, value.appearanceDates)

        writer.name("fieldWithUnsupportedType")
        AnyAdapter.toJson(writer, customScalarAdapters, value.fieldWithUnsupportedType)

        writer.name("profileLink")
        com.example.UrlAdapter.toJson(writer, customScalarAdapters, value.profileLink)

        writer.name("links")
        com.example.UrlAdapter.list().toJson(writer, customScalarAdapters, value.links)
      }
    }
  }
}
