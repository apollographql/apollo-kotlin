//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.custom_scalar_type

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.Timestamp
import com.example.custom_scalar_type.adapter.TestQuery_ResponseAdapter
import com.example.custom_scalar_type.selections.TestQuerySelections
import com.example.custom_scalar_type.type.scalar.CharacterID
import java.util.Date
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.List
import com.example.custom_scalar_type.type.Query as CompiledQuery

public class TestQuery() : Query<TestQuery.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val hero: Hero?,
    public val nonNullTimestamp: Timestamp,
    public val nullableTimestamp: Timestamp?,
    public val nonNullListOfNonNullTimestamp: List<Timestamp>,
    public val nonNullListOfNullableTimestamp: List<Timestamp?>,
    public val nullableListOfNonNullTimestamp: List<Timestamp>?,
    public val nullableListOfNullableTimestamp: List<Timestamp?>?,
  ) : Query.Data {
    public fun nonNullListOfNullableTimestampFilterNotNull(): List<Timestamp> = nonNullListOfNullableTimestamp.filterNotNull()

    public fun nullableListOfNullableTimestampFilterNotNull(): List<Timestamp>? = nullableListOfNullableTimestamp?.filterNotNull()

    public data class Hero(
      /**
       * The ID of the character
       */
      public val id: CharacterID,
      /**
       * The name of the character
       */
      public val name: String,
      /**
       * The date character was born.
       */
      public val birthDate: Date,
      /**
       * The dates of appearances
       */
      public val appearanceDates: List<Date>,
      /**
       * The date character was born.
       */
      public val fieldWithUnsupportedType: Any,
      /**
       * Profile link
       */
      public val profileLink: String,
      /**
       * Links
       */
      public val links: List<String>,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "60b4c0088b4e38080bd241601da65e11cc8fedf8a7d91571a4f4d39ccccb084f"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery {
     *   hero {
     *     id
     *     name
     *     birthDate
     *     appearanceDates
     *     fieldWithUnsupportedType
     *     profileLink
     *     links
     *   }
     *   nonNullTimestamp
     *   nullableTimestamp
     *   nonNullListOfNonNullTimestamp
     *   nonNullListOfNullableTimestamp
     *   nullableListOfNonNullTimestamp
     *   nullableListOfNullableTimestamp
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery { hero { id name birthDate appearanceDates fieldWithUnsupportedType profileLink links } nonNullTimestamp nullableTimestamp nonNullListOfNonNullTimestamp nonNullListOfNullableTimestamp nullableListOfNonNullTimestamp nullableListOfNullableTimestamp }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
