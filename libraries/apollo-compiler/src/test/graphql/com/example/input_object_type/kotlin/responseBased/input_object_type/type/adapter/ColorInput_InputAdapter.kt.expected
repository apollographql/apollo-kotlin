//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_type.type.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.DoubleAdapter
import com.apollographql.apollo.api.IntAdapter
import com.apollographql.apollo.api.NullableDoubleAdapter
import com.apollographql.apollo.api.Optional
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.nullable
import com.apollographql.apollo.api.obj
import com.apollographql.apollo.api.present
import com.example.input_object_type.type.ColorInput
import kotlin.IllegalStateException

public object ColorInput_InputAdapter : Adapter<ColorInput> {
  override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): ColorInput = throw IllegalStateException("Input type used in output position")

  override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: ColorInput,
  ) {
    if (value.red is Optional.Present) {
      writer.name("red")
      IntAdapter.present().toJson(writer, customScalarAdapters, value.red)
    }
    if (value.green is Optional.Present) {
      writer.name("green")
      NullableDoubleAdapter.present().toJson(writer, customScalarAdapters, value.green)
    }
    if (value.blue is Optional.Present) {
      writer.name("blue")
      DoubleAdapter.present().toJson(writer, customScalarAdapters, value.blue)
    }
    if (value.enumWithDefaultValue is Optional.Present) {
      writer.name("enumWithDefaultValue")
      Episode_ResponseAdapter.nullable().present().toJson(writer, customScalarAdapters, value.enumWithDefaultValue)
    }
    if (value.reviewRefInput is Optional.Present) {
      writer.name("reviewRefInput")
      ReviewRefInput_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters, value.reviewRefInput)
    }
  }
}
