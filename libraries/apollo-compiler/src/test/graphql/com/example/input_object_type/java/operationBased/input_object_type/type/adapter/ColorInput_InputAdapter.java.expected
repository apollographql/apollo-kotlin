//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_type.type.adapter;

import com.apollographql.apollo3.api.ApolloOptionalDataAdapter;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.NullableDataAdapter;
import com.apollographql.apollo3.api.ObjectDataAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.input_object_type.type.ColorInput;
import com.example.input_object_type.type.ReviewRefInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum ColorInput_InputAdapter implements DataAdapter<ColorInput> {
  INSTANCE;

  @Override
  public ColorInput deserializeData(JsonReader reader, DataAdapter.DeserializeDataContext context)
      throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void serializeData(JsonWriter writer, ColorInput value,
      DataAdapter.SerializeDataContext context) throws IOException {
    if (value.red instanceof Optional.Present) {
      writer.name("red");
      new ApolloOptionalDataAdapter<>(DataAdapters.IntDataAdapter).serializeData(writer, value.red, context);
    }
    if (value.green instanceof Optional.Present) {
      writer.name("green");
      new ApolloOptionalDataAdapter<>(DataAdapters.NullableDoubleDataAdapter).serializeData(writer, value.green, context);
    }
    if (value.blue instanceof Optional.Present) {
      writer.name("blue");
      new ApolloOptionalDataAdapter<>(DataAdapters.DoubleDataAdapter).serializeData(writer, value.blue, context);
    }
    if (value.enumWithDefaultValue instanceof Optional.Present) {
      writer.name("enumWithDefaultValue");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(Episode_ResponseAdapter.INSTANCE)).serializeData(writer, value.enumWithDefaultValue, context);
    }
    if (value.reviewRefInput instanceof Optional.Present) {
      writer.name("reviewRefInput");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ObjectDataAdapter<ReviewRefInput>(ReviewRefInput_InputAdapter.INSTANCE, false))).serializeData(writer, value.reviewRefInput, context);
    }
  }
}
