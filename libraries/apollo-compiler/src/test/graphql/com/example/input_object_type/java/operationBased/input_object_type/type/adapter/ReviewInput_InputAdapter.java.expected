//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_type.type.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloAdapter;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.ListAdapter;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.ScalarAdapterToApolloAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.input_object_type.type.ColorInput;
import com.example.input_object_type.type.ReviewInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;
import java.util.Date;

public enum ReviewInput_InputAdapter implements ApolloAdapter<ReviewInput> {
  INSTANCE;

  @Override
  public ReviewInput fromJson(JsonReader reader, ApolloAdapter.DataDeserializeContext context)
      throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, ReviewInput value,
      ApolloAdapter.DataSerializeContext context) throws IOException {
    writer.name("stars");
    Adapters.IntApolloAdapter.toJson(writer, value.stars, context);
    if (value.nullableIntFieldWithDefaultValue instanceof Optional.Present) {
      writer.name("nullableIntFieldWithDefaultValue");
      new ApolloOptionalAdapter<>(Adapters.NullableIntApolloAdapter).toJson(writer, value.nullableIntFieldWithDefaultValue, context);
    }
    if (value.commentary instanceof Optional.Present) {
      writer.name("commentary");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ScalarAdapterToApolloAdapter<>(new com.example.MyStringAdapter()))).toJson(writer, value.commentary, context);
    }
    writer.name("favoriteColor");
    new ObjectAdapter<ColorInput>(ColorInput_InputAdapter.INSTANCE, false).toJson(writer, value.favoriteColor, context);
    if (value.enumWithDefaultValue instanceof Optional.Present) {
      writer.name("enumWithDefaultValue");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(Episode_ResponseAdapter.INSTANCE)).toJson(writer, value.enumWithDefaultValue, context);
    }
    if (value.nonNullableEnumWithDefaultValue instanceof Optional.Present) {
      writer.name("nonNullableEnumWithDefaultValue");
      new ApolloOptionalAdapter<>(Episode_ResponseAdapter.INSTANCE).toJson(writer, value.nonNullableEnumWithDefaultValue, context);
    }
    if (value.nullableEnum instanceof Optional.Present) {
      writer.name("nullableEnum");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(Episode_ResponseAdapter.INSTANCE)).toJson(writer, value.nullableEnum, context);
    }
    if (value.listOfCustomScalar instanceof Optional.Present) {
      writer.name("listOfCustomScalar");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new NullableAdapter<>((context.scalarAdapters.<Date>responseAdapterFor(com.example.input_object_type.type.Date.type)))))).toJson(writer, value.listOfCustomScalar, context);
    }
    if (value.customScalar instanceof Optional.Present) {
      writer.name("customScalar");
      new ApolloOptionalAdapter<>(new NullableAdapter<>((context.scalarAdapters.<Date>responseAdapterFor(com.example.input_object_type.type.Date.type)))).toJson(writer, value.customScalar, context);
    }
    if (value.listOfEnums instanceof Optional.Present) {
      writer.name("listOfEnums");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new NullableAdapter<>(Episode_ResponseAdapter.INSTANCE)))).toJson(writer, value.listOfEnums, context);
    }
    if (value.listOfInt instanceof Optional.Present) {
      writer.name("listOfInt");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(Adapters.NullableIntApolloAdapter))).toJson(writer, value.listOfInt, context);
    }
    if (value.listOfString instanceof Optional.Present) {
      writer.name("listOfString");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new NullableAdapter<>(new ScalarAdapterToApolloAdapter<>(new com.example.MyStringAdapter()))))).toJson(writer, value.listOfString, context);
    }
    writer.name("listOfStringNonOptional");
    new ListAdapter<>(new NullableAdapter<>(new ScalarAdapterToApolloAdapter<>(new com.example.MyStringAdapter()))).toJson(writer, value.listOfStringNonOptional, context);
    if (value.listOfInputTypes instanceof Optional.Present) {
      writer.name("listOfInputTypes");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new NullableAdapter<>(new ObjectAdapter<ColorInput>(ColorInput_InputAdapter.INSTANCE, false))))).toJson(writer, value.listOfInputTypes, context);
    }
    if (value.booleanWithDefaultValue instanceof Optional.Present) {
      writer.name("booleanWithDefaultValue");
      new ApolloOptionalAdapter<>(Adapters.NullableBooleanApolloAdapter).toJson(writer, value.booleanWithDefaultValue, context);
    }
    if (value.booleanNonOptional instanceof Optional.Present) {
      writer.name("booleanNonOptional");
      new ApolloOptionalAdapter<>(Adapters.NullableBooleanApolloAdapter).toJson(writer, value.booleanNonOptional, context);
    }
    if (value.listOfListOfString instanceof Optional.Present) {
      writer.name("listOfListOfString");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new ListAdapter<>(new ScalarAdapterToApolloAdapter<>(new com.example.MyStringAdapter()))))).toJson(writer, value.listOfListOfString, context);
    }
    if (value.listOfListOfEnum instanceof Optional.Present) {
      writer.name("listOfListOfEnum");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new ListAdapter<>(Episode_ResponseAdapter.INSTANCE)))).toJson(writer, value.listOfListOfEnum, context);
    }
    if (value.listOfListOfCustom instanceof Optional.Present) {
      writer.name("listOfListOfCustom");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new ListAdapter<>((context.scalarAdapters.<Date>responseAdapterFor(com.example.input_object_type.type.Date.type)))))).toJson(writer, value.listOfListOfCustom, context);
    }
    if (value.listOfListOfObject instanceof Optional.Present) {
      writer.name("listOfListOfObject");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new ListAdapter<>(new ObjectAdapter<ColorInput>(ColorInput_InputAdapter.INSTANCE, false))))).toJson(writer, value.listOfListOfObject, context);
    }
    if (value.CapitalizedField instanceof Optional.Present) {
      writer.name("CapitalizedField");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ScalarAdapterToApolloAdapter<>(new com.example.MyStringAdapter()))).toJson(writer, value.CapitalizedField, context);
    }
    if (value.CapitalizedInt instanceof Optional.Present) {
      writer.name("CapitalizedInt");
      new ApolloOptionalAdapter<>(Adapters.NullableIntApolloAdapter).toJson(writer, value.CapitalizedInt, context);
    }
  }
}
