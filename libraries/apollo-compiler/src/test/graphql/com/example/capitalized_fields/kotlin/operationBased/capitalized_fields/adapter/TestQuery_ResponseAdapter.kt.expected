//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.capitalized_fields.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.capitalized_fields.TestQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : CompositeAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("Horse")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Data {
      var _Horse: TestQuery.Horse? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _Horse = Horse.obj(true).nullable().deserializeComposite(reader, context)
          else -> break
        }
      }

      return TestQuery.Data(
        Horse = _Horse
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("Horse")
      Horse.obj(true).nullable().serializeComposite(writer, value.Horse, context)
    }
  }

  public object Horse : CompositeAdapter<TestQuery.Horse> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "Donkey")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Horse {
      var __typename: String? = null
      var _Donkey: String? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          1 -> _Donkey = NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          else -> break
        }
      }

      reader.rewind()
      val _onHorse = com.example.capitalized_fields.adapter.TestQuery_ResponseAdapter.OnHorse.deserializeComposite(reader,
          context)

      return TestQuery.Horse(
        __typename = __typename!!,
        Donkey = _Donkey,
        onHorse = _onHorse
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: TestQuery.Horse,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

      writer.name("Donkey")
      NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.Donkey)

      com.example.capitalized_fields.adapter.TestQuery_ResponseAdapter.OnHorse.serializeComposite(writer,
          value.onHorse, context)
    }
  }

  public object OnHorse : CompositeAdapter<TestQuery.OnHorse> {
    public val RESPONSE_NAMES: List<String> = listOf("Cow")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): TestQuery.OnHorse {
      var _Cow: TestQuery.Cow? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _Cow = Cow.obj().nullable().deserializeComposite(reader, context)
          else -> break
        }
      }

      return TestQuery.OnHorse(
        Cow = _Cow
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: TestQuery.OnHorse,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("Cow")
      Cow.obj().nullable().serializeComposite(writer, value.Cow, context)
    }
  }

  public object Cow : CompositeAdapter<TestQuery.Cow> {
    public val RESPONSE_NAMES: List<String> = listOf("Moo")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Cow {
      var _Moo: String? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _Moo = NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          else -> break
        }
      }

      return TestQuery.Cow(
        Moo = _Moo
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: TestQuery.Cow,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("Moo")
      NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.Moo)
    }
  }
}
