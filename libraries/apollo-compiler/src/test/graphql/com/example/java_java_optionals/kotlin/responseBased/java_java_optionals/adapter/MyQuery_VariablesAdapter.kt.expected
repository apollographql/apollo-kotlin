//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_java_optionals.adapter

import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.present
import com.example.java_java_optionals.MyQuery
import com.example.java_java_optionals.type.adapter.MyInput_InputAdapter
import kotlin.Boolean
import kotlin.Suppress
import kotlin.Unit

public object MyQuery_VariablesAdapter {
  @Suppress(
    "UNUSED_PARAMETER",
    "UNUSED_VARIABLE",
  )
  public fun serializeVariables(
    writer: JsonWriter,
    `value`: MyQuery,
    customScalarAdapters: CustomScalarAdapters,
    withBooleanDefaultValues: Boolean,
  ): Unit {
    val adapterContext =
        CompositeAdapterContext.Builder().customScalarAdapters(customScalarAdapters).build()
    if (value.nullableInt is Optional.Present) {
      writer.name("nullableInt")
      NullableIntAdapter.present().toJson(writer, CustomScalarAdapters.Empty, value.nullableInt)
    }
    writer.name("nonNullableInt")
    IntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.nonNullableInt)
    if (value.nonNullableIntWithDefault is Optional.Present) {
      writer.name("nonNullableIntWithDefault")
      IntAdapter.present().toJson(writer, CustomScalarAdapters.Empty,
          value.nonNullableIntWithDefault)
    }
    if (value.nullableInput is Optional.Present) {
      writer.name("nullableInput")
      MyInput_InputAdapter.obj().nullable().present().toJson(writer, value.nullableInput,
          adapterContext)
    }
    writer.name("nonNullableInput")
    MyInput_InputAdapter.obj().toJson(writer, value.nonNullableInput, adapterContext)
    if (value.nonNullableInputWithDefault is Optional.Present) {
      writer.name("nonNullableInputWithDefault")
      MyInput_InputAdapter.obj().present().toJson(writer, value.nonNullableInputWithDefault,
          adapterContext)
    }
  }
}
