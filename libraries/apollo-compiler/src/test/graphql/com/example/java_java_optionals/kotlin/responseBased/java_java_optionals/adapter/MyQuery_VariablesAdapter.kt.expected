//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_java_optionals.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.present
import com.example.java_java_optionals.MyQuery
import com.example.java_java_optionals.type.adapter.MyInput_InputAdapter
import kotlin.IllegalStateException
import kotlin.Unit

public object MyQuery_VariablesAdapter : Adapter<MyQuery> {
  public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      MyQuery = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: MyQuery,
  ): Unit {
    if (value.nullableInt is Optional.Present) {
      writer.name("nullableInt")
      NullableIntAdapter.present().toJson(writer, customScalarAdapters, value.nullableInt)
    }
    writer.name("nonNullableInt")
    IntAdapter.toJson(writer, customScalarAdapters, value.nonNullableInt)
    if (value.nonNullableIntWithDefault is Optional.Present) {
      writer.name("nonNullableIntWithDefault")
      IntAdapter.present().toJson(writer, customScalarAdapters, value.nonNullableIntWithDefault)
    }
    if (value.nullableInput is Optional.Present) {
      writer.name("nullableInput")
      MyInput_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.nullableInput)
    }
    writer.name("nonNullableInput")
    MyInput_InputAdapter.obj().toJson(writer, customScalarAdapters, value.nonNullableInput)
    if (value.nonNullableInputWithDefault is Optional.Present) {
      writer.name("nonNullableInputWithDefault")
      MyInput_InputAdapter.obj().present().toJson(writer, customScalarAdapters,
          value.nonNullableInputWithDefault)
    }
  }
}
