//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_java_optionals.type.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CompositeAdapterContext;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.java.adapter.JavaOptionalAdapter;
import com.apollographql.apollo3.api.java.adapter.JavaOptionalAdapters;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.java_java_optionals.type.MyInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum MyInput_InputAdapter implements CompositeAdapter<MyInput> {
  INSTANCE;

  @Override
  public MyInput fromJson(JsonReader reader, CompositeAdapterContext adapterContext) throws
      IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, MyInput value, CompositeAdapterContext adapterContext)
      throws IOException {
    if (value.nullableInt.isPresent()) {
      writer.name("nullableInt");
      new JavaOptionalAdapter<>(JavaOptionalAdapters.JavaOptionalIntAdapter).toJson(writer, CustomScalarAdapters.Empty, value.nullableInt);
    }
    writer.name("nonNullableInt");
    Adapters.IntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.nonNullableInt);
    if (value.nonNullableIntWithDefault.isPresent()) {
      writer.name("nonNullableIntWithDefault");
      new JavaOptionalAdapter<>(Adapters.IntAdapter).toJson(writer, CustomScalarAdapters.Empty, value.nonNullableIntWithDefault);
    }
  }
}
