//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.unique_type_name.fragment

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.NullableIntAdapter
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.list
import com.apollographql.apollo.api.missingField
import com.apollographql.apollo.api.nullable
import com.apollographql.apollo.api.obj
import kotlin.Int
import kotlin.String
import kotlin.collections.List

public object HeroDetailsImpl_ResponseAdapter {
  public object Data : Adapter<HeroDetailsImpl.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("name", "friendsConnection")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.Data {
      var _name: String? = null
      var _friendsConnection: HeroDetailsImpl.Data.FriendsConnection? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HeroDetailsImpl.Data(
        name = _name ?: missingField(reader, "name"),
        friendsConnection = _friendsConnection ?: missingField(reader, "friendsConnection")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HeroDetailsImpl.Data,
    ) {
      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
    }

    private object FriendsConnection : Adapter<HeroDetailsImpl.Data.FriendsConnection> {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.Data.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.Data.FriendsConnection.Edge?>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
            1 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return HeroDetailsImpl.Data.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: HeroDetailsImpl.Data.FriendsConnection,
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
      }

      private object Edge : Adapter<HeroDetailsImpl.Data.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.Data.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.Data.FriendsConnection.Edge.Node? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return HeroDetailsImpl.Data.FriendsConnection.Edge(
            node = _node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: HeroDetailsImpl.Data.FriendsConnection.Edge,
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
        }

        private object Node : Adapter<HeroDetailsImpl.Data.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.Data.FriendsConnection.Edge.Node {
            var _name: String? = null

            while (true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return HeroDetailsImpl.Data.FriendsConnection.Edge.Node(
              name = _name ?: missingField(reader, "name")
            )
          }

          override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            `value`: HeroDetailsImpl.Data.FriendsConnection.Edge.Node,
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, customScalarAdapters, value.name)
          }
        }
      }
    }
  }
}
