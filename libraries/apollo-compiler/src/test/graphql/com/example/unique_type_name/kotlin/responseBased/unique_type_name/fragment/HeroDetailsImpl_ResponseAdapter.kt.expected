//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.unique_type_name.fragment

import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.NullableIntDataAdapter
import com.apollographql.apollo3.api.StringDataAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object HeroDetailsImpl_ResponseAdapter {
  public object Data : DataAdapter<HeroDetailsImpl.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("name", "friendsConnection")

    public override fun deserializeData(reader: JsonReader,
        context: DataAdapter.DeserializeDataContext): HeroDetailsImpl.Data {
      var _name: String? = null
      var _friendsConnection: HeroDetailsImpl.Data.FriendsConnection? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _name = StringDataAdapter.deserializeData(reader, context)
          1 -> _friendsConnection = FriendsConnection.obj().deserializeData(reader, context)
          else -> break
        }
      }

      return HeroDetailsImpl.Data(
        name = _name!!,
        friendsConnection = _friendsConnection!!
      )
    }

    public override fun serializeData(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.Data,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("name")
      StringDataAdapter.serializeData(writer, value.name, context)

      writer.name("friendsConnection")
      FriendsConnection.obj().serializeData(writer, value.friendsConnection, context)
    }

    private object FriendsConnection : DataAdapter<HeroDetailsImpl.Data.FriendsConnection> {
      public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext): HeroDetailsImpl.Data.FriendsConnection {
        var _totalCount: Int? = null
        var _edges: List<HeroDetailsImpl.Data.FriendsConnection.Edge?>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _totalCount = NullableIntDataAdapter.deserializeData(reader, context)
            1 -> _edges = Edge.obj().nullable().list().nullable().deserializeData(reader, context)
            else -> break
          }
        }

        return HeroDetailsImpl.Data.FriendsConnection(
          totalCount = _totalCount,
          edges = _edges
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.Data.FriendsConnection,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("totalCount")
        NullableIntDataAdapter.serializeData(writer, value.totalCount, context)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().serializeData(writer, value.edges, context)
      }

      private object Edge : DataAdapter<HeroDetailsImpl.Data.FriendsConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        public override fun deserializeData(reader: JsonReader,
            context: DataAdapter.DeserializeDataContext):
            HeroDetailsImpl.Data.FriendsConnection.Edge {
          var _node: HeroDetailsImpl.Data.FriendsConnection.Edge.Node? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().deserializeData(reader, context)
              else -> break
            }
          }

          return HeroDetailsImpl.Data.FriendsConnection.Edge(
            node = _node
          )
        }

        public override fun serializeData(
          writer: JsonWriter,
          `value`: HeroDetailsImpl.Data.FriendsConnection.Edge,
          context: DataAdapter.SerializeDataContext,
        ): Unit {
          writer.name("node")
          Node.obj().nullable().serializeData(writer, value.node, context)
        }

        private object Node : DataAdapter<HeroDetailsImpl.Data.FriendsConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("name")

          public override fun deserializeData(reader: JsonReader,
              context: DataAdapter.DeserializeDataContext):
              HeroDetailsImpl.Data.FriendsConnection.Edge.Node {
            var _name: String? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = StringDataAdapter.deserializeData(reader, context)
                else -> break
              }
            }

            return HeroDetailsImpl.Data.FriendsConnection.Edge.Node(
              name = _name!!
            )
          }

          public override fun serializeData(
            writer: JsonWriter,
            `value`: HeroDetailsImpl.Data.FriendsConnection.Edge.Node,
            context: DataAdapter.SerializeDataContext,
          ): Unit {
            writer.name("name")
            StringDataAdapter.serializeData(writer, value.name, context)
          }
        }
      }
    }
  }
}
