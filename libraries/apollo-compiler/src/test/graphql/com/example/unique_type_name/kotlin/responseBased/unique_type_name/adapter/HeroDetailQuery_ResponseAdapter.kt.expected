//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.unique_type_name.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.NullableDoubleAdapter
import com.apollographql.apollo.api.NullableIntAdapter
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.json.readTypename
import com.apollographql.apollo.api.list
import com.apollographql.apollo.api.missingField
import com.apollographql.apollo.api.nullable
import com.apollographql.apollo.api.obj
import com.example.unique_type_name.HeroDetailQuery
import com.example.unique_type_name.type.Episode
import com.example.unique_type_name.type.adapter.Episode_ResponseAdapter
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

public object HeroDetailQuery_ResponseAdapter {
  public object Data : Adapter<HeroDetailQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("heroDetailQuery")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.unique_type_name.HeroDetailQuery.Data {
      var _heroDetailQuery: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _heroDetailQuery = HeroDetailQuery.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.unique_type_name.HeroDetailQuery.Data(
        heroDetailQuery = _heroDetailQuery
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.unique_type_name.HeroDetailQuery.Data,
    ) {
      writer.name("heroDetailQuery")
      HeroDetailQuery.obj().nullable().toJson(writer, customScalarAdapters, value.heroDetailQuery)
    }

    private object HeroDetailQuery : Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery> {
      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery {
        val __typename = reader.readTypename()
        return when(__typename) {
          "Human",
          -> HumanHeroDetailQuery.fromJson(reader, customScalarAdapters, __typename)
          else
          -> OtherHeroDetailQuery.fromJson(reader, customScalarAdapters, __typename)
        }
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery,
      ) {
        when(value) {
          is com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery -> HumanHeroDetailQuery.toJson(writer, customScalarAdapters, value)
          is com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery -> OtherHeroDetailQuery.toJson(writer, customScalarAdapters, value)
        }
      }
    }

    public object HumanHeroDetailQuery {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friends", "height")

      public fun fromJson(
        reader: JsonReader,
        @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
        typename: String,
      ): com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery {
        var __typename: String? = typename
        var _name: String? = null
        var _friends: List<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend?>? = null
        var _height: Double? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
            2 -> _friends = Friend.obj().nullable().list().nullable().fromJson(reader, customScalarAdapters)
            3 -> _height = NullableDoubleAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery(
          __typename = __typename ?: missingField(reader, "__typename"),
          name = _name ?: missingField(reader, "name"),
          friends = _friends,
          height = _height
        )
      }

      public fun toJson(
        writer: JsonWriter,
        @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)

        writer.name("friends")
        Friend.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.friends)

        writer.name("height")
        NullableDoubleAdapter.toJson(writer, customScalarAdapters, value.height)
      }

      private object Friend : Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend> {
        public val RESPONSE_NAMES: List<String> = listOf("name", "appearsIn", "friends")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend {
          var _name: String? = null
          var _appearsIn: List<Episode?>? = null
          var _friends: List<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend?>? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
              1 -> _appearsIn = Episode_ResponseAdapter.nullable().list().fromJson(reader, customScalarAdapters)
              2 -> _friends = Friend.obj().nullable().list().nullable().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend(
            name = _name ?: missingField(reader, "name"),
            appearsIn = _appearsIn ?: missingField(reader, "appearsIn"),
            friends = _friends
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend,
        ) {
          writer.name("name")
          StringAdapter.toJson(writer, customScalarAdapters, value.name)

          writer.name("appearsIn")
          Episode_ResponseAdapter.nullable().list().toJson(writer, customScalarAdapters, value.appearsIn)

          writer.name("friends")
          Friend.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.friends)
        }

        private object Friend : Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend> {
          public val RESPONSE_NAMES: List<String> =
              listOf("__typename", "name", "friendsConnection")

          override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend {
            var __typename: String? = null
            var _name: String? = null
            var _friendsConnection: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection? = null

            while (true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
                1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
                2 -> _friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend(
              __typename = __typename ?: missingField(reader, "__typename"),
              name = _name ?: missingField(reader, "name"),
              friendsConnection = _friendsConnection ?: missingField(reader, "friendsConnection")
            )
          }

          override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            `value`: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend,
          ) {
            writer.name("__typename")
            StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

            writer.name("name")
            StringAdapter.toJson(writer, customScalarAdapters, value.name)

            writer.name("friendsConnection")
            FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
          }

          private object FriendsConnection : Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection> {
            public val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

            override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection {
              var _totalCount: Int? = null
              var _edges: List<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge?>? = null

              while (true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> _totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
                  1 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader, customScalarAdapters)
                  else -> break
                }
              }

              return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection(
                totalCount = _totalCount,
                edges = _edges
              )
            }

            override fun toJson(
              writer: JsonWriter,
              customScalarAdapters: CustomScalarAdapters,
              `value`: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection,
            ) {
              writer.name("totalCount")
              NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

              writer.name("edges")
              Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
            }

            private object Edge : Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge> {
              public val RESPONSE_NAMES: List<String> = listOf("node")

              override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge {
                var _node: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node? = null

                while (true) {
                  when (reader.selectName(RESPONSE_NAMES)) {
                    0 -> _node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
                    else -> break
                  }
                }

                return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge(
                  node = _node
                )
              }

              override fun toJson(
                writer: JsonWriter,
                customScalarAdapters: CustomScalarAdapters,
                `value`: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge,
              ) {
                writer.name("node")
                Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
              }

              private object Node : Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node> {
                public val RESPONSE_NAMES: List<String> = listOf("name")

                override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node {
                  var _name: String? = null

                  while (true) {
                    when (reader.selectName(RESPONSE_NAMES)) {
                      0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
                      else -> break
                    }
                  }

                  return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node(
                    name = _name ?: missingField(reader, "name")
                  )
                }

                override fun toJson(
                  writer: JsonWriter,
                  customScalarAdapters: CustomScalarAdapters,
                  `value`: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node,
                ) {
                  writer.name("name")
                  StringAdapter.toJson(writer, customScalarAdapters, value.name)
                }
              }
            }
          }
        }
      }
    }

    public object OtherHeroDetailQuery {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friends")

      public fun fromJson(
        reader: JsonReader,
        @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
        typename: String,
      ): com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery {
        var __typename: String? = typename
        var _name: String? = null
        var _friends: List<com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend?>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
            2 -> _friends = Friend.obj().nullable().list().nullable().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery(
          __typename = __typename ?: missingField(reader, "__typename"),
          name = _name ?: missingField(reader, "name"),
          friends = _friends
        )
      }

      public fun toJson(
        writer: JsonWriter,
        @Suppress("UNUSED_PARAMETER") customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)

        writer.name("friends")
        Friend.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.friends)
      }

      private object Friend : Adapter<com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend> {
        public val RESPONSE_NAMES: List<String> = listOf("name")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend {
          var _name: String? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend(
            name = _name ?: missingField(reader, "name")
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend,
        ) {
          writer.name("name")
          StringAdapter.toJson(writer, customScalarAdapters, value.name)
        }
      }
    }
  }
}
