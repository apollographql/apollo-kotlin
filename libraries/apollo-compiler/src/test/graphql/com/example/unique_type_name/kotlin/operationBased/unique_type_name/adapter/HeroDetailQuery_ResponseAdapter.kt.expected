//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.unique_type_name.adapter

import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.NullableDoubleDataAdapter
import com.apollographql.apollo3.api.StringDataAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.unique_type_name.HeroDetailQuery
import com.example.unique_type_name.type.Episode
import com.example.unique_type_name.type.adapter.Episode_ResponseAdapter
import kotlin.Double
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object HeroDetailQuery_ResponseAdapter {
  public object Data : DataAdapter<HeroDetailQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("heroDetailQuery")

    public override fun deserializeData(reader: JsonReader,
        context: DataAdapter.DeserializeDataContext):
        com.example.unique_type_name.HeroDetailQuery.Data {
      var _heroDetailQuery: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _heroDetailQuery = HeroDetailQuery.obj(true).nullable().deserializeData(reader,
              context)
          else -> break
        }
      }

      return com.example.unique_type_name.HeroDetailQuery.Data(
        heroDetailQuery = _heroDetailQuery
      )
    }

    public override fun serializeData(
      writer: JsonWriter,
      `value`: com.example.unique_type_name.HeroDetailQuery.Data,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("heroDetailQuery")
      HeroDetailQuery.obj(true).nullable().serializeData(writer, value.heroDetailQuery, context)
    }

    private object HeroDetailQuery :
        DataAdapter<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friends")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext):
          com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery {
        var __typename: String? = null
        var _name: String? = null
        var _friends: List<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.Friend?>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringDataAdapter.deserializeData(reader, context)
            1 -> _name = StringDataAdapter.deserializeData(reader, context)
            2 -> _friends = Friend.obj().nullable().list().nullable().deserializeData(reader,
                context)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _onHuman: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman? = null
        if (possibleTypes("Human").evaluate(context.falseBooleanVariables, __typename, context, null)) {
          reader.rewind()
          _onHuman = com.example.unique_type_name.adapter.HeroDetailQuery_ResponseAdapter.Data.HeroDetailQuery.OnHuman.deserializeData(reader,
              context)
        }

        return com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery(
          __typename = __typename,
          name = _name!!,
          friends = _friends,
          onHuman = _onHuman
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("__typename")
        StringDataAdapter.serializeData(writer, value.__typename, context)

        writer.name("name")
        StringDataAdapter.serializeData(writer, value.name, context)

        writer.name("friends")
        Friend.obj().nullable().list().nullable().serializeData(writer, value.friends, context)

        if (value.onHuman != null) {
          com.example.unique_type_name.adapter.HeroDetailQuery_ResponseAdapter.Data.HeroDetailQuery.OnHuman.serializeData(writer,
              value.onHuman, context)
        }
      }

      private object Friend :
          DataAdapter<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.Friend> {
        public val RESPONSE_NAMES: List<String> = listOf("name")

        public override fun deserializeData(reader: JsonReader,
            context: DataAdapter.DeserializeDataContext):
            com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.Friend {
          var _name: String? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _name = StringDataAdapter.deserializeData(reader, context)
              else -> break
            }
          }

          return com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.Friend(
            name = _name!!
          )
        }

        public override fun serializeData(
          writer: JsonWriter,
          `value`: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.Friend,
          context: DataAdapter.SerializeDataContext,
        ): Unit {
          writer.name("name")
          StringDataAdapter.serializeData(writer, value.name, context)
        }
      }

      private object OnHuman :
          DataAdapter<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman> {
        public val RESPONSE_NAMES: List<String> = listOf("height", "friends")

        public override fun deserializeData(reader: JsonReader,
            context: DataAdapter.DeserializeDataContext):
            com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman {
          var _height: Double? = null
          var _friends: List<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend?>? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _height = NullableDoubleDataAdapter.deserializeData(reader, context)
              1 -> _friends = Friend.obj().nullable().list().nullable().deserializeData(reader,
                  context)
              else -> break
            }
          }

          return com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman(
            height = _height,
            friends = _friends
          )
        }

        public override fun serializeData(
          writer: JsonWriter,
          `value`: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman,
          context: DataAdapter.SerializeDataContext,
        ): Unit {
          writer.name("height")
          NullableDoubleDataAdapter.serializeData(writer, value.height, context)

          writer.name("friends")
          Friend.obj().nullable().list().nullable().serializeData(writer, value.friends, context)
        }

        private object Friend :
            DataAdapter<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend>
            {
          public val RESPONSE_NAMES: List<String> = listOf("appearsIn", "friends")

          public override fun deserializeData(reader: JsonReader,
              context: DataAdapter.DeserializeDataContext):
              com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend {
            var _appearsIn: List<Episode?>? = null
            var _friends: List<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend.Friend?>? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _appearsIn = Episode_ResponseAdapter.nullable().list().deserializeData(reader,
                    context)
                1 -> _friends = Friend.obj(true).nullable().list().nullable().deserializeData(reader,
                    context)
                else -> break
              }
            }

            return com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend(
              appearsIn = _appearsIn!!,
              friends = _friends
            )
          }

          public override fun serializeData(
            writer: JsonWriter,
            `value`: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend,
            context: DataAdapter.SerializeDataContext,
          ): Unit {
            writer.name("appearsIn")
            Episode_ResponseAdapter.nullable().list().serializeData(writer, value.appearsIn,
                context)

            writer.name("friends")
            Friend.obj(true).nullable().list().nullable().serializeData(writer, value.friends,
                context)
          }

          private object Friend :
              DataAdapter<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend.Friend>
              {
            public val RESPONSE_NAMES: List<String> = listOf("__typename")

            public override fun deserializeData(reader: JsonReader,
                context: DataAdapter.DeserializeDataContext):
                com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend.Friend {
              var __typename: String? = null

              while(true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> __typename = StringDataAdapter.deserializeData(reader, context)
                  else -> break
                }
              }

              reader.rewind()
              val _heroDetails = com.example.unique_type_name.fragment.HeroDetailsImpl_ResponseAdapter.HeroDetails.deserializeData(reader,
                  context)

              return com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend.Friend(
                __typename = __typename!!,
                heroDetails = _heroDetails
              )
            }

            public override fun serializeData(
              writer: JsonWriter,
              `value`: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery.OnHuman.Friend.Friend,
              context: DataAdapter.SerializeDataContext,
            ): Unit {
              writer.name("__typename")
              StringDataAdapter.serializeData(writer, value.__typename, context)

              com.example.unique_type_name.fragment.HeroDetailsImpl_ResponseAdapter.HeroDetails.serializeData(writer,
                  value.heroDetails, context)
            }
          }
        }
      }
    }
  }
}
