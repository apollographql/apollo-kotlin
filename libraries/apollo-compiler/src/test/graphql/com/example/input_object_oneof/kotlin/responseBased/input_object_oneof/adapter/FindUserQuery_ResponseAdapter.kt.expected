//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_oneof.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.input_object_oneof.FindUserQuery
import kotlin.String
import kotlin.collections.List

public object FindUserQuery_ResponseAdapter {
  public object Data : CompositeAdapter<FindUserQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("findUser")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        FindUserQuery.Data {
      var _findUser: FindUserQuery.Data.FindUser? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _findUser = FindUser.obj().nullable().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return FindUserQuery.Data(
        findUser = _findUser
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: FindUserQuery.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("findUser")
      FindUser.obj().nullable().toJson(writer, value.findUser, adapterContext)
    }

    private object FindUser : CompositeAdapter<FindUserQuery.Data.FindUser> {
      public val RESPONSE_NAMES: List<String> = listOf("id")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          FindUserQuery.Data.FindUser {
        var _id: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _id = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return FindUserQuery.Data.FindUser(
          id = _id!!
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: FindUserQuery.Data.FindUser,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("id")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.id)
      }
    }
  }
}
