//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_oneof.type.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.ApolloOptionalAdapter;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.NullableAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.Optional;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.example.input_object_oneof.type.FindUserByFriendInput;
import com.example.input_object_oneof.type.FindUserBySocialNetworkInput;
import com.example.input_object_oneof.type.FindUserInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum FindUserInput_InputAdapter implements Adapter<FindUserInput> {
  INSTANCE;

  @Override
  public FindUserInput fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters) throws
      IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      FindUserInput value) throws IOException {
    if (value.email instanceof Optional.Present) {
      writer.name("email");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, customScalarAdapters, value.email);
    }
    if (value.name instanceof Optional.Present) {
      writer.name("name");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, customScalarAdapters, value.name);
    }
    if (value.identity instanceof Optional.Present) {
      writer.name("identity");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ObjectAdapter<FindUserBySocialNetworkInput>(FindUserBySocialNetworkInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.identity);
    }
    if (value.friends instanceof Optional.Present) {
      writer.name("friends");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ObjectAdapter<FindUserByFriendInput>(FindUserByFriendInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.friends);
    }
  }
}
