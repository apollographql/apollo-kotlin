//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_multiple_fieldsets.fragment

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.NullableStringApolloAdapter
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.possibleTypes
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object IFragmentImpl_ResponseAdapter {
  public object IFragment :
      ApolloAdapter<com.example.fragment_with_multiple_fieldsets.fragment.IFragment> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, context: ApolloAdapter.DataDeserializeContext):
        com.example.fragment_with_multiple_fieldsets.fragment.IFragment {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringApolloAdapter.fromJson(reader, context)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onA: com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA? = null
      if (possibleTypes("A").evaluate(context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind()
        _onA = com.example.fragment_with_multiple_fieldsets.fragment.IFragmentImpl_ResponseAdapter.IFragment.OnA.fromJson(reader,
            context)
      }

      return com.example.fragment_with_multiple_fieldsets.fragment.IFragment(
        __typename = __typename,
        onA = _onA
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      `value`: com.example.fragment_with_multiple_fieldsets.fragment.IFragment,
      context: ApolloAdapter.DataSerializeContext,
    ): Unit {
      writer.name("__typename")
      StringApolloAdapter.toJson(writer, value.__typename, context)

      if (value.onA != null) {
        com.example.fragment_with_multiple_fieldsets.fragment.IFragmentImpl_ResponseAdapter.IFragment.OnA.toJson(writer,
            value.onA, context)
      }
    }

    private object OnA :
        ApolloAdapter<com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA> {
      public val RESPONSE_NAMES: List<String> = listOf("fieldA")

      public override fun fromJson(reader: JsonReader,
          context: ApolloAdapter.DataDeserializeContext):
          com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA {
        var _fieldA: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _fieldA = NullableStringApolloAdapter.fromJson(reader, context)
            else -> break
          }
        }

        return com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA(
          fieldA = _fieldA
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        `value`: com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        writer.name("fieldA")
        NullableStringApolloAdapter.toJson(writer, value.fieldA, context)
      }
    }
  }
}
