//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_multiple_fieldsets.fragment

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.NullableStringApolloAdapter
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object IFragmentImpl_ResponseAdapter {
  public object Data : ApolloAdapter<IFragmentImpl.Data> {
    public override fun fromJson(reader: JsonReader, context: ApolloAdapter.DataDeserializeContext):
        IFragmentImpl.Data {
      val __typename = reader.readTypename()
      return when(__typename) {
        "A",
        -> AData.fromJson(reader, context, __typename)
        else
        -> OtherData.fromJson(reader, context, __typename)
      }
    }

    public override fun toJson(
      writer: JsonWriter,
      `value`: IFragmentImpl.Data,
      context: ApolloAdapter.DataSerializeContext,
    ): Unit {
      when(value) {
        is IFragmentImpl.AData -> AData.toJson(writer, value, context)
        is IFragmentImpl.OtherData -> OtherData.toJson(writer, value, context)
      }
    }
  }

  public object AData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "fieldA")

    public fun fromJson(
      reader: JsonReader,
      context: ApolloAdapter.DataDeserializeContext,
      typename: String,
    ): IFragmentImpl.AData {
      var __typename: String? = typename
      var _fieldA: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringApolloAdapter.fromJson(reader, context)
          1 -> _fieldA = NullableStringApolloAdapter.fromJson(reader, context)
          else -> break
        }
      }

      return IFragmentImpl.AData(
        __typename = __typename!!,
        fieldA = _fieldA
      )
    }

    public fun toJson(
      writer: JsonWriter,
      `value`: IFragmentImpl.AData,
      context: ApolloAdapter.DataSerializeContext,
    ): Unit {
      writer.name("__typename")
      StringApolloAdapter.toJson(writer, value.__typename, context)

      writer.name("fieldA")
      NullableStringApolloAdapter.toJson(writer, value.fieldA, context)
    }
  }

  public object OtherData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public fun fromJson(
      reader: JsonReader,
      context: ApolloAdapter.DataDeserializeContext,
      typename: String,
    ): IFragmentImpl.OtherData {
      var __typename: String? = typename

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringApolloAdapter.fromJson(reader, context)
          else -> break
        }
      }

      return IFragmentImpl.OtherData(
        __typename = __typename!!
      )
    }

    public fun toJson(
      writer: JsonWriter,
      `value`: IFragmentImpl.OtherData,
      context: ApolloAdapter.DataSerializeContext,
    ): Unit {
      writer.name("__typename")
      StringApolloAdapter.toJson(writer, value.__typename, context)
    }
  }
}
