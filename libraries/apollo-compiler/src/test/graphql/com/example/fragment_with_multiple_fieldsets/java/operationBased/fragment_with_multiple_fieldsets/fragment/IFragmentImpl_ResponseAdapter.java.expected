//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_multiple_fieldsets.fragment;

import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class IFragmentImpl_ResponseAdapter {
  public enum IFragment implements DataAdapter<com.example.fragment_with_multiple_fieldsets.fragment.IFragment> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public com.example.fragment_with_multiple_fieldsets.fragment.IFragment deserializeData(
        JsonReader reader, DataAdapter.DeserializeDataContext context) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = DataAdapters.StringDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA _onA = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("A")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onA = com.example.fragment_with_multiple_fieldsets.fragment.IFragmentImpl_ResponseAdapter.OnA.INSTANCE.deserializeData(reader, context);
      }

      return new com.example.fragment_with_multiple_fieldsets.fragment.IFragment(
        __typename,
        _onA
      );
    }

    @Override
    public void serializeData(JsonWriter writer,
        com.example.fragment_with_multiple_fieldsets.fragment.IFragment value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("__typename");
      DataAdapters.StringDataAdapter.serializeData(writer, value.__typename, context);

      if (value.onA != null) {
        com.example.fragment_with_multiple_fieldsets.fragment.IFragmentImpl_ResponseAdapter.OnA.INSTANCE.serializeData(writer, value.onA, context);
      }
    }
  }

  public enum OnA implements DataAdapter<com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("fieldA");

    @Override
    public com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA deserializeData(
        JsonReader reader, DataAdapter.DeserializeDataContext context) throws IOException {
      String _fieldA = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _fieldA = DataAdapters.NullableStringDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      return new com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA(
        _fieldA
      );
    }

    @Override
    public void serializeData(JsonWriter writer,
        com.example.fragment_with_multiple_fieldsets.fragment.IFragment.OnA value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("fieldA");
      DataAdapters.NullableStringDataAdapter.serializeData(writer, value.fieldA, context);
    }
  }
}
