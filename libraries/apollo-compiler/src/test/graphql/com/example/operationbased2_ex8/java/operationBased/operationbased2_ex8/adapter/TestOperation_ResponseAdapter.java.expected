//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.operationbased2_ex8.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CompositeAdapterContext;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableCompositeAdapter;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.operationbased2_ex8.TestOperation;
import com.example.operationbased2_ex8.fragment.AnimalFragment;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestOperation_ResponseAdapter {
  public enum Data implements CompositeAdapter<TestOperation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("animal");

    @Override
    public TestOperation.Data fromJson(JsonReader reader, CompositeAdapterContext adapterContext)
        throws IOException {
      TestOperation.Animal _animal = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _animal = new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestOperation.Animal>(Animal.INSTANCE, true)).fromJson(reader, adapterContext); break;
          default: break loop;
        }
      }

      return new TestOperation.Data(
        _animal
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestOperation.Data value,
        CompositeAdapterContext adapterContext) throws IOException {
      writer.name("animal");
      new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestOperation.Animal>(Animal.INSTANCE, true)).toJson(writer, value.animal, adapterContext);
    }
  }

  public enum Animal implements CompositeAdapter<TestOperation.Animal> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public TestOperation.Animal fromJson(JsonReader reader, CompositeAdapterContext adapterContext)
        throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      reader.rewind();
      AnimalFragment _animalFragment = com.example.operationbased2_ex8.fragment.AnimalFragmentImpl_ResponseAdapter.AnimalFragment.INSTANCE.fromJson(reader, adapterContext);

      Assertions.checkFieldNotMissing(__typename, "__typename");

      return new TestOperation.Animal(
        __typename,
        _animalFragment
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestOperation.Animal value,
        CompositeAdapterContext adapterContext) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      com.example.operationbased2_ex8.fragment.AnimalFragmentImpl_ResponseAdapter.AnimalFragment.INSTANCE.toJson(writer, value.animalFragment, adapterContext);
    }
  }
}
