//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.starships.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.DoubleAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.missingField
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.starships.TestQuery
import kotlin.Double
import kotlin.String
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : CompositeAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("starship")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        TestQuery.Data {
      var _starship: TestQuery.Data.Starship? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _starship = Starship.obj().nullable().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return TestQuery.Data(
        starship = _starship
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("starship")
      Starship.obj().nullable().toJson(writer, value.starship, adapterContext)
    }

    private object Starship : CompositeAdapter<TestQuery.Data.Starship> {
      public val RESPONSE_NAMES: List<String> = listOf("id", "name", "coordinates")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          TestQuery.Data.Starship {
        var _id: String? = null
        var _name: String? = null
        var _coordinates: List<List<Double>>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _id = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            2 -> _coordinates = DoubleAdapter.list().list().nullable().fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return TestQuery.Data.Starship(
          id = _id ?: missingField(reader, "id"),
          name = _name ?: missingField(reader, "name"),
          coordinates = _coordinates
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: TestQuery.Data.Starship,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("id")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.id)

        writer.name("name")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

        writer.name("coordinates")
        DoubleAdapter.list().list().nullable().toJson(writer, CustomScalarAdapters.Empty,
            value.coordinates)
      }
    }
  }
}
