//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.starships.adapter

import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.DoubleAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.starships.TestQuery
import kotlin.Double
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : DataAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("starship")

    public override fun deserializeData(reader: JsonReader,
        context: DataAdapter.DeserializeDataContext): TestQuery.Data {
      var _starship: TestQuery.Data.Starship? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _starship = Starship.obj().nullable().deserializeData(reader, context)
          else -> break
        }
      }

      return TestQuery.Data(
        starship = _starship
      )
    }

    public override fun serializeData(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("starship")
      Starship.obj().nullable().serializeData(writer, value.starship, context)
    }

    private object Starship : DataAdapter<TestQuery.Data.Starship> {
      public val RESPONSE_NAMES: List<String> = listOf("id", "name", "coordinates")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext): TestQuery.Data.Starship {
        var _id: String? = null
        var _name: String? = null
        var _coordinates: List<List<Double>>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _id = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            2 -> _coordinates = DoubleAdapter.list().list().nullable().fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return TestQuery.Data.Starship(
          id = _id!!,
          name = _name!!,
          coordinates = _coordinates
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: TestQuery.Data.Starship,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("id")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.id)

        writer.name("name")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

        writer.name("coordinates")
        DoubleAdapter.list().list().nullable().toJson(writer, CustomScalarAdapters.Empty,
            value.coordinates)
      }
    }
  }
}
