//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_used_twice.fragment

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.AnyAdapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.missingField
import kotlin.Any
import kotlin.String
import kotlin.collections.List

public object HeroDetailsImpl_ResponseAdapter {
  public object Data : Adapter<HeroDetailsImpl.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "birthDate")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): HeroDetailsImpl.Data {
      var __typename: String? = null
      var _name: String? = null
      var _birthDate: Any? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _birthDate = AnyAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HeroDetailsImpl.Data(
        __typename = __typename ?: missingField(reader, "__typename"),
        name = _name ?: missingField(reader, "name"),
        birthDate = _birthDate ?: missingField(reader, "birthDate")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HeroDetailsImpl.Data,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("birthDate")
      AnyAdapter.toJson(writer, customScalarAdapters, value.birthDate)
    }
  }
}
