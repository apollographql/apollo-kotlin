//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_used_twice.fragment

import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import kotlin.Any
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

public object HumanDetailsImpl_ResponseAdapter {
  public object Data : CompositeAdapter<HumanDetailsImpl.Data> {
    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        HumanDetailsImpl.Data {
      val __typename = reader.readTypename()
      return when(__typename) {
        "Human",
        -> CharacterData.fromJson(reader, adapterContext, __typename)
        else
        -> OtherData.fromJson(reader, adapterContext, __typename)
      }
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: HumanDetailsImpl.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      when(value) {
        is HumanDetailsImpl.CharacterData -> CharacterData.toJson(writer, value, adapterContext)
        is HumanDetailsImpl.OtherData -> OtherData.toJson(writer, value, adapterContext)
      }
    }
  }

  public object CharacterData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "birthDate")

    public fun fromJson(
      reader: JsonReader,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
      typename: String,
    ): HumanDetailsImpl.CharacterData {
      var __typename: String? = typename
      var _name: String? = null
      var _birthDate: Any? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          2 -> _birthDate = AnyAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          else -> break
        }
      }

      return HumanDetailsImpl.CharacterData(
        __typename = __typename!!,
        name = _name!!,
        birthDate = _birthDate!!
      )
    }

    public fun toJson(
      writer: JsonWriter,
      `value`: HumanDetailsImpl.CharacterData,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

      writer.name("birthDate")
      AnyAdapter.toJson(writer, CustomScalarAdapters.Empty, value.birthDate)
    }
  }

  public object OtherData {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name")

    public fun fromJson(
      reader: JsonReader,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
      typename: String,
    ): HumanDetailsImpl.OtherData {
      var __typename: String? = typename
      var _name: String? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          else -> break
        }
      }

      return HumanDetailsImpl.OtherData(
        __typename = __typename!!,
        name = _name!!
      )
    }

    public fun toJson(
      writer: JsonWriter,
      `value`: HumanDetailsImpl.OtherData,
      @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)
    }
  }
}
