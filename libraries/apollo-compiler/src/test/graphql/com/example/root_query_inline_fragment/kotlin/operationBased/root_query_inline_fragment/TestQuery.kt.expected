//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_inline_fragment

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.root_query_inline_fragment.adapter.TestQuery_ResponseAdapter
import com.example.root_query_inline_fragment.selections.TestQuerySelections
import com.example.root_query_inline_fragment.type.Episode
import kotlin.Any
import kotlin.Boolean
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.collections.List
import com.example.root_query_inline_fragment.type.Query as CompiledQuery

public class TestQuery() : Query<TestQuery.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj(true)

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val __typename: String,
    /**
     * Synthetic field for inline fragment on Query
     */
    public val onQuery: OnQuery,
  ) : Query.Data {
    public data class OnQuery(
      public val __typename: String,
      public val hero: Hero?,
      public val droid: Droid?,
    ) {
      public data class Hero(
        public val __typename: String,
        /**
         * The name of the character
         */
        public val name: String,
        /**
         * The movies this character appears in
         */
        public val appearsIn: List<Episode?>,
        /**
         * Synthetic field for inline fragment on Human
         */
        public val onHuman: OnHuman?,
      ) {
        public fun appearsInFilterNotNull(): List<Episode> = appearsIn.filterNotNull()

        public data class OnHuman(
          /**
           * Height in the preferred unit, default is meters
           */
          public val height: Double?,
        )
      }

      public data class Droid(
        public val __typename: String,
        /**
         * Synthetic field for inline fragment on Droid
         */
        public val onDroid: OnDroid,
      ) {
        public data class OnDroid(
          /**
           * What others call this droid
           */
          public val name: String,
          /**
           * This droid's primary function
           */
          public val primaryFunction: String?,
        )
      }
    }
  }

  public companion object {
    public const val OPERATION_ID: String =
        "25584d760eab0f41189b9f2bbdbba3c0ec491aced65ef23924ecdc8f41ffe78c"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery {
     *   __typename
     *   ... on Query {
     *     __typename
     *     hero {
     *       __typename
     *       name
     *       appearsIn
     *       ... on Human {
     *         height
     *       }
     *     }
     *     droid(id: 1) {
     *       __typename
     *       ... on Droid {
     *         name
     *         primaryFunction
     *       }
     *     }
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery { __typename ... on Query { __typename hero { __typename name appearsIn ... on Human { height } } droid(id: 1) { __typename ... on Droid { name primaryFunction } } } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
