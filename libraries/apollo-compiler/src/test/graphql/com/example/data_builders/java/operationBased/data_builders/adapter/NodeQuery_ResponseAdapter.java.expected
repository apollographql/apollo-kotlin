//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.data_builders.adapter;

import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.ObjectDataAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.data_builders.NodeQuery;
import com.example.data_builders.fragment.DroidFragment;
import com.example.data_builders.fragment.HumanFragment;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class NodeQuery_ResponseAdapter {
  public enum Data implements DataAdapter<NodeQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("node");

    @Override
    public NodeQuery.Data deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      NodeQuery.Node _node = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _node = new ObjectDataAdapter<NodeQuery.Node>(Node.INSTANCE, true).deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_node, "node");

      return new NodeQuery.Data(
        _node
      );
    }

    @Override
    public void serializeData(JsonWriter writer, NodeQuery.Data value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("node");
      new ObjectDataAdapter<NodeQuery.Node>(Node.INSTANCE, true).serializeData(writer, value.node, context);
    }
  }

  public enum Node implements DataAdapter<NodeQuery.Node> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename", "id");

    @Override
    public NodeQuery.Node deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      String __typename = null;
      String _id = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = DataAdapters.StringDataAdapter.deserializeData(reader, context); break;
          case 1: _id = DataAdapters.StringDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      HumanFragment _humanFragment = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Human")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _humanFragment = com.example.data_builders.fragment.HumanFragmentImpl_ResponseAdapter.HumanFragment.INSTANCE.deserializeData(reader, context);
      }

      DroidFragment _droidFragment = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Droid")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _droidFragment = com.example.data_builders.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.INSTANCE.deserializeData(reader, context);
      }

      Assertions.checkFieldNotMissing(_id, "id");

      return new NodeQuery.Node(
        __typename,
        _id,
        _humanFragment,
        _droidFragment
      );
    }

    @Override
    public void serializeData(JsonWriter writer, NodeQuery.Node value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("__typename");
      DataAdapters.StringDataAdapter.serializeData(writer, value.__typename, context);

      writer.name("id");
      DataAdapters.StringDataAdapter.serializeData(writer, value.id, context);

      if (value.humanFragment != null) {
        com.example.data_builders.fragment.HumanFragmentImpl_ResponseAdapter.HumanFragment.INSTANCE.serializeData(writer, value.humanFragment, context);
      }

      if (value.droidFragment != null) {
        com.example.data_builders.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.INSTANCE.serializeData(writer, value.droidFragment, context);
      }
    }
  }
}
