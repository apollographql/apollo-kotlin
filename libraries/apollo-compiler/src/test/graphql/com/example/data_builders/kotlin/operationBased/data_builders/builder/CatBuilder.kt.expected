//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.data_builders.builder

import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.DataBuilder
import com.apollographql.apollo.api.DataBuilderDsl
import com.apollographql.apollo.api.DataBuilderFactory
import com.apollographql.apollo.api.DataBuilderScope
import com.apollographql.apollo.api.ExecutableDefinition
import com.apollographql.apollo.api.FakeResolver
import com.apollographql.apollo.api.buildData
import com.example.data_builders.type.Cat
import kotlin.String
import kotlin.Unit

@DataBuilderDsl
public class CatBuilder(
  customScalarAdapters: CustomScalarAdapters,
) : DataBuilder<CatMap>(customScalarAdapters) {
  init {
    __typename = "Cat"}

  public var id: String by __fields

  public var meow: String by __fields

  override fun build(): CatMap = CatMap(__fields)

  public companion object : DataBuilderFactory<CatBuilder> {
    override fun newBuilder(customScalarAdapters: CustomScalarAdapters): CatBuilder = CatBuilder(customScalarAdapters)
  }
}

public fun DataBuilderScope.buildCat(block: CatBuilder.() -> Unit): CatMap = CatBuilder(customScalarAdapters)
.apply {
  __typename = "Cat"
}.apply(block)
.build()

public fun <D : Cat.Data> ExecutableDefinition<D>.Data(customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, block: CatBuilder.() -> Unit): D = buildData(
  ADAPTER,
  customScalarAdapters,
  CatBuilder(customScalarAdapters).apply(block).build(),
)

public fun <D : Cat.Data> ExecutableDefinition<D>.Data(
  resolver: FakeResolver,
  customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty,
  block: CatBuilder.() -> Unit = {},
): D = buildData(
  ADAPTER,
  customScalarAdapters,
  CatBuilder(customScalarAdapters).apply(block).build(),
  ROOT_FIELD.selections,
  "Cat",
  resolver,
)
