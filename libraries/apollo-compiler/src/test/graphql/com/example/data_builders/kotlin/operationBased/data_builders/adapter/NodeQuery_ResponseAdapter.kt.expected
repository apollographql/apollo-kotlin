//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.data_builders.adapter

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.ScalarAdapters
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.data_builders.NodeQuery
import com.example.data_builders.fragment.DroidFragment
import com.example.data_builders.fragment.HumanFragment
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object NodeQuery_ResponseAdapter {
  public object Data : ApolloAdapter<NodeQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("node")

    public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
        NodeQuery.Data {
      var _node: NodeQuery.Data.Node? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _node = Node.obj(true).fromJson(reader, scalarAdapters)
          else -> break
        }
      }

      return NodeQuery.Data(
        node = _node!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      scalarAdapters: ScalarAdapters,
      `value`: NodeQuery.Data,
    ): Unit {
      writer.name("node")
      Node.obj(true).toJson(writer, scalarAdapters, value.node)
    }

    private object Node : ApolloAdapter<NodeQuery.Data.Node> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

      public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
          NodeQuery.Data.Node {
        var __typename: String? = null
        var _id: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringApolloAdapter.fromJson(reader, scalarAdapters)
            1 -> _id = StringApolloAdapter.fromJson(reader, scalarAdapters)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _humanFragment: HumanFragment? = null
        if (possibleTypes("Human").evaluate(scalarAdapters.adapterContext.variables(), __typename, scalarAdapters.adapterContext, null)) {
          reader.rewind()
          _humanFragment = com.example.data_builders.fragment.HumanFragmentImpl_ResponseAdapter.HumanFragment.fromJson(reader,
              scalarAdapters)
        }

        var _droidFragment: DroidFragment? = null
        if (possibleTypes("Droid").evaluate(scalarAdapters.adapterContext.variables(), __typename, scalarAdapters.adapterContext, null)) {
          reader.rewind()
          _droidFragment = com.example.data_builders.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.fromJson(reader,
              scalarAdapters)
        }

        return NodeQuery.Data.Node(
          __typename = __typename,
          id = _id!!,
          humanFragment = _humanFragment,
          droidFragment = _droidFragment
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        scalarAdapters: ScalarAdapters,
        `value`: NodeQuery.Data.Node,
      ): Unit {
        writer.name("__typename")
        StringApolloAdapter.toJson(writer, scalarAdapters, value.__typename)

        writer.name("id")
        StringApolloAdapter.toJson(writer, scalarAdapters, value.id)

        if (value.humanFragment != null) {
          com.example.data_builders.fragment.HumanFragmentImpl_ResponseAdapter.HumanFragment.toJson(writer,
              scalarAdapters, value.humanFragment)
        }

        if (value.droidFragment != null) {
          com.example.data_builders.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.toJson(writer,
              scalarAdapters, value.droidFragment)
        }
      }
    }
  }
}
