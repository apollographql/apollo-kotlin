//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.data_builders.adapter

import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.StringDataAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.data_builders.NodeQuery
import com.example.data_builders.fragment.DroidFragment
import com.example.data_builders.fragment.HumanFragment
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object NodeQuery_ResponseAdapter {
  public object Data : DataAdapter<NodeQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("node")

    public override fun deserializeData(reader: JsonReader,
        context: DataAdapter.DeserializeDataContext): NodeQuery.Data {
      var _node: NodeQuery.Data.Node? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _node = Node.obj(true).deserializeData(reader, context)
          else -> break
        }
      }

      return NodeQuery.Data(
        node = _node!!
      )
    }

    public override fun serializeData(
      writer: JsonWriter,
      `value`: NodeQuery.Data,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("node")
      Node.obj(true).serializeData(writer, value.node, context)
    }

    private object Node : DataAdapter<NodeQuery.Data.Node> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext): NodeQuery.Data.Node {
        var __typename: String? = null
        var _id: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringDataAdapter.deserializeData(reader, context)
            1 -> _id = StringDataAdapter.deserializeData(reader, context)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _humanFragment: HumanFragment? = null
        if (possibleTypes("Human").evaluate(context.falseBooleanVariables, __typename, context, null)) {
          reader.rewind()
          _humanFragment = com.example.data_builders.fragment.HumanFragmentImpl_ResponseAdapter.HumanFragment.deserializeData(reader,
              context)
        }

        var _droidFragment: DroidFragment? = null
        if (possibleTypes("Droid").evaluate(context.falseBooleanVariables, __typename, context, null)) {
          reader.rewind()
          _droidFragment = com.example.data_builders.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.deserializeData(reader,
              context)
        }

        return NodeQuery.Data.Node(
          __typename = __typename,
          id = _id!!,
          humanFragment = _humanFragment,
          droidFragment = _droidFragment
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: NodeQuery.Data.Node,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("__typename")
        StringDataAdapter.serializeData(writer, value.__typename, context)

        writer.name("id")
        StringDataAdapter.serializeData(writer, value.id, context)

        if (value.humanFragment != null) {
          com.example.data_builders.fragment.HumanFragmentImpl_ResponseAdapter.HumanFragment.serializeData(writer,
              value.humanFragment, context)
        }

        if (value.droidFragment != null) {
          com.example.data_builders.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.serializeData(writer,
              value.droidFragment, context)
        }
      }
    }
  }
}
