//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.data_builders.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.evaluate
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.json.readTypename
import com.apollographql.apollo.api.obj
import com.apollographql.apollo.api.possibleTypes
import com.example.data_builders.NodeQuery
import com.example.data_builders.fragment.DroidFragment
import com.example.data_builders.fragment.HumanFragment
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object NodeQuery_ResponseAdapter {
  public object Data : Adapter<NodeQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("node")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        NodeQuery.Data {
      var _node: NodeQuery.Node? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _node = Node.obj(true).fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return NodeQuery.Data(
        node = _node!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: NodeQuery.Data,
    ): Unit {
      writer.name("node")
      Node.obj(true).toJson(writer, customScalarAdapters, value.node)
    }
  }

  public object Node : Adapter<NodeQuery.Node> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        NodeQuery.Node {
      var __typename: String? = null
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _fragments = com.example.data_builders.adapter.NodeQuery_ResponseAdapter.Node.Fragments.fromJson(reader,
          customScalarAdapters)

      return NodeQuery.Node(
        __typename = __typename!!,
        id = _id!!,
        fragments = _fragments
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: NodeQuery.Node,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      com.example.data_builders.adapter.NodeQuery_ResponseAdapter.Node.Fragments.toJson(writer,
          customScalarAdapters, value.fragments)
    }

    private object Fragments : Adapter<NodeQuery.Node.Fragments> {
      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          NodeQuery.Node.Fragments {


        reader.rewind()
        val __typename = reader.readTypename()

        var _humanFragment: HumanFragment? = null
        if (possibleTypes("Human").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
          reader.rewind()
          _humanFragment = com.example.data_builders.fragment.HumanFragmentImpl_ResponseAdapter.HumanFragment.fromJson(reader,
              customScalarAdapters)
        }

        var _droidFragment: DroidFragment? = null
        if (possibleTypes("Droid").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
          reader.rewind()
          _droidFragment = com.example.data_builders.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.fromJson(reader,
              customScalarAdapters)
        }

        return NodeQuery.Node.Fragments(
          humanFragment = _humanFragment,
          droidFragment = _droidFragment
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: NodeQuery.Node.Fragments,
      ): Unit {
        if (value.humanFragment != null) {
          com.example.data_builders.fragment.HumanFragmentImpl_ResponseAdapter.HumanFragment.toJson(writer,
              customScalarAdapters, value.humanFragment)
        }

        if (value.droidFragment != null) {
          com.example.data_builders.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.toJson(writer,
              customScalarAdapters, value.droidFragment)
        }
      }
    }
  }
}
