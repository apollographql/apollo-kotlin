//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.data_builders

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.ExecutableDefinition
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.data_builders.adapter.NodeQuery_ResponseAdapter
import com.example.data_builders.fragment.DroidFragment
import com.example.data_builders.fragment.HumanFragment
import com.example.data_builders.selections.NodeQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import com.example.data_builders.type.Query as CompiledQuery

public class NodeQuery() : Query<NodeQuery.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = ADAPTER

  override fun rootField(): CompiledField = ROOT_FIELD

  @ApolloAdaptableWith(NodeQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val node: Node,
  ) : Query.Data {
    public data class Node(
      public val __typename: String,
      public val id: String,
      /**
       * Synthetic field for 'HumanFragment'
       */
      public val humanFragment: HumanFragment?,
      /**
       * Synthetic field for 'DroidFragment'
       */
      public val droidFragment: DroidFragment?,
    )
  }

  public companion object : ExecutableDefinition<Data> {
    override val ADAPTER: Adapter<Data> = NodeQuery_ResponseAdapter.Data.obj()

    override val ROOT_FIELD: CompiledField = CompiledField.Builder(
          name = "data",
          type = CompiledQuery.type
        )
        .selections(selections = NodeQuerySelections.__root)
        .build()

    public const val OPERATION_ID: String =
        "c91df108c7e22d226afdf25226288d452aad34224a2d09fc3b98e495f4903c4c"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query NodeQuery {
     *   node {
     *     __typename
     *     id
     *     ...HumanFragment
     *     ...DroidFragment
     *   }
     * }
     *
     * fragment HumanFragment on Human {
     *   homePlanet
     * }
     *
     * fragment DroidFragment on Droid {
     *   primaryFunction
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query NodeQuery { node { __typename id ...HumanFragment ...DroidFragment } }  fragment HumanFragment on Human { homePlanet }  fragment DroidFragment on Droid { primaryFunction }"

    public const val OPERATION_NAME: String = "NodeQuery"
  }
}
