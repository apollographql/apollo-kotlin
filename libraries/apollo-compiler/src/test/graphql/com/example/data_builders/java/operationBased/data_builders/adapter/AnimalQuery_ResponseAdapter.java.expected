//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.data_builders.adapter;

import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.ObjectDataAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.data_builders.AnimalQuery;
import com.example.data_builders.fragment.CatFragment;
import com.example.data_builders.fragment.DogFragment;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class AnimalQuery_ResponseAdapter {
  public enum Data implements DataAdapter<AnimalQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("animal");

    @Override
    public AnimalQuery.Data deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      AnimalQuery.Animal _animal = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _animal = new ObjectDataAdapter<AnimalQuery.Animal>(Animal.INSTANCE, true).deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_animal, "animal");

      return new AnimalQuery.Data(
        _animal
      );
    }

    @Override
    public void serializeData(JsonWriter writer, AnimalQuery.Data value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("animal");
      new ObjectDataAdapter<AnimalQuery.Animal>(Animal.INSTANCE, true).serializeData(writer, value.animal, context);
    }
  }

  public enum Animal implements DataAdapter<AnimalQuery.Animal> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public AnimalQuery.Animal deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = DataAdapters.StringDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      CatFragment _catFragment = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Cat")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _catFragment = com.example.data_builders.fragment.CatFragmentImpl_ResponseAdapter.CatFragment.INSTANCE.deserializeData(reader, context);
      }

      DogFragment _dogFragment = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Dog")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _dogFragment = com.example.data_builders.fragment.DogFragmentImpl_ResponseAdapter.DogFragment.INSTANCE.deserializeData(reader, context);
      }

      return new AnimalQuery.Animal(
        __typename,
        _catFragment,
        _dogFragment
      );
    }

    @Override
    public void serializeData(JsonWriter writer, AnimalQuery.Animal value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("__typename");
      DataAdapters.StringDataAdapter.serializeData(writer, value.__typename, context);

      if (value.catFragment != null) {
        com.example.data_builders.fragment.CatFragmentImpl_ResponseAdapter.CatFragment.INSTANCE.serializeData(writer, value.catFragment, context);
      }

      if (value.dogFragment != null) {
        com.example.data_builders.fragment.DogFragmentImpl_ResponseAdapter.DogFragment.INSTANCE.serializeData(writer, value.dogFragment, context);
      }
    }
  }
}
