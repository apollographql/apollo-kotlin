//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_inside_inline_fragment.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.missingField
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_inside_inline_fragment.GetHero
import kotlin.String
import kotlin.collections.List

public object GetHero_ResponseAdapter {
  public object Data : CompositeAdapter<GetHero.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        GetHero.Data {
      var _hero: GetHero.Data.Hero? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj(true).nullable().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return GetHero.Data(
        hero = _hero
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: GetHero.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("hero")
      Hero.obj(true).nullable().toJson(writer, value.hero, adapterContext)
    }

    private object Hero : CompositeAdapter<GetHero.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          GetHero.Data.Hero {
        var __typename: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        reader.rewind()
        val _onCharacter = com.example.named_fragment_inside_inline_fragment.adapter.GetHero_ResponseAdapter.Data.Hero.OnCharacter.fromJson(reader,
            adapterContext)

        return GetHero.Data.Hero(
          __typename = __typename ?: missingField(reader, "__typename"),
          onCharacter = _onCharacter
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: GetHero.Data.Hero,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        com.example.named_fragment_inside_inline_fragment.adapter.GetHero_ResponseAdapter.Data.Hero.OnCharacter.toJson(writer,
            value.onCharacter, adapterContext)
      }

      private object OnCharacter : CompositeAdapter<GetHero.Data.Hero.OnCharacter> {
        public val RESPONSE_NAMES: List<String> = listOf("__typename")

        override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
            GetHero.Data.Hero.OnCharacter {
          var __typename: String? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
              else -> break
            }
          }

          reader.rewind()
          val _characterName = com.example.named_fragment_inside_inline_fragment.fragment.CharacterNameImpl_ResponseAdapter.CharacterName.fromJson(reader,
              adapterContext)

          reader.rewind()
          val _characterAppearsIn = com.example.named_fragment_inside_inline_fragment.fragment.CharacterAppearsInImpl_ResponseAdapter.CharacterAppearsIn.fromJson(reader,
              adapterContext)

          return GetHero.Data.Hero.OnCharacter(
            __typename = __typename ?: missingField(reader, "__typename"),
            characterName = _characterName,
            characterAppearsIn = _characterAppearsIn
          )
        }

        override fun toJson(
          writer: JsonWriter,
          `value`: GetHero.Data.Hero.OnCharacter,
          adapterContext: CompositeAdapterContext,
        ) {
          writer.name("__typename")
          StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

          com.example.named_fragment_inside_inline_fragment.fragment.CharacterNameImpl_ResponseAdapter.CharacterName.toJson(writer,
              value.characterName, adapterContext)

          com.example.named_fragment_inside_inline_fragment.fragment.CharacterAppearsInImpl_ResponseAdapter.CharacterAppearsIn.toJson(writer,
              value.characterAppearsIn, adapterContext)
        }
      }
    }
  }
}
