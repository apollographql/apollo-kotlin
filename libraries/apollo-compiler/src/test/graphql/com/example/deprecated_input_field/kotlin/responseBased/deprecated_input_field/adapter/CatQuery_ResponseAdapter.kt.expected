//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.deprecated_input_field.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.deprecated_input_field.CatQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object CatQuery_ResponseAdapter {
  public object Data : Adapter<CatQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("search")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CatQuery.Data {
      var _search: CatQuery.Data.Search? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _search = Search.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return CatQuery.Data(
        search = _search
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CatQuery.Data,
    ): Unit {
      writer.name("search")
      Search.obj().nullable().toJson(writer, customScalarAdapters, value.search)
    }

    private object Search : Adapter<CatQuery.Data.Search> {
      public val RESPONSE_NAMES: List<String> = listOf("mustaches")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          CatQuery.Data.Search {
        var _mustaches: Int? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _mustaches = IntAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return CatQuery.Data.Search(
          mustaches = _mustaches!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: CatQuery.Data.Search,
      ): Unit {
        writer.name("mustaches")
        IntAdapter.toJson(writer, customScalarAdapters, value.mustaches)
      }
    }
  }
}
