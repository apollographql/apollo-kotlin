//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.hero_name_query_long_name.adapter

import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.VariablesAdapter
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.present
import com.example.hero_name_query_long_name.TestQueryWithAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryLongName
import com.example.hero_name_query_long_name.type.adapter.Episode_ResponseAdapter
import kotlin.Unit

public object
    TestQueryWithAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryLongName_VariablesAdapter
    :
    VariablesAdapter<TestQueryWithAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryLongName>
    {
  public override fun serializeVariables(
    writer: JsonWriter,
    `value`: TestQueryWithAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryLongName,
    context: VariablesAdapter.SerializeVariablesContext,
  ): Unit {
    val serializeDataContext = DataAdapter.SerializeDataContext(context.customScalarAdapters)
    if
        (value.episodeAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryLongName
        is Optional.Present) {
      writer.name("episodeAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryLongName")
      Episode_ResponseAdapter.nullable().present().serializeData(writer,
          value.episodeAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryAVeryLongName,
          serializeDataContext)
    }
  }
}
