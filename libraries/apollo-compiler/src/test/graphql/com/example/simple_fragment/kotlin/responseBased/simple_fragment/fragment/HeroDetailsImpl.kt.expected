//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.simple_fragment.fragment

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.BuilderFactory
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.DefaultFakeResolver
import com.apollographql.apollo.api.FakeResolver
import com.apollographql.apollo.api.Fragment
import com.apollographql.apollo.api.ObjectBuilder
import com.apollographql.apollo.api.buildData
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.simple_fragment.fragment.selections.HeroDetailsSelections
import com.example.simple_fragment.schema.__Schema
import com.example.simple_fragment.type.Character
import com.example.simple_fragment.type.CharacterMap
import com.example.simple_fragment.type.__CustomScalarAdapters
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit

/**
 * Fragment with Java / Kotlin docs generation
 * with multi lines support
 */
internal class HeroDetailsImpl() : Fragment<HeroDetailsImpl.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This fragment doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = HeroDetailsImpl_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = Character.type
  )
  .selections(selections = HeroDetailsSelections.__root)
  .build()

  public sealed interface Data : HeroDetails, Fragment.Data {
    override val __typename: String

    public companion object {
      @Suppress("USELESS_CAST")
      public fun Data.humanDetails(): HumanDetails? = this as? HumanDetails

      @Suppress("USELESS_CAST")
      public fun Data.asHuman(): HumanData? = this as? HumanData
    }
  }

  public data class HumanData(
    override val __typename: String,
    /**
     * What this human calls themselves
     */
    override val name: String,
  ) : Data,
      HumanDetails,
      HumanHeroDetails

  public data class OtherData(
    override val __typename: String,
  ) : Data,
      HeroDetails

  public companion object {
    public fun <M : CharacterMap, Builder : ObjectBuilder<M>> Data(
      factory: BuilderFactory<Builder>,
      resolver: FakeResolver = DefaultFakeResolver(__Schema.all),
      block: Builder.() -> Unit = {},
    ): Data = buildData(
      factory,
      block,
      HeroDetailsImpl_ResponseAdapter.Data,
      HeroDetailsSelections.__root,
      "Character",
      resolver,
      __CustomScalarAdapters,
    )
  }
}
