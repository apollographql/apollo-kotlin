//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.deprecation.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.ScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.deprecation.TestQuery
import kotlin.Boolean
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : Adapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
        TestQuery.Data {
      var _hero: TestQuery.Data.Hero? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj().nullable().fromJson(reader, scalarAdapters)
          else -> break
        }
      }

      return TestQuery.Data(
        hero = _hero
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      scalarAdapters: ScalarAdapters,
      `value`: TestQuery.Data,
    ): Unit {
      writer.name("hero")
      Hero.obj().nullable().toJson(writer, scalarAdapters, value.hero)
    }

    private object Hero : Adapter<TestQuery.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("name", "deprecated", "deprecatedBool")

      public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
          TestQuery.Data.Hero {
        var _name: String? = null
        var _deprecated: String? = null
        var _deprecatedBool: Boolean? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = StringAdapter.fromJson(reader, scalarAdapters)
            1 -> _deprecated = StringAdapter.fromJson(reader, scalarAdapters)
            2 -> _deprecatedBool = BooleanAdapter.fromJson(reader, scalarAdapters)
            else -> break
          }
        }

        return TestQuery.Data.Hero(
          name = _name!!,
          deprecated = _deprecated!!,
          deprecatedBool = _deprecatedBool!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        scalarAdapters: ScalarAdapters,
        `value`: TestQuery.Data.Hero,
      ): Unit {
        writer.name("name")
        StringAdapter.toJson(writer, scalarAdapters, value.name)

        writer.name("deprecated")
        StringAdapter.toJson(writer, scalarAdapters, value.deprecated)

        writer.name("deprecatedBool")
        BooleanAdapter.toJson(writer, scalarAdapters, value.deprecatedBool)
      }
    }
  }
}
