//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.deprecation.adapter;

import com.apollographql.apollo3.api.ApolloAdapter;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.ScalarAdapters;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.deprecation.TestQuery;
import com.example.deprecation.type.adapter.Episode_ResponseAdapter;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum TestQuery_VariablesAdapter implements ApolloAdapter<TestQuery> {
  INSTANCE;

  @Override
  public TestQuery fromJson(JsonReader reader, ScalarAdapters scalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, ScalarAdapters scalarAdapters, TestQuery value) throws
      IOException {
    if (value.episode instanceof Optional.Present) {
      writer.name("episode");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(Episode_ResponseAdapter.INSTANCE)).toJson(writer, scalarAdapters, value.episode);
    }
  }
}
