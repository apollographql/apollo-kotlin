//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_variable_and_argument.adapter;

import com.apollographql.apollo3.api.ApolloOptionalDataAdapter;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.NullableDataAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.VariablesAdapter;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.input_object_variable_and_argument.TestQuery;
import com.example.input_object_variable_and_argument.type.adapter.Episode_ResponseAdapter;
import java.io.IOException;
import java.lang.Override;

public enum TestQuery_VariablesAdapter implements VariablesAdapter<TestQuery> {
  INSTANCE;

  @Override
  public void serializeVariables(JsonWriter writer, TestQuery value,
      VariablesAdapter.SerializeVariablesContext context) throws IOException {
    DataAdapter.SerializeDataContext serializeDataContext = new DataAdapter.SerializeDataContext(context.scalarAdapters);
    if (value.episode instanceof Optional.Present) {
      writer.name("episode");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(Episode_ResponseAdapter.INSTANCE)).serializeData(writer, value.episode, serializeDataContext);
    }
    writer.name("stars");
    DataAdapters.IntDataAdapter.serializeData(writer, value.stars, serializeDataContext);
    writer.name("greenValue");
    DataAdapters.DoubleDataAdapter.serializeData(writer, value.greenValue, serializeDataContext);
  }
}
