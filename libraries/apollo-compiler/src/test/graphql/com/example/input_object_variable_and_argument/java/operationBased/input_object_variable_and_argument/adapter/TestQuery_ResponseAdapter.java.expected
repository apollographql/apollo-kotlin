//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_variable_and_argument.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloAdapter;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.input_object_variable_and_argument.TestQuery;
import java.io.IOException;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements ApolloAdapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("heroWithReview");

    @Override
    public TestQuery.Data fromJson(JsonReader reader, ApolloAdapter.DataDeserializeContext context)
        throws IOException {
      TestQuery.HeroWithReview _heroWithReview = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _heroWithReview = new NullableAdapter<>(new ObjectAdapter<TestQuery.HeroWithReview>(HeroWithReview.INSTANCE, false)).fromJson(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _heroWithReview
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.Data value,
        ApolloAdapter.DataSerializeContext context) throws IOException {
      writer.name("heroWithReview");
      new NullableAdapter<>(new ObjectAdapter<TestQuery.HeroWithReview>(HeroWithReview.INSTANCE, false)).toJson(writer, value.heroWithReview, context);
    }
  }

  public enum HeroWithReview implements ApolloAdapter<TestQuery.HeroWithReview> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("name", "height");

    @Override
    public TestQuery.HeroWithReview fromJson(JsonReader reader,
        ApolloAdapter.DataDeserializeContext context) throws IOException {
      String _name = null;
      Double _height = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _name = Adapters.StringApolloAdapter.fromJson(reader, context); break;
          case 1: _height = Adapters.NullableDoubleApolloAdapter.fromJson(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_name, "name");

      return new TestQuery.HeroWithReview(
        _name,
        _height
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.HeroWithReview value,
        ApolloAdapter.DataSerializeContext context) throws IOException {
      writer.name("name");
      Adapters.StringApolloAdapter.toJson(writer, value.name, context);

      writer.name("height");
      Adapters.NullableDoubleApolloAdapter.toJson(writer, value.height, context);
    }
  }
}
