//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_variable_and_argument.adapter

import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.NullableDoubleDataAdapter
import com.apollographql.apollo3.api.StringDataAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.input_object_variable_and_argument.TestQuery
import kotlin.Double
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : DataAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("heroWithReview")

    public override fun deserializeData(reader: JsonReader,
        context: DataAdapter.DeserializeDataContext): TestQuery.Data {
      var _heroWithReview: TestQuery.Data.HeroWithReview? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _heroWithReview = HeroWithReview.obj().nullable().deserializeData(reader, context)
          else -> break
        }
      }

      return TestQuery.Data(
        heroWithReview = _heroWithReview
      )
    }

    public override fun serializeData(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("heroWithReview")
      HeroWithReview.obj().nullable().serializeData(writer, value.heroWithReview, context)
    }

    private object HeroWithReview : DataAdapter<TestQuery.Data.HeroWithReview> {
      public val RESPONSE_NAMES: List<String> = listOf("name", "height")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext): TestQuery.Data.HeroWithReview {
        var _name: String? = null
        var _height: Double? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = StringDataAdapter.deserializeData(reader, context)
            1 -> _height = NullableDoubleDataAdapter.deserializeData(reader, context)
            else -> break
          }
        }

        return TestQuery.Data.HeroWithReview(
          name = _name!!,
          height = _height
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: TestQuery.Data.HeroWithReview,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("name")
        StringDataAdapter.serializeData(writer, value.name, context)

        writer.name("height")
        NullableDoubleDataAdapter.serializeData(writer, value.height, context)
      }
    }
  }
}
