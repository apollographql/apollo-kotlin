//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_named_fragments.fragment

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.NullableStringApolloAdapter
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object StarshipFragmentImpl_ResponseAdapter {
  public object Data : ApolloAdapter<StarshipFragmentImpl.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "name", "pilotConnection")

    public override fun fromJson(reader: JsonReader, context: ApolloAdapter.DataDeserializeContext):
        StarshipFragmentImpl.Data {
      var _id: String? = null
      var _name: String? = null
      var _pilotConnection: StarshipFragmentImpl.Data.PilotConnection? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringApolloAdapter.fromJson(reader, context)
          1 -> _name = NullableStringApolloAdapter.fromJson(reader, context)
          2 -> _pilotConnection = PilotConnection.obj().nullable().fromJson(reader, context)
          else -> break
        }
      }

      return StarshipFragmentImpl.Data(
        id = _id!!,
        name = _name,
        pilotConnection = _pilotConnection
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      `value`: StarshipFragmentImpl.Data,
      context: ApolloAdapter.DataSerializeContext,
    ): Unit {
      writer.name("id")
      StringApolloAdapter.toJson(writer, value.id, context)

      writer.name("name")
      NullableStringApolloAdapter.toJson(writer, value.name, context)

      writer.name("pilotConnection")
      PilotConnection.obj().nullable().toJson(writer, value.pilotConnection, context)
    }

    private object PilotConnection : ApolloAdapter<StarshipFragmentImpl.Data.PilotConnection> {
      public val RESPONSE_NAMES: List<String> = listOf("edges")

      public override fun fromJson(reader: JsonReader,
          context: ApolloAdapter.DataDeserializeContext):
          StarshipFragmentImpl.Data.PilotConnection {
        var _edges: List<StarshipFragmentImpl.Data.PilotConnection.Edge?>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader, context)
            else -> break
          }
        }

        return StarshipFragmentImpl.Data.PilotConnection(
          edges = _edges
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        `value`: StarshipFragmentImpl.Data.PilotConnection,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, value.edges, context)
      }

      private object Edge : ApolloAdapter<StarshipFragmentImpl.Data.PilotConnection.Edge> {
        public val RESPONSE_NAMES: List<String> = listOf("node")

        public override fun fromJson(reader: JsonReader,
            context: ApolloAdapter.DataDeserializeContext):
            StarshipFragmentImpl.Data.PilotConnection.Edge {
          var _node: StarshipFragmentImpl.Data.PilotConnection.Edge.Node? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _node = Node.obj().nullable().fromJson(reader, context)
              else -> break
            }
          }

          return StarshipFragmentImpl.Data.PilotConnection.Edge(
            node = _node
          )
        }

        public override fun toJson(
          writer: JsonWriter,
          `value`: StarshipFragmentImpl.Data.PilotConnection.Edge,
          context: ApolloAdapter.DataSerializeContext,
        ): Unit {
          writer.name("node")
          Node.obj().nullable().toJson(writer, value.node, context)
        }

        private object Node : ApolloAdapter<StarshipFragmentImpl.Data.PilotConnection.Edge.Node> {
          public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "homeworld")

          public override fun fromJson(reader: JsonReader,
              context: ApolloAdapter.DataDeserializeContext):
              StarshipFragmentImpl.Data.PilotConnection.Edge.Node {
            var __typename: String? = null
            var _name: String? = null
            var _homeworld: StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = StringApolloAdapter.fromJson(reader, context)
                1 -> _name = NullableStringApolloAdapter.fromJson(reader, context)
                2 -> _homeworld = Homeworld.obj().nullable().fromJson(reader, context)
                else -> break
              }
            }

            return StarshipFragmentImpl.Data.PilotConnection.Edge.Node(
              __typename = __typename!!,
              name = _name,
              homeworld = _homeworld
            )
          }

          public override fun toJson(
            writer: JsonWriter,
            `value`: StarshipFragmentImpl.Data.PilotConnection.Edge.Node,
            context: ApolloAdapter.DataSerializeContext,
          ): Unit {
            writer.name("__typename")
            StringApolloAdapter.toJson(writer, value.__typename, context)

            writer.name("name")
            NullableStringApolloAdapter.toJson(writer, value.name, context)

            writer.name("homeworld")
            Homeworld.obj().nullable().toJson(writer, value.homeworld, context)
          }

          private object Homeworld :
              ApolloAdapter<StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld> {
            public val RESPONSE_NAMES: List<String> = listOf("__typename", "name")

            public override fun fromJson(reader: JsonReader,
                context: ApolloAdapter.DataDeserializeContext):
                StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld {
              var __typename: String? = null
              var _name: String? = null

              while(true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> __typename = StringApolloAdapter.fromJson(reader, context)
                  1 -> _name = NullableStringApolloAdapter.fromJson(reader, context)
                  else -> break
                }
              }

              return StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld(
                __typename = __typename!!,
                name = _name
              )
            }

            public override fun toJson(
              writer: JsonWriter,
              `value`: StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld,
              context: ApolloAdapter.DataSerializeContext,
            ): Unit {
              writer.name("__typename")
              StringApolloAdapter.toJson(writer, value.__typename, context)

              writer.name("name")
              NullableStringApolloAdapter.toJson(writer, value.name, context)
            }
          }
        }
      }
    }
  }
}
