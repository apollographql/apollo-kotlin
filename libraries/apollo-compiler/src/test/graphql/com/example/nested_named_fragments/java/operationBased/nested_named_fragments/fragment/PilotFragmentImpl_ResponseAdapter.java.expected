//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_named_fragments.fragment;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CompositeAdapterContext;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableCompositeAdapter;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class PilotFragmentImpl_ResponseAdapter {
  public enum PilotFragment implements CompositeAdapter<com.example.nested_named_fragments.fragment.PilotFragment> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("name", "homeworld");

    @Override
    public com.example.nested_named_fragments.fragment.PilotFragment fromJson(JsonReader reader,
        CompositeAdapterContext adapterContext) throws IOException {
      String _name = null;
      com.example.nested_named_fragments.fragment.PilotFragment.Homeworld _homeworld = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _name = Adapters.NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 1: _homeworld = new NullableCompositeAdapter<>(new ObjectCompositeAdapter<com.example.nested_named_fragments.fragment.PilotFragment.Homeworld>(Homeworld.INSTANCE, true)).fromJson(reader, adapterContext); break;
          default: break loop;
        }
      }

      return new com.example.nested_named_fragments.fragment.PilotFragment(
        _name,
        _homeworld
      );
    }

    @Override
    public void toJson(JsonWriter writer,
        com.example.nested_named_fragments.fragment.PilotFragment value,
        CompositeAdapterContext adapterContext) throws IOException {
      writer.name("name");
      Adapters.NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name);

      writer.name("homeworld");
      new NullableCompositeAdapter<>(new ObjectCompositeAdapter<com.example.nested_named_fragments.fragment.PilotFragment.Homeworld>(Homeworld.INSTANCE, true)).toJson(writer, value.homeworld, adapterContext);
    }
  }

  public enum Homeworld implements CompositeAdapter<com.example.nested_named_fragments.fragment.PilotFragment.Homeworld> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public com.example.nested_named_fragments.fragment.PilotFragment.Homeworld fromJson(
        JsonReader reader, CompositeAdapterContext adapterContext) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      reader.rewind();
      PlanetFragment _planetFragment = com.example.nested_named_fragments.fragment.PlanetFragmentImpl_ResponseAdapter.PlanetFragment.INSTANCE.fromJson(reader, adapterContext);

      Assertions.checkFieldNotMissing(__typename, "__typename");

      return new com.example.nested_named_fragments.fragment.PilotFragment.Homeworld(
        __typename,
        _planetFragment
      );
    }

    @Override
    public void toJson(JsonWriter writer,
        com.example.nested_named_fragments.fragment.PilotFragment.Homeworld value,
        CompositeAdapterContext adapterContext) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      com.example.nested_named_fragments.fragment.PlanetFragmentImpl_ResponseAdapter.PlanetFragment.INSTANCE.toJson(writer, value.planetFragment, adapterContext);
    }
  }
}
