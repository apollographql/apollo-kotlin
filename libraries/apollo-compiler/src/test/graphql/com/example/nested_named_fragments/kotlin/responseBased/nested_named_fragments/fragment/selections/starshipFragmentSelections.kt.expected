//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_named_fragments.fragment.selections

import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CompiledFragment
import com.apollographql.apollo.api.CompiledSelection
import com.apollographql.apollo.api.list
import com.apollographql.apollo.api.notNull
import com.example.nested_named_fragments.type.GraphQLID
import com.example.nested_named_fragments.type.GraphQLString
import com.example.nested_named_fragments.type.Person
import com.example.nested_named_fragments.type.StarshipPilotsConnection
import com.example.nested_named_fragments.type.StarshipPilotsEdge
import kotlin.collections.List

public object StarshipFragmentSelections {
  private val __node: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Person",
          possibleTypes = listOf("Person")
        ).selections(PilotFragmentSelections.__root)
        .build()
      )

  private val __edges: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "node",
          type = Person.type
        ).selections(__node)
        .build()
      )

  private val __pilotConnection: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "edges",
          type = StarshipPilotsEdge.type.list()
        ).selections(__edges)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "pilotConnection",
          type = StarshipPilotsConnection.type
        ).selections(__pilotConnection)
        .build()
      )
}
