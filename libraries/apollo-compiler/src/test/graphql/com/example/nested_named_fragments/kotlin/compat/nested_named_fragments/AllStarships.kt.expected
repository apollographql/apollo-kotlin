//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_named_fragments

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.nested_named_fragments.adapter.AllStarships_ResponseAdapter
import com.example.nested_named_fragments.fragment.StarshipFragment
import com.example.nested_named_fragments.selections.AllStarshipsSelections
import com.example.nested_named_fragments.type.Root
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class AllStarships() : Query<AllStarships.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = AllStarships_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = Root.type
  )
  .selections(selections = AllStarshipsSelections.__root)
  .build()

  @ApolloAdaptableWith(AllStarships_ResponseAdapter.Data::class)
  public data class Data(
    public val allStarships: AllStarships?,
  ) : Query.Data

  public data class AllStarships(
    /**
     * A list of edges.
     */
    public val edges: List<Edge?>?,
  ) {
    public fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()
  }

  public data class Edge(
    /**
     * The item at the end of the edge
     */
    public val node: Node?,
  )

  public data class Node(
    public val __typename: String,
    /**
     * Synthetic field for grouping fragments
     */
    public val fragments: Fragments,
  ) {
    public data class Fragments(
      /**
       * Synthetic field for 'starshipFragment'
       */
      public val starshipFragment: StarshipFragment,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "a76ec26a83546f1113b4f2d763d67118a12a70958ef57d44d3f33dedaf90ff72"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query AllStarships {
     *   allStarships(first: 7) {
     *     edges {
     *       node {
     *         __typename
     *         ...starshipFragment
     *       }
     *     }
     *   }
     * }
     *
     * fragment planetFragment on Planet {
     *   name
     * }
     *
     * fragment pilotFragment on Person {
     *   name
     *   homeworld {
     *     __typename
     *     ...planetFragment
     *   }
     * }
     *
     * fragment starshipFragment on Starship {
     *   id
     *   name
     *   pilotConnection {
     *     edges {
     *       node {
     *         __typename
     *         ...pilotFragment
     *       }
     *     }
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query AllStarships { allStarships(first: 7) { edges { node { __typename ...starshipFragment } } } }  fragment planetFragment on Planet { name }  fragment pilotFragment on Person { name homeworld { __typename ...planetFragment } }  fragment starshipFragment on Starship { id name pilotConnection { edges { node { __typename ...pilotFragment } } } }"

    public const val OPERATION_NAME: String = "AllStarships"
  }
}
