//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.enums_as_sealed.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.NullableAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.example.enums_as_sealed.TestQuery;
import com.example.enums_as_sealed.type.Enum;
import com.example.enums_as_sealed.type.adapter.Enum_ResponseAdapter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements Adapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("enum");

    @Override
    public TestQuery.Data fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
        throws IOException {
      Enum _enum = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _enum = new NullableAdapter<>(Enum_ResponseAdapter.INSTANCE).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _enum
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        TestQuery.Data value) throws IOException {
      writer.name("enum");
      new NullableAdapter<>(Enum_ResponseAdapter.INSTANCE).toJson(writer, customScalarAdapters, value.enum_);
    }
  }
}
