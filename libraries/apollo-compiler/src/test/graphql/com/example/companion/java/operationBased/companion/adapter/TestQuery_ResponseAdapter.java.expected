//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.companion.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloAdapter;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.companion.TestQuery;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements ApolloAdapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("companion");

    @Override
    public TestQuery.Data fromJson(JsonReader reader, ApolloAdapter.DataDeserializeContext context)
        throws IOException {
      TestQuery.Companion _companion = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _companion = new NullableAdapter<>(new ObjectAdapter<TestQuery.Companion>(Companion.INSTANCE, false)).fromJson(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _companion
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.Data value,
        ApolloAdapter.DataSerializeContext context) throws IOException {
      writer.name("companion");
      new NullableAdapter<>(new ObjectAdapter<TestQuery.Companion>(Companion.INSTANCE, false)).toJson(writer, value.companion, context);
    }
  }

  public enum Companion implements ApolloAdapter<TestQuery.Companion> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("foo");

    @Override
    public TestQuery.Companion fromJson(JsonReader reader,
        ApolloAdapter.DataDeserializeContext context) throws IOException {
      Integer _foo = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _foo = Adapters.IntApolloAdapter.fromJson(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_foo, "foo");

      return new TestQuery.Companion(
        _foo
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.Companion value,
        ApolloAdapter.DataSerializeContext context) throws IOException {
      writer.name("foo");
      Adapters.IntApolloAdapter.toJson(writer, value.foo, context);
    }
  }
}
