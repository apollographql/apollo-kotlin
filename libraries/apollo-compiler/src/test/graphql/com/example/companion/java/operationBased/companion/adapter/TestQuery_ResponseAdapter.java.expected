//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.companion.adapter;

import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.NullableDataAdapter;
import com.apollographql.apollo3.api.ObjectDataAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.companion.TestQuery;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements DataAdapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("companion");

    @Override
    public TestQuery.Data deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      TestQuery.Companion _companion = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _companion = new NullableDataAdapter<>(new ObjectDataAdapter<TestQuery.Companion>(Companion.INSTANCE, false)).deserializeData(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _companion
      );
    }

    @Override
    public void serializeData(JsonWriter writer, TestQuery.Data value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("companion");
      new NullableDataAdapter<>(new ObjectDataAdapter<TestQuery.Companion>(Companion.INSTANCE, false)).serializeData(writer, value.companion, context);
    }
  }

  public enum Companion implements DataAdapter<TestQuery.Companion> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("foo");

    @Override
    public TestQuery.Companion deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      Integer _foo = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _foo = DataAdapters.IntDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_foo, "foo");

      return new TestQuery.Companion(
        _foo
      );
    }

    @Override
    public void serializeData(JsonWriter writer, TestQuery.Companion value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("foo");
      DataAdapters.IntDataAdapter.serializeData(writer, value.foo, context);
    }
  }
}
