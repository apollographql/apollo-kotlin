//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.`companion`.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.IntAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.missingField
import com.apollographql.apollo.api.nullable
import com.apollographql.apollo.api.obj
import com.example.`companion`.TestQuery
import kotlin.Int
import kotlin.String
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : Adapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("companion")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): TestQuery.Data {
      var _companion: TestQuery.Companion_? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _companion = Companion.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.Data(
        `companion` = _companion
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Data,
    ) {
      writer.name("companion")
      Companion.obj().nullable().toJson(writer, customScalarAdapters, value.`companion`)
    }
  }

  public object Companion : Adapter<TestQuery.Companion_> {
    public val RESPONSE_NAMES: List<String> = listOf("foo")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): TestQuery.Companion_ {
      var _foo: Int? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _foo = IntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.Companion_(
        foo = _foo ?: missingField(reader, "foo")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Companion_,
    ) {
      writer.name("foo")
      IntAdapter.toJson(writer, customScalarAdapters, value.foo)
    }
  }
}
