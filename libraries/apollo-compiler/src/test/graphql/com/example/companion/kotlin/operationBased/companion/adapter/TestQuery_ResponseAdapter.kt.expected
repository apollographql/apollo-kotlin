//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.`companion`.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.`companion`.TestQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : CompositeAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("companion")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Data {
      var _companion: TestQuery.Companion_? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _companion = Companion.obj().nullable().deserializeComposite(reader, context)
          else -> break
        }
      }

      return TestQuery.Data(
        `companion` = _companion
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("companion")
      Companion.obj().nullable().serializeComposite(writer, value.`companion`, context)
    }
  }

  public object Companion : CompositeAdapter<TestQuery.Companion_> {
    public val RESPONSE_NAMES: List<String> = listOf("foo")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Companion_ {
      var _foo: Int? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _foo = IntAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          else -> break
        }
      }

      return TestQuery.Companion_(
        foo = _foo!!
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: TestQuery.Companion_,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("foo")
      IntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.foo)
    }
  }
}
