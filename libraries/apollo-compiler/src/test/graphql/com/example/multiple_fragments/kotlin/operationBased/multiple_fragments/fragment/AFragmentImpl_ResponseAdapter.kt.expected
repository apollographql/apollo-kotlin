//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.multiple_fragments.fragment

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import kotlin.String
import kotlin.collections.List

public object AFragmentImpl_ResponseAdapter {
  public object AFragment : CompositeAdapter<com.example.multiple_fragments.fragment.AFragment> {
    public val RESPONSE_NAMES: List<String> = listOf("node")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        com.example.multiple_fragments.fragment.AFragment {
      var _node: com.example.multiple_fragments.fragment.AFragment.Node? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _node = Node.obj(true).nullable().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return com.example.multiple_fragments.fragment.AFragment(
        node = _node
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: com.example.multiple_fragments.fragment.AFragment,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("node")
      Node.obj(true).nullable().toJson(writer, value.node, adapterContext)
    }

    private object Node : CompositeAdapter<com.example.multiple_fragments.fragment.AFragment.Node> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          com.example.multiple_fragments.fragment.AFragment.Node {
        var __typename: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _fragment1: Fragment1? = null
        if (possibleTypes("ANode").evaluate(adapterContext.falseVariables, __typename, adapterContext.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _fragment1 = com.example.multiple_fragments.fragment.Fragment1Impl_ResponseAdapter.Fragment1.fromJson(reader,
              adapterContext)
        }

        var _fragment2: Fragment2? = null
        if (possibleTypes("ANode").evaluate(adapterContext.falseVariables, __typename, adapterContext.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _fragment2 = com.example.multiple_fragments.fragment.Fragment2Impl_ResponseAdapter.Fragment2.fromJson(reader,
              adapterContext)
        }

        return com.example.multiple_fragments.fragment.AFragment.Node(
          __typename = __typename,
          fragment1 = _fragment1,
          fragment2 = _fragment2
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: com.example.multiple_fragments.fragment.AFragment.Node,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        if (value.fragment1 != null) {
          com.example.multiple_fragments.fragment.Fragment1Impl_ResponseAdapter.Fragment1.toJson(writer,
              value.fragment1, adapterContext)
        }

        if (value.fragment2 != null) {
          com.example.multiple_fragments.fragment.Fragment2Impl_ResponseAdapter.Fragment2.toJson(writer,
              value.fragment2, adapterContext)
        }
      }
    }
  }
}
