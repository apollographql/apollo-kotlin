//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.multiple_fragments.fragment

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Fragment
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.multiple_fragments.fragment.selections.AFragmentSelections
import com.example.multiple_fragments.type.A
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress

public class AFragmentImpl() : Fragment<AFragmentImpl.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This fragment doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = AFragmentImpl_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = A.type
  )
  .selections(selections = AFragmentSelections.__root)
  .build()

  public data class Data(
    override val node: Node?,
  ) : AFragment,
      Fragment.Data {
    public sealed interface Node : AFragment.Node {
      override val __typename: String

      public companion object {
        @Suppress("USELESS_CAST")
        public fun Node.fragment1(): Fragment1? = this as? Fragment1

        @Suppress("USELESS_CAST")
        public fun Node.fragment2(): Fragment2? = this as? Fragment2

        @Suppress("USELESS_CAST")
        public fun Node.asANode(): ANodeNode? = this as? ANodeNode
      }
    }

    public data class ANodeNode(
      override val __typename: String,
      override val field1: String?,
      override val field2: String?,
    ) : Node,
        Fragment1,
        Fragment2,
        AFragment.ANodeNode

    public data class OtherNode(
      override val __typename: String,
    ) : Node,
        AFragment.Node
  }
}
