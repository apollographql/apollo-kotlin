//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.multiple_fragments.fragment

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List

public object AFragmentImpl_ResponseAdapter {
  public object Data : CompositeAdapter<AFragmentImpl.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("node")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): AFragmentImpl.Data {
      var _node: AFragmentImpl.Data.Node? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _node = Node.obj().nullable().deserializeComposite(reader, context)
          else -> break
        }
      }

      return AFragmentImpl.Data(
        node = _node
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: AFragmentImpl.Data,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("node")
      Node.obj().nullable().serializeComposite(writer, value.node, context)
    }

    private object Node : CompositeAdapter<AFragmentImpl.Data.Node> {
      public override fun deserializeComposite(reader: JsonReader,
          context: CompositeAdapter.DeserializeCompositeContext): AFragmentImpl.Data.Node {
        val __typename = reader.readTypename()
        return when(__typename) {
          "ANode",
          -> ANodeNode.deserializeComposite(reader, context, __typename)
          else
          -> OtherNode.deserializeComposite(reader, context, __typename)
        }
      }

      public override fun serializeComposite(
        writer: JsonWriter,
        `value`: AFragmentImpl.Data.Node,
        context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        when(value) {
          is AFragmentImpl.Data.ANodeNode -> ANodeNode.serializeComposite(writer, value, context)
          is AFragmentImpl.Data.OtherNode -> OtherNode.serializeComposite(writer, value, context)
        }
      }
    }

    public object ANodeNode {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "field1", "field2")

      public fun deserializeComposite(
        reader: JsonReader,
        @Suppress("UNUSED_PARAMETER") context: CompositeAdapter.DeserializeCompositeContext,
        typename: String,
      ): AFragmentImpl.Data.ANodeNode {
        var __typename: String? = typename
        var _field1: String? = null
        var _field2: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _field1 = NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            2 -> _field2 = NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return AFragmentImpl.Data.ANodeNode(
          __typename = __typename!!,
          field1 = _field1,
          field2 = _field2
        )
      }

      public fun serializeComposite(
        writer: JsonWriter,
        `value`: AFragmentImpl.Data.ANodeNode,
        @Suppress("UNUSED_PARAMETER") context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        writer.name("field1")
        NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.field1)

        writer.name("field2")
        NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.field2)
      }
    }

    public object OtherNode {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      public fun deserializeComposite(
        reader: JsonReader,
        @Suppress("UNUSED_PARAMETER") context: CompositeAdapter.DeserializeCompositeContext,
        typename: String,
      ): AFragmentImpl.Data.OtherNode {
        var __typename: String? = typename

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return AFragmentImpl.Data.OtherNode(
          __typename = __typename!!
        )
      }

      public fun serializeComposite(
        writer: JsonWriter,
        `value`: AFragmentImpl.Data.OtherNode,
        @Suppress("UNUSED_PARAMETER") context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)
      }
    }
  }
}
