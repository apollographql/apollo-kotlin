//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_conditional_inline.selections;

import com.apollographql.apollo.api.CompiledArgument;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CompiledFragment;
import com.apollographql.apollo.api.CompiledListType;
import com.apollographql.apollo.api.CompiledNotNullType;
import com.apollographql.apollo.api.CompiledSelection;
import com.apollographql.apollo.api.CompiledVariable;
import com.example.nested_conditional_inline.type.Character;
import com.example.nested_conditional_inline.type.GraphQLFloat;
import com.example.nested_conditional_inline.type.GraphQLString;
import com.example.nested_conditional_inline.type.Human;
import com.example.nested_conditional_inline.type.Query;
import java.util.Arrays;
import java.util.List;

public class TestQuerySelections {
  private static List<CompiledSelection> __onHuman1 = Arrays.asList(
    new CompiledField.Builder("height", GraphQLFloat.type).arguments(Arrays.asList(new CompiledArgument.Builder(Human.__height_unit).value("FOOT").build())).build()
  );

  private static List<CompiledSelection> __friends = Arrays.asList(
    new CompiledField.Builder("__typename", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("name", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledFragment.Builder("Human", Arrays.asList("Human")).selections(__onHuman1).build()
  );

  private static List<CompiledSelection> __onHuman = Arrays.asList(
    new CompiledField.Builder("friends", new CompiledListType(Character.type)).selections(__friends).build()
  );

  private static List<CompiledSelection> __onHuman2 = Arrays.asList(
    new CompiledField.Builder("height", GraphQLFloat.type).arguments(Arrays.asList(new CompiledArgument.Builder(Human.__height_unit).value("METER").build())).build()
  );

  private static List<CompiledSelection> __friends1 = Arrays.asList(
    new CompiledField.Builder("__typename", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("name", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledFragment.Builder("Human", Arrays.asList("Human")).selections(__onHuman2).build()
  );

  private static List<CompiledSelection> __onDroid = Arrays.asList(
    new CompiledField.Builder("friends", new CompiledListType(Character.type)).selections(__friends1).build()
  );

  private static List<CompiledSelection> __hero = Arrays.asList(
    new CompiledField.Builder("__typename", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("name", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledFragment.Builder("Human", Arrays.asList("Human")).selections(__onHuman).build(),
    new CompiledFragment.Builder("Droid", Arrays.asList("Droid")).selections(__onDroid).build()
  );

  public static List<CompiledSelection> __root = Arrays.asList(
    new CompiledField.Builder("hero", Character.type).arguments(Arrays.asList(new CompiledArgument.Builder(Query.__hero_episode).value(new CompiledVariable("episode")).build())).selections(__hero).build()
  );
}
