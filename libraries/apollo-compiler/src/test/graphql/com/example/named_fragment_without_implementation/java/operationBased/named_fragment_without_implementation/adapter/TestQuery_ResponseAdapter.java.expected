//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_without_implementation.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloAdapter;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.named_fragment_without_implementation.TestQuery;
import com.example.named_fragment_without_implementation.fragment.DroidDetails;
import com.example.named_fragment_without_implementation.fragment.HumanDetails;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements ApolloAdapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("hero");

    @Override
    public TestQuery.Data fromJson(JsonReader reader, ApolloAdapter.DataDeserializeContext context)
        throws IOException {
      TestQuery.Hero _hero = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _hero = new NullableAdapter<>(new ObjectAdapter<TestQuery.Hero>(Hero.INSTANCE, true)).fromJson(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _hero
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.Data value,
        ApolloAdapter.DataSerializeContext context) throws IOException {
      writer.name("hero");
      new NullableAdapter<>(new ObjectAdapter<TestQuery.Hero>(Hero.INSTANCE, true)).toJson(writer, value.hero, context);
    }
  }

  public enum Hero implements ApolloAdapter<TestQuery.Hero> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename", "name");

    @Override
    public TestQuery.Hero fromJson(JsonReader reader, ApolloAdapter.DataDeserializeContext context)
        throws IOException {
      String __typename = null;
      String _name = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringApolloAdapter.fromJson(reader, context); break;
          case 1: _name = Adapters.StringApolloAdapter.fromJson(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      HumanDetails _humanDetails = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Human")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _humanDetails = com.example.named_fragment_without_implementation.fragment.HumanDetailsImpl_ResponseAdapter.HumanDetails.INSTANCE.fromJson(reader, context);
      }

      DroidDetails _droidDetails = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Droid")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _droidDetails = com.example.named_fragment_without_implementation.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.INSTANCE.fromJson(reader, context);
      }

      Assertions.checkFieldNotMissing(_name, "name");

      return new TestQuery.Hero(
        __typename,
        _name,
        _humanDetails,
        _droidDetails
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.Hero value,
        ApolloAdapter.DataSerializeContext context) throws IOException {
      writer.name("__typename");
      Adapters.StringApolloAdapter.toJson(writer, value.__typename, context);

      writer.name("name");
      Adapters.StringApolloAdapter.toJson(writer, value.name, context);

      if (value.humanDetails != null) {
        com.example.named_fragment_without_implementation.fragment.HumanDetailsImpl_ResponseAdapter.HumanDetails.INSTANCE.toJson(writer, value.humanDetails, context);
      }

      if (value.droidDetails != null) {
        com.example.named_fragment_without_implementation.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.INSTANCE.toJson(writer, value.droidDetails, context);
      }
    }
  }
}
