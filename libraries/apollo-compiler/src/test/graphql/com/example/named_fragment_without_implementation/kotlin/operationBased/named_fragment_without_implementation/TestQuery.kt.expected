//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_without_implementation

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_without_implementation.adapter.TestQuery_ResponseAdapter
import com.example.named_fragment_without_implementation.fragment.DroidDetails
import com.example.named_fragment_without_implementation.fragment.HumanDetails
import com.example.named_fragment_without_implementation.selections.TestQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit

public class TestQuery() : Query<TestQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.named_fragment_without_implementation.type.Query.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val hero: Hero?,
  ) : Query.Data {
    public data class Hero(
      public val __typename: String,
      /**
       * The name of the character
       */
      public val name: String,
      /**
       * Synthetic field for 'HumanDetails'
       */
      public val humanDetails: HumanDetails?,
      /**
       * Synthetic field for 'DroidDetails'
       */
      public val droidDetails: DroidDetails?,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "bd506c9c818f2163b34753c735df7794c16d135e4a8e6d24e2930e63eacf01df"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   hero {
     *     __typename
     *     name
     *     ...HumanDetails
     *     ...DroidDetails
     *   }
     * }
     *
     * fragment HumanDetails on Human {
     *   height
     * }
     *
     * fragment DroidDetails on Droid {
     *   primaryFunction
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query TestQuery { hero { __typename name ...HumanDetails ...DroidDetails } }  fragment HumanDetails on Human { height }  fragment DroidDetails on Droid { primaryFunction }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
