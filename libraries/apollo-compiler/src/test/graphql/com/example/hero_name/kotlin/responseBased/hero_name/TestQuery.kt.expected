//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.hero_name

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.hero_name.adapter.TestQuery_ResponseAdapter
import com.example.hero_name.selections.TestQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import com.example.hero_name.type.Query as CompiledQuery

public class TestQuery() : Query<TestQuery.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val hero: Hero?,
  ) : Query.Data {
    public sealed interface Hero {
      public val __typename: String

      /**
       * The name of the character
       */
      public val name: String

      /**
       * The date character was born.
       */
      public val birthDate: Any

      public companion object {
        @Suppress("USELESS_CAST")
        public fun Hero.asDroid(): DroidHero? = this as? DroidHero
      }
    }

    public data class DroidHero(
      override val __typename: String,
      /**
       * The name of the character
       */
      override val name: String,
      /**
       * The date character was born.
       */
      override val birthDate: Any,
      /**
       * This droid's primary function
       */
      public val primaryFunction: String?,
    ) : Hero

    public data class OtherHero(
      override val __typename: String,
      /**
       * The name of the character
       */
      override val name: String,
      /**
       * The date character was born.
       */
      override val birthDate: Any,
    ) : Hero
  }

  public companion object {
    public const val OPERATION_ID: String =
        "17e30561f6043a4c67f3de02bc6c76798edb2d584095975a2f75862222ef4912"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery {
     *   hero {
     *     __typename
     *     name
     *     birthDate
     *     ... on Droid {
     *       primaryFunction
     *     }
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery { hero { __typename name birthDate ... on Droid { primaryFunction } } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
