//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.deprecated_merged_field.fragment

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.evaluate
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.missingField
import com.apollographql.apollo.api.possibleTypes
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

public object AnimalFragmentImpl_ResponseAdapter {
  public object AnimalFragment : Adapter<com.example.deprecated_merged_field.fragment.AnimalFragment> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.deprecated_merged_field.fragment.AnimalFragment {
      var __typename: String? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onCat: com.example.deprecated_merged_field.fragment.AnimalFragment.OnCat? = null
      if (possibleTypes("Cat").evaluate(customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, null)) {
        reader.rewind()
        _onCat = com.example.deprecated_merged_field.fragment.AnimalFragmentImpl_ResponseAdapter.AnimalFragment.OnCat.fromJson(reader, customScalarAdapters)
      }

      var _onDog: com.example.deprecated_merged_field.fragment.AnimalFragment.OnDog? = null
      if (possibleTypes("Dog").evaluate(customScalarAdapters.falseVariables, __typename, customScalarAdapters.deferredFragmentIdentifiers, null)) {
        reader.rewind()
        _onDog = com.example.deprecated_merged_field.fragment.AnimalFragmentImpl_ResponseAdapter.AnimalFragment.OnDog.fromJson(reader, customScalarAdapters)
      }

      return com.example.deprecated_merged_field.fragment.AnimalFragment(
        __typename = __typename,
        onCat = _onCat,
        onDog = _onDog
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.deprecated_merged_field.fragment.AnimalFragment,
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.onCat != null) {
        com.example.deprecated_merged_field.fragment.AnimalFragmentImpl_ResponseAdapter.AnimalFragment.OnCat.toJson(writer, customScalarAdapters, value.onCat)
      }

      if (value.onDog != null) {
        com.example.deprecated_merged_field.fragment.AnimalFragmentImpl_ResponseAdapter.AnimalFragment.OnDog.toJson(writer, customScalarAdapters, value.onDog)
      }
    }

    private object OnCat : Adapter<com.example.deprecated_merged_field.fragment.AnimalFragment.OnCat> {
      public val RESPONSE_NAMES: List<String> = listOf("name")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.deprecated_merged_field.fragment.AnimalFragment.OnCat {
        var _name: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.deprecated_merged_field.fragment.AnimalFragment.OnCat(
          name = _name ?: missingField(reader, "name")
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.deprecated_merged_field.fragment.AnimalFragment.OnCat,
      ) {
        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)
      }
    }

    private object OnDog : Adapter<com.example.deprecated_merged_field.fragment.AnimalFragment.OnDog> {
      public val RESPONSE_NAMES: List<String> = listOf("name")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.deprecated_merged_field.fragment.AnimalFragment.OnDog {
        var _name: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.deprecated_merged_field.fragment.AnimalFragment.OnDog(
          name = _name ?: missingField(reader, "name")
        )
      }

      @Suppress("DEPRECATION")
      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.deprecated_merged_field.fragment.AnimalFragment.OnDog,
      ) {
        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)
      }
    }
  }
}
