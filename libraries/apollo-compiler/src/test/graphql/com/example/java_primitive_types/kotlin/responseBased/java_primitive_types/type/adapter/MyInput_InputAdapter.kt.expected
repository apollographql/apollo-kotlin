//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_primitive_types.type.adapter

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.IntApolloAdapter
import com.apollographql.apollo3.api.NullableIntApolloAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.present
import com.example.java_primitive_types.type.MyInput
import kotlin.IllegalStateException
import kotlin.Unit

public object MyInput_InputAdapter : ApolloAdapter<MyInput> {
  public override fun fromJson(reader: JsonReader, context: ApolloAdapter.DataDeserializeContext):
      MyInput = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    `value`: MyInput,
    context: ApolloAdapter.DataSerializeContext,
  ): Unit {
    if (value.nullableInt is Optional.Present) {
      writer.name("nullableInt")
      NullableIntApolloAdapter.present().toJson(writer, value.nullableInt, context)
    }
    writer.name("nonNullableInt")
    IntApolloAdapter.toJson(writer, value.nonNullableInt, context)
    if (value.nonNullableIntWithDefault is Optional.Present) {
      writer.name("nonNullableIntWithDefault")
      IntApolloAdapter.present().toJson(writer, value.nonNullableIntWithDefault, context)
    }
  }
}
