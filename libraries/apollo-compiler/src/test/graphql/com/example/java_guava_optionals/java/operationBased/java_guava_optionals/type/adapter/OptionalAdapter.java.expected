//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_guava_optionals.type.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.google.common.base.Optional;
import java.io.IOException;
import java.lang.Override;

public class OptionalAdapter<T> implements Adapter<Optional<T>> {
  private final Adapter<T> wrappedAdapter;

  public OptionalAdapter(Adapter<T> wrappedAdapter) {
    this.wrappedAdapter = wrappedAdapter;
  }

  @Override
  public Optional<T> fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters) throws
      IOException {
    if (reader.peek() == JsonReader.Token.NULL) {
      reader.skipValue();
      return Optional.absent();
    }
    return Optional.of(wrappedAdapter.fromJson(reader, customScalarAdapters));
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      Optional<T> value) throws IOException {
    if (!value.isPresent()) {
      writer.nullValue();
    } else {
      wrappedAdapter.toJson(writer, customScalarAdapters, value.get());
    }
  }
}
