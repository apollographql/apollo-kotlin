//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_delegate.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Fragment
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_delegate.fragment.selections.DroidDetailsSelections
import com.example.named_fragment_delegate.type.Droid
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class DroidDetailsImpl() : Fragment<DroidDetailsImpl.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This fragment doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = DroidDetailsImpl_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = Droid.type
  )
  .selections(selections = DroidDetailsSelections.__root)
  .build()

  public data class Data(
    /**
     * What others call this droid
     */
    public override val name: String,
    /**
     * This droid's primary function
     */
    public override val primaryFunction: String?,
    /**
     * This droid's friends, or an empty list if they have none
     */
    public override val friends: List<Friend?>?,
  ) : DroidDetails, Fragment.Data {
    public fun friendsFilterNotNull(): List<Friend>? = friends?.filterNotNull()

    public data class Friend(
      /**
       * The name of the character
       */
      public override val name: String,
    ) : DroidDetails.Friend
  }
}
