//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.field_with_include_directive.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.NullableDataAdapter;
import com.apollographql.apollo3.api.ObjectDataAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.field_with_include_directive.TestQuery;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements DataAdapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("hero");

    @Override
    public TestQuery.Data deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      TestQuery.Hero _hero = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _hero = new NullableDataAdapter<>(new ObjectDataAdapter<TestQuery.Hero>(Hero.INSTANCE, false)).deserializeData(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _hero
      );
    }

    @Override
    public void serializeData(JsonWriter writer, TestQuery.Data value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("hero");
      new NullableDataAdapter<>(new ObjectDataAdapter<TestQuery.Hero>(Hero.INSTANCE, false)).serializeData(writer, value.hero, context);
    }
  }

  public enum Hero implements DataAdapter<TestQuery.Hero> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("name", "friendsConnection");

    @Override
    public TestQuery.Hero deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      String _name = null;
      TestQuery.FriendsConnection _friendsConnection = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _name = Adapters.NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 1: _friendsConnection = new NullableDataAdapter<>(new ObjectDataAdapter<TestQuery.FriendsConnection>(FriendsConnection.INSTANCE, false)).deserializeData(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.Hero(
        _name,
        _friendsConnection
      );
    }

    @Override
    public void serializeData(JsonWriter writer, TestQuery.Hero value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("name");
      Adapters.NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name);

      writer.name("friendsConnection");
      new NullableDataAdapter<>(new ObjectDataAdapter<TestQuery.FriendsConnection>(FriendsConnection.INSTANCE, false)).serializeData(writer, value.friendsConnection, context);
    }
  }

  public enum FriendsConnection implements DataAdapter<TestQuery.FriendsConnection> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("totalCount");

    @Override
    public TestQuery.FriendsConnection deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      Integer _totalCount = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _totalCount = Adapters.NullableIntAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      return new TestQuery.FriendsConnection(
        _totalCount
      );
    }

    @Override
    public void serializeData(JsonWriter writer, TestQuery.FriendsConnection value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("totalCount");
      Adapters.NullableIntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.totalCount);
    }
  }
}
