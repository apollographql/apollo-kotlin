//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.field_with_include_directive;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.json.JsonWriter;
import com.example.field_with_include_directive.adapter.TestQuery_ResponseAdapter;
import com.example.field_with_include_directive.adapter.TestQuery_VariablesAdapter;
import com.example.field_with_include_directive.selections.TestQuerySelections;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "7d815b13df95ab484c7b20cb8059c07e3a8688d1ea0a251bff6d3f0b6fdb1cb7";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery($includeName: Boolean!, $skipFriends: Boolean!) @operationDirective(dummy: "hello") {
   *   hero {
   *     name @include(if: $includeName)
   *     friendsConnection @skip(if: $skipFriends) {
   *       totalCount
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery($includeName: Boolean!, $skipFriends: Boolean!) @operationDirective(dummy: \"hello\") { hero { name @include(if: $includeName) friendsConnection @skip(if: $skipFriends) { totalCount } } }";

  public static final String OPERATION_NAME = "TestQuery";

  public final Boolean includeName;

  public final Boolean skipFriends;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public TestQuery(Boolean includeName, Boolean skipFriends) {
    this.includeName = includeName;
    this.skipFriends = skipFriends;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof TestQuery) {
      TestQuery that = (TestQuery) o;
      return ((this.includeName == null) ? (that.includeName == null) : this.includeName.equals(that.includeName))
       &&((this.skipFriends == null) ? (that.skipFriends == null) : this.skipFriends.equals(that.skipFriends));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (includeName == null) ? 0 : includeName.hashCode();
      __h *= 1000003;
      __h ^= (skipFriends == null) ? 0 : skipFriends.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "TestQuery{"
        + "includeName=" + includeName + ", "
        + "skipFriends=" + skipFriends
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withDefaultValues) throws IOException {
    TestQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withDefaultValues);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.field_with_include_directive.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private Boolean includeName;

    private Boolean skipFriends;

    Builder() {
    }

    public Builder includeName(Boolean includeName) {
      this.includeName = includeName;
      return this;
    }

    public Builder skipFriends(Boolean skipFriends) {
      this.skipFriends = skipFriends;
      return this;
    }

    public TestQuery build() {
      return new TestQuery(includeName, skipFriends);
    }
  }

  public static class Data implements Query.Data {
    public Hero hero;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(Hero hero) {
      this.hero = hero;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.hero == null) ? (that.hero == null) : this.hero.equals(that.hero));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (hero == null) ? 0 : hero.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "hero=" + hero
          + "}";
      }
      return $toString;
    }
  }

  public static class Hero {
    /**
     * The name of the character
     */
    public String name;

    /**
     * The friends of the character exposed as a connection with edges
     */
    public FriendsConnection friendsConnection;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Hero(String name, FriendsConnection friendsConnection) {
      this.name = name;
      this.friendsConnection = friendsConnection;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Hero) {
        Hero that = (Hero) o;
        return ((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         &&((this.friendsConnection == null) ? (that.friendsConnection == null) : this.friendsConnection.equals(that.friendsConnection));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        __h *= 1000003;
        __h ^= (friendsConnection == null) ? 0 : friendsConnection.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Hero{"
          + "name=" + name + ", "
          + "friendsConnection=" + friendsConnection
          + "}";
      }
      return $toString;
    }
  }

  public static class FriendsConnection {
    /**
     * The total number of friends
     */
    public Integer totalCount;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public FriendsConnection(Integer totalCount) {
      this.totalCount = totalCount;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof FriendsConnection) {
        FriendsConnection that = (FriendsConnection) o;
        return ((this.totalCount == null) ? (that.totalCount == null) : this.totalCount.equals(that.totalCount));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (totalCount == null) ? 0 : totalCount.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "FriendsConnection{"
          + "totalCount=" + totalCount
          + "}";
      }
      return $toString;
    }
  }
}
