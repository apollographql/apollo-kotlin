//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.field_with_include_directive.adapter

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.NullableIntApolloAdapter
import com.apollographql.apollo3.api.NullableStringApolloAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.field_with_include_directive.TestQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : ApolloAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    public override fun fromJson(reader: JsonReader, context: ApolloAdapter.DataDeserializeContext):
        TestQuery.Data {
      var _hero: TestQuery.Data.Hero? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj().nullable().fromJson(reader, context)
          else -> break
        }
      }

      return TestQuery.Data(
        hero = _hero
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      context: ApolloAdapter.DataSerializeContext,
    ): Unit {
      writer.name("hero")
      Hero.obj().nullable().toJson(writer, value.hero, context)
    }

    private object Hero : ApolloAdapter<TestQuery.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("name", "friendsConnection")

      public override fun fromJson(reader: JsonReader,
          context: ApolloAdapter.DataDeserializeContext): TestQuery.Data.Hero {
        var _name: String? = null
        var _friendsConnection: TestQuery.Data.Hero.FriendsConnection? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = NullableStringApolloAdapter.fromJson(reader, context)
            1 -> _friendsConnection = FriendsConnection.obj().nullable().fromJson(reader, context)
            else -> break
          }
        }

        return TestQuery.Data.Hero(
          name = _name,
          friendsConnection = _friendsConnection
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        `value`: TestQuery.Data.Hero,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        writer.name("name")
        NullableStringApolloAdapter.toJson(writer, value.name, context)

        writer.name("friendsConnection")
        FriendsConnection.obj().nullable().toJson(writer, value.friendsConnection, context)
      }

      private object FriendsConnection : ApolloAdapter<TestQuery.Data.Hero.FriendsConnection> {
        public val RESPONSE_NAMES: List<String> = listOf("totalCount")

        public override fun fromJson(reader: JsonReader,
            context: ApolloAdapter.DataDeserializeContext): TestQuery.Data.Hero.FriendsConnection {
          var _totalCount: Int? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _totalCount = NullableIntApolloAdapter.fromJson(reader, context)
              else -> break
            }
          }

          return TestQuery.Data.Hero.FriendsConnection(
            totalCount = _totalCount
          )
        }

        public override fun toJson(
          writer: JsonWriter,
          `value`: TestQuery.Data.Hero.FriendsConnection,
          context: ApolloAdapter.DataSerializeContext,
        ): Unit {
          writer.name("totalCount")
          NullableIntApolloAdapter.toJson(writer, value.totalCount, context)
        }
      }
    }
  }
}
