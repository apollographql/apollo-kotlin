//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_type_condition.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.fragments_with_type_condition.TestQuery
import com.example.fragments_with_type_condition.fragment.DroidDetails
import com.example.fragments_with_type_condition.fragment.HumanDetails
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : CompositeAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("r2", "luke")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Data {
      var _r2: TestQuery.Data.R2? = null
      var _luke: TestQuery.Data.Luke? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _r2 = R2.obj(true).nullable().deserializeComposite(reader, context)
          1 -> _luke = Luke.obj(true).nullable().deserializeComposite(reader, context)
          else -> break
        }
      }

      return TestQuery.Data(
        r2 = _r2,
        luke = _luke
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("r2")
      R2.obj(true).nullable().serializeComposite(writer, value.r2, context)

      writer.name("luke")
      Luke.obj(true).nullable().serializeComposite(writer, value.luke, context)
    }

    private object R2 : CompositeAdapter<TestQuery.Data.R2> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      public override fun deserializeComposite(reader: JsonReader,
          context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Data.R2 {
        var __typename: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _humanDetails: HumanDetails? = null
        if (possibleTypes("Human").evaluate(context.falseBooleanVariables, __typename, context, null)) {
          reader.rewind()
          _humanDetails = com.example.fragments_with_type_condition.fragment.HumanDetailsImpl_ResponseAdapter.HumanDetails.deserializeComposite(reader,
              context)
        }

        var _droidDetails: DroidDetails? = null
        if (possibleTypes("Droid").evaluate(context.falseBooleanVariables, __typename, context, null)) {
          reader.rewind()
          _droidDetails = com.example.fragments_with_type_condition.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.deserializeComposite(reader,
              context)
        }

        return TestQuery.Data.R2(
          __typename = __typename,
          humanDetails = _humanDetails,
          droidDetails = _droidDetails
        )
      }

      public override fun serializeComposite(
        writer: JsonWriter,
        `value`: TestQuery.Data.R2,
        context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        if (value.humanDetails != null) {
          com.example.fragments_with_type_condition.fragment.HumanDetailsImpl_ResponseAdapter.HumanDetails.serializeComposite(writer,
              value.humanDetails, context)
        }

        if (value.droidDetails != null) {
          com.example.fragments_with_type_condition.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.serializeComposite(writer,
              value.droidDetails, context)
        }
      }
    }

    private object Luke : CompositeAdapter<TestQuery.Data.Luke> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      public override fun deserializeComposite(reader: JsonReader,
          context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Data.Luke {
        var __typename: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _humanDetails: HumanDetails? = null
        if (possibleTypes("Human").evaluate(context.falseBooleanVariables, __typename, context, null)) {
          reader.rewind()
          _humanDetails = com.example.fragments_with_type_condition.fragment.HumanDetailsImpl_ResponseAdapter.HumanDetails.deserializeComposite(reader,
              context)
        }

        var _droidDetails: DroidDetails? = null
        if (possibleTypes("Droid").evaluate(context.falseBooleanVariables, __typename, context, null)) {
          reader.rewind()
          _droidDetails = com.example.fragments_with_type_condition.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.deserializeComposite(reader,
              context)
        }

        return TestQuery.Data.Luke(
          __typename = __typename,
          humanDetails = _humanDetails,
          droidDetails = _droidDetails
        )
      }

      public override fun serializeComposite(
        writer: JsonWriter,
        `value`: TestQuery.Data.Luke,
        context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        if (value.humanDetails != null) {
          com.example.fragments_with_type_condition.fragment.HumanDetailsImpl_ResponseAdapter.HumanDetails.serializeComposite(writer,
              value.humanDetails, context)
        }

        if (value.droidDetails != null) {
          com.example.fragments_with_type_condition.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.serializeComposite(writer,
              value.droidDetails, context)
        }
      }
    }
  }
}
