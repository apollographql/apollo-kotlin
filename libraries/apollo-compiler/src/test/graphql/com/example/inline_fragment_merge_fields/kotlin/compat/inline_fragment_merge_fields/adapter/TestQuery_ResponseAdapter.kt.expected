//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_merge_fields.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.inline_fragment_merge_fields.TestQuery
import kotlin.Any
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : Adapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Data {
      var _hero: TestQuery.Hero? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.Data(
        hero = _hero
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Data,
    ): Unit {
      writer.name("hero")
      Hero.obj().nullable().toJson(writer, customScalarAdapters, value.hero)
    }
  }

  public object Hero : Adapter<TestQuery.Hero> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection",
        "profileLink")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Hero {
      var __typename: String? = null
      var _name: String? = null
      var _friendsConnection: TestQuery.FriendsConnection? = null
      var _profileLink: Any? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
          3 -> _profileLink = AnyAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.Hero(
        __typename = __typename!!,
        name = _name!!,
        friendsConnection = _friendsConnection!!,
        profileLink = _profileLink!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Hero,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)

      writer.name("profileLink")
      AnyAdapter.toJson(writer, customScalarAdapters, value.profileLink)
    }
  }

  public object FriendsConnection : Adapter<TestQuery.FriendsConnection> {
    public val RESPONSE_NAMES: List<String> = listOf("edges")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.FriendsConnection {
      var _edges: List<TestQuery.Edge?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _edges = Edge.obj().nullable().list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.FriendsConnection(
        edges = _edges
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.FriendsConnection,
    ): Unit {
      writer.name("edges")
      Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
    }
  }

  public object Edge : Adapter<TestQuery.Edge> {
    public val RESPONSE_NAMES: List<String> = listOf("node")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Edge {
      var _node: TestQuery.Node? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.Edge(
        node = _node
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Edge,
    ): Unit {
      writer.name("node")
      Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
    }
  }

  public object Node : Adapter<TestQuery.Node> {
    public val RESPONSE_NAMES: List<String> = listOf("name")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Node {
      var _name: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.Node(
        name = _name!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TestQuery.Node,
    ): Unit {
      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)
    }
  }
}
