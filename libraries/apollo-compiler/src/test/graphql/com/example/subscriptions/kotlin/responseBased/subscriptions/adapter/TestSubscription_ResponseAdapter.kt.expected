//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.subscriptions.adapter

import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.IntDataAdapter
import com.apollographql.apollo3.api.StringDataAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.subscriptions.TestSubscription
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestSubscription_ResponseAdapter {
  public object Data : DataAdapter<TestSubscription.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("commentAdded")

    public override fun deserializeData(reader: JsonReader,
        context: DataAdapter.DeserializeDataContext): TestSubscription.Data {
      var _commentAdded: TestSubscription.Data.CommentAdded? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _commentAdded = CommentAdded.obj().nullable().deserializeData(reader, context)
          else -> break
        }
      }

      return TestSubscription.Data(
        commentAdded = _commentAdded
      )
    }

    public override fun serializeData(
      writer: JsonWriter,
      `value`: TestSubscription.Data,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("commentAdded")
      CommentAdded.obj().nullable().serializeData(writer, value.commentAdded, context)
    }

    private object CommentAdded : DataAdapter<TestSubscription.Data.CommentAdded> {
      public val RESPONSE_NAMES: List<String> = listOf("id", "content")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext): TestSubscription.Data.CommentAdded {
        var _id: Int? = null
        var _content: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _id = IntDataAdapter.deserializeData(reader, context)
            1 -> _content = StringDataAdapter.deserializeData(reader, context)
            else -> break
          }
        }

        return TestSubscription.Data.CommentAdded(
          id = _id!!,
          content = _content!!
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: TestSubscription.Data.CommentAdded,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("id")
        IntDataAdapter.serializeData(writer, value.id, context)

        writer.name("content")
        StringDataAdapter.serializeData(writer, value.content, context)
      }
    }
  }
}
