//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.subscriptions.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.subscriptions.TestSubscription
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestSubscription_ResponseAdapter {
  public object Data : CompositeAdapter<TestSubscription.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("commentAdded")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): TestSubscription.Data {
      var _commentAdded: TestSubscription.Data.CommentAdded? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _commentAdded = CommentAdded.obj().nullable().deserializeComposite(reader, context)
          else -> break
        }
      }

      return TestSubscription.Data(
        commentAdded = _commentAdded
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: TestSubscription.Data,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("commentAdded")
      CommentAdded.obj().nullable().serializeComposite(writer, value.commentAdded, context)
    }

    private object CommentAdded : CompositeAdapter<TestSubscription.Data.CommentAdded> {
      public val RESPONSE_NAMES: List<String> = listOf("id", "content")

      public override fun deserializeComposite(reader: JsonReader,
          context: CompositeAdapter.DeserializeCompositeContext):
          TestSubscription.Data.CommentAdded {
        var _id: Int? = null
        var _content: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _id = IntAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _content = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return TestSubscription.Data.CommentAdded(
          id = _id!!,
          content = _content!!
        )
      }

      public override fun serializeComposite(
        writer: JsonWriter,
        `value`: TestSubscription.Data.CommentAdded,
        context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("id")
        IntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.id)

        writer.name("content")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.content)
      }
    }
  }
}
