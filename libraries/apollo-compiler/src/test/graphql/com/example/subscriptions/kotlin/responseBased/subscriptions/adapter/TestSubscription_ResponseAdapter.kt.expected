//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.subscriptions.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.missingField
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.subscriptions.TestSubscription
import kotlin.Int
import kotlin.String
import kotlin.collections.List

public object TestSubscription_ResponseAdapter {
  public object Data : CompositeAdapter<TestSubscription.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("commentAdded")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        TestSubscription.Data {
      var _commentAdded: TestSubscription.Data.CommentAdded? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _commentAdded = CommentAdded.obj().nullable().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return TestSubscription.Data(
        commentAdded = _commentAdded
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: TestSubscription.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("commentAdded")
      CommentAdded.obj().nullable().toJson(writer, value.commentAdded, adapterContext)
    }

    private object CommentAdded : CompositeAdapter<TestSubscription.Data.CommentAdded> {
      public val RESPONSE_NAMES: List<String> = listOf("id", "content")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          TestSubscription.Data.CommentAdded {
        var _id: Int? = null
        var _content: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _id = IntAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _content = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return TestSubscription.Data.CommentAdded(
          id = _id ?: missingField(reader, "id"),
          content = _content ?: missingField(reader, "content")
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: TestSubscription.Data.CommentAdded,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("id")
        IntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.id)

        writer.name("content")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.content)
      }
    }
  }
}
