//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.subscriptions

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Subscription
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.subscriptions.adapter.TestSubscription_ResponseAdapter
import com.example.subscriptions.adapter.TestSubscription_VariablesAdapter
import com.example.subscriptions.selections.TestSubscriptionSelections
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import com.example.subscriptions.type.Subscription as CompiledSubscription

public data class TestSubscription(
  public val repo: String,
) : Subscription<TestSubscription.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    TestSubscription_VariablesAdapter.serializeVariables(writer, this, customScalarAdapters, withDefaultValues)
  }

  override fun adapter(): Adapter<Data> = TestSubscription_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledSubscription.type
  )
  .selections(selections = TestSubscriptionSelections.__root)
  .build()

  @ApolloAdaptableWith(TestSubscription_ResponseAdapter.Data::class)
  public data class Data(
    /**
     * Subscription fires on every comment added
     */
    public val commentAdded: CommentAdded?,
  ) : Subscription.Data {
    public data class CommentAdded(
      /**
       * The SQL ID of this entry
       */
      public val id: Int,
      /**
       * The text of the comment
       */
      public val content: String,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "f053ee1afe42260f1511e417b6133f1cb8507c185e2e7b4e1e579696dbc8f2af"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * subscription TestSubscription($repo: String!) {
     *   commentAdded(repoFullName: $repo) {
     *     id
     *     content
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "subscription TestSubscription(${'$'}repo: String!) { commentAdded(repoFullName: ${'$'}repo) { id content } }"

    public const val OPERATION_NAME: String = "TestSubscription"
  }
}
