//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.introspection_query.selections;

import com.apollographql.apollo.api.CompiledArgument;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CompiledListType;
import com.apollographql.apollo.api.CompiledNotNullType;
import com.apollographql.apollo.api.CompiledSelection;
import com.example.introspection_query.type.GraphQLString;
import com.example.introspection_query.type.Query;
import com.example.introspection_query.type.__Schema;
import com.example.introspection_query.type.__Type;
import com.example.introspection_query.type.__TypeKind;
import java.util.Arrays;
import java.util.List;

public class TestQuerySelections {
  private static List<CompiledSelection> __queryType = Arrays.asList(
    new CompiledField.Builder("name", GraphQLString.type).build()
  );

  private static List<CompiledSelection> __types = Arrays.asList(
    new CompiledField.Builder("name", GraphQLString.type).build()
  );

  private static List<CompiledSelection> ____schema = Arrays.asList(
    new CompiledField.Builder("queryType", new CompiledNotNullType(__Type.type)).selections(__queryType).build(),
    new CompiledField.Builder("types", new CompiledNotNullType(new CompiledListType(new CompiledNotNullType(__Type.type)))).selections(__types).build()
  );

  private static List<CompiledSelection> ____type = Arrays.asList(
    new CompiledField.Builder("name", GraphQLString.type).build(),
    new CompiledField.Builder("kind", new CompiledNotNullType(__TypeKind.type)).build()
  );

  public static List<CompiledSelection> __root = Arrays.asList(
    new CompiledField.Builder("__schema", new CompiledNotNullType(__Schema.type)).selections(____schema).build(),
    new CompiledField.Builder("__type", new CompiledNotNullType(__Type.type)).arguments(Arrays.asList(new CompiledArgument.Builder(Query.____type_name).value("Vehicle").build())).selections(____type).build()
  );
}
