//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.introspection_query

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.introspection_query.adapter.IntrospectionWithDeprecated_ResponseAdapter
import com.example.introspection_query.fragment.FullTypeWithDeprecated
import com.example.introspection_query.fragment.InputValue
import com.example.introspection_query.fragment.IntrospectionCommon
import com.example.introspection_query.selections.IntrospectionWithDeprecatedSelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class IntrospectionWithDeprecated() : Query<IntrospectionWithDeprecated.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> =
      IntrospectionWithDeprecated_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.introspection_query.type.Query.type
  )
  .selections(selections = IntrospectionWithDeprecatedSelections.__root)
  .build()

  @ApolloAdaptableWith(IntrospectionWithDeprecated_ResponseAdapter.Data::class)
  public data class Data(
    public val __schema: __Schema,
  ) : Query.Data {
    public data class __Schema(
      public val __typename: String,
      public val types: List<Type>,
      public val directives: List<Directive>,
      /**
       * Synthetic field for 'IntrospectionCommon'
       */
      public val introspectionCommon: IntrospectionCommon,
    ) {
      public data class Type(
        public val __typename: String,
        /**
         * Synthetic field for 'FullTypeWithDeprecated'
         */
        public val fullTypeWithDeprecated: FullTypeWithDeprecated,
      )

      public data class Directive(
        public val args: List<Arg>,
      ) {
        public data class Arg(
          public val __typename: String,
          /**
           * Synthetic field for 'InputValue'
           */
          public val inputValue: InputValue,
        )
      }
    }
  }

  public companion object {
    public const val OPERATION_ID: String =
        "e5bb39cc7367786487a19519a2406e5db078bf487fd9f04f9af07393b87c55d6"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query IntrospectionWithDeprecated {
     *   __schema {
     *     __typename
     *     ...IntrospectionCommon
     *     types {
     *       __typename
     *       ...FullTypeWithDeprecated
     *     }
     *     directives {
     *       args(includeDeprecated: true) {
     *         __typename
     *         ...InputValue
     *       }
     *     }
     *   }
     * }
     *
     * fragment IntrospectionCommon on __Schema {
     *   queryType {
     *     name
     *   }
     *   mutationType {
     *     name
     *   }
     *   subscriptionType {
     *     name
     *   }
     *   directives {
     *     name
     *     description
     *     isRepeatable
     *   }
     * }
     *
     * fragment TypeRef on __Type {
     *   kind
     *   name
     *   ofType {
     *     name
     *     ofType {
     *       name
     *       ofType {
     *         name
     *         ofType {
     *           name
     *           ofType {
     *             name
     *             ofType {
     *               name
     *               ofType {
     *                 name
     *               }
     *             }
     *           }
     *         }
     *       }
     *     }
     *   }
     * }
     *
     * fragment FullTypeCommon on __Type {
     *   name
     *   description
     *   fields(includeDeprecated: true) {
     *     name
     *     description
     *     type {
     *       __typename
     *       ...TypeRef
     *     }
     *     isDeprecated
     *     deprecationReason
     *   }
     *   interfaces {
     *     __typename
     *     ...TypeRef
     *   }
     *   enumValues(includeDeprecated: true) {
     *     name
     *     description
     *     isDeprecated
     *     deprecationReason
     *   }
     *   possibleTypes {
     *     __typename
     *     ...TypeRef
     *   }
     * }
     *
     * fragment InputValue on __InputValue {
     *   name
     *   description
     *   type {
     *     __typename
     *     ...TypeRef
     *   }
     *   defaultValue
     *   isDeprecated
     *   deprecationReason
     * }
     *
     * fragment FullTypeWithDeprecated on __Type {
     *   __typename
     *   ...FullTypeCommon
     *   fields(includeDeprecated: true) {
     *     args(includeDeprecated: true) {
     *       __typename
     *       ...InputValue
     *     }
     *   }
     *   inputFields(includeDeprecated: true) {
     *     __typename
     *     ...InputValue
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query IntrospectionWithDeprecated { __schema { __typename ...IntrospectionCommon types { __typename ...FullTypeWithDeprecated } directives { args(includeDeprecated: true) { __typename ...InputValue } } } }  fragment IntrospectionCommon on __Schema { queryType { name } mutationType { name } subscriptionType { name } directives { name description isRepeatable } }  fragment TypeRef on __Type { kind name ofType { name ofType { name ofType { name ofType { name ofType { name ofType { name ofType { name } } } } } } } }  fragment FullTypeCommon on __Type { name description fields(includeDeprecated: true) { name description type { __typename ...TypeRef } isDeprecated deprecationReason } interfaces { __typename ...TypeRef } enumValues(includeDeprecated: true) { name description isDeprecated deprecationReason } possibleTypes { __typename ...TypeRef } }  fragment InputValue on __InputValue { name description type { __typename ...TypeRef } defaultValue isDeprecated deprecationReason }  fragment FullTypeWithDeprecated on __Type { __typename ...FullTypeCommon fields(includeDeprecated: true) { args(includeDeprecated: true) { __typename ...InputValue } } inputFields(includeDeprecated: true) { __typename ...InputValue } }"

    public const val OPERATION_NAME: String = "IntrospectionWithDeprecated"
  }
}
