//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.introspection_query.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.example.introspection_query.IntrospectionWithDeprecated
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object IntrospectionWithDeprecated_ResponseAdapter {
  public object Data : Adapter<IntrospectionWithDeprecated.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("__schema")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        IntrospectionWithDeprecated.Data {
      var ___schema: IntrospectionWithDeprecated.Data.__Schema? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> ___schema = __Schema.obj(true).fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return IntrospectionWithDeprecated.Data(
        __schema = ___schema!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: IntrospectionWithDeprecated.Data,
    ): Unit {
      writer.name("__schema")
      __Schema.obj(true).toJson(writer, customScalarAdapters, value.__schema)
    }

    private object __Schema : Adapter<IntrospectionWithDeprecated.Data.__Schema> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "types", "directives")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          IntrospectionWithDeprecated.Data.__Schema {
        var __typename: String? = null
        var _types: List<IntrospectionWithDeprecated.Data.__Schema.Type>? = null
        var _directives: List<IntrospectionWithDeprecated.Data.__Schema.Directive>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> _types = Type.obj(true).list().fromJson(reader, customScalarAdapters)
            2 -> _directives = Directive.obj().list().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        reader.rewind()
        val _introspectionCommon = com.example.introspection_query.fragment.IntrospectionCommonImpl_ResponseAdapter.IntrospectionCommon.fromJson(reader,
            customScalarAdapters)

        return IntrospectionWithDeprecated.Data.__Schema(
          __typename = __typename!!,
          types = _types!!,
          directives = _directives!!,
          introspectionCommon = _introspectionCommon
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: IntrospectionWithDeprecated.Data.__Schema,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

        writer.name("types")
        Type.obj(true).list().toJson(writer, customScalarAdapters, value.types)

        writer.name("directives")
        Directive.obj().list().toJson(writer, customScalarAdapters, value.directives)

        com.example.introspection_query.fragment.IntrospectionCommonImpl_ResponseAdapter.IntrospectionCommon.toJson(writer,
            customScalarAdapters, value.introspectionCommon)
      }

      private object Type : Adapter<IntrospectionWithDeprecated.Data.__Schema.Type> {
        public val RESPONSE_NAMES: List<String> = listOf("__typename")

        public override fun fromJson(reader: JsonReader,
            customScalarAdapters: CustomScalarAdapters):
            IntrospectionWithDeprecated.Data.__Schema.Type {
          var __typename: String? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          reader.rewind()
          val _fullTypeWithDeprecated = com.example.introspection_query.fragment.FullTypeWithDeprecatedImpl_ResponseAdapter.FullTypeWithDeprecated.fromJson(reader,
              customScalarAdapters)

          return IntrospectionWithDeprecated.Data.__Schema.Type(
            __typename = __typename!!,
            fullTypeWithDeprecated = _fullTypeWithDeprecated
          )
        }

        public override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: IntrospectionWithDeprecated.Data.__Schema.Type,
        ): Unit {
          writer.name("__typename")
          StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

          com.example.introspection_query.fragment.FullTypeWithDeprecatedImpl_ResponseAdapter.FullTypeWithDeprecated.toJson(writer,
              customScalarAdapters, value.fullTypeWithDeprecated)
        }
      }

      private object Directive : Adapter<IntrospectionWithDeprecated.Data.__Schema.Directive> {
        public val RESPONSE_NAMES: List<String> = listOf("args")

        public override fun fromJson(reader: JsonReader,
            customScalarAdapters: CustomScalarAdapters):
            IntrospectionWithDeprecated.Data.__Schema.Directive {
          var _args: List<IntrospectionWithDeprecated.Data.__Schema.Directive.Arg>? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _args = Arg.obj(true).list().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return IntrospectionWithDeprecated.Data.__Schema.Directive(
            args = _args!!
          )
        }

        public override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: IntrospectionWithDeprecated.Data.__Schema.Directive,
        ): Unit {
          writer.name("args")
          Arg.obj(true).list().toJson(writer, customScalarAdapters, value.args)
        }

        private object Arg : Adapter<IntrospectionWithDeprecated.Data.__Schema.Directive.Arg> {
          public val RESPONSE_NAMES: List<String> = listOf("__typename")

          public override fun fromJson(reader: JsonReader,
              customScalarAdapters: CustomScalarAdapters):
              IntrospectionWithDeprecated.Data.__Schema.Directive.Arg {
            var __typename: String? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            reader.rewind()
            val _inputValue = com.example.introspection_query.fragment.InputValueImpl_ResponseAdapter.InputValue.fromJson(reader,
                customScalarAdapters)

            return IntrospectionWithDeprecated.Data.__Schema.Directive.Arg(
              __typename = __typename!!,
              inputValue = _inputValue
            )
          }

          public override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            `value`: IntrospectionWithDeprecated.Data.__Schema.Directive.Arg,
          ): Unit {
            writer.name("__typename")
            StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

            com.example.introspection_query.fragment.InputValueImpl_ResponseAdapter.InputValue.toJson(writer,
                customScalarAdapters, value.inputValue)
          }
        }
      }
    }
  }
}
