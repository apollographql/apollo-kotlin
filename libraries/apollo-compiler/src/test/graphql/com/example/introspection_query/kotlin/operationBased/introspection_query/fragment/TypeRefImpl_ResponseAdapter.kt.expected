//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.introspection_query.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.introspection_query.type.__TypeKind
import com.example.introspection_query.type.adapter.__TypeKind_ResponseAdapter
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TypeRefImpl_ResponseAdapter {
  public object TypeRef : Adapter<com.example.introspection_query.fragment.TypeRef> {
    public val RESPONSE_NAMES: List<String> = listOf("kind", "name", "ofType")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.introspection_query.fragment.TypeRef {
      var _kind: __TypeKind? = null
      var _name: String? = null
      var _ofType: com.example.introspection_query.fragment.TypeRef.OfType? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _kind = __TypeKind_ResponseAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _ofType = OfType.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.introspection_query.fragment.TypeRef(
        kind = _kind!!,
        name = _name,
        ofType = _ofType
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.introspection_query.fragment.TypeRef,
    ): Unit {
      writer.name("kind")
      __TypeKind_ResponseAdapter.toJson(writer, customScalarAdapters, value.kind)

      writer.name("name")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("ofType")
      OfType.obj().nullable().toJson(writer, customScalarAdapters, value.ofType)
    }

    private object OfType : Adapter<com.example.introspection_query.fragment.TypeRef.OfType> {
      public val RESPONSE_NAMES: List<String> = listOf("name", "ofType")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.introspection_query.fragment.TypeRef.OfType {
        var _name: String? = null
        var _ofType: com.example.introspection_query.fragment.TypeRef.OfType.OfType? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
            1 -> _ofType = OfType.obj().nullable().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.introspection_query.fragment.TypeRef.OfType(
          name = _name,
          ofType = _ofType
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.introspection_query.fragment.TypeRef.OfType,
      ): Unit {
        writer.name("name")
        NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)

        writer.name("ofType")
        OfType.obj().nullable().toJson(writer, customScalarAdapters, value.ofType)
      }

      private object OfType :
          Adapter<com.example.introspection_query.fragment.TypeRef.OfType.OfType> {
        public val RESPONSE_NAMES: List<String> = listOf("name", "ofType")

        public override fun fromJson(reader: JsonReader,
            customScalarAdapters: CustomScalarAdapters):
            com.example.introspection_query.fragment.TypeRef.OfType.OfType {
          var _name: String? = null
          var _ofType: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
              1 -> _ofType = OfType.obj().nullable().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return com.example.introspection_query.fragment.TypeRef.OfType.OfType(
            name = _name,
            ofType = _ofType
          )
        }

        public override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: com.example.introspection_query.fragment.TypeRef.OfType.OfType,
        ): Unit {
          writer.name("name")
          NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)

          writer.name("ofType")
          OfType.obj().nullable().toJson(writer, customScalarAdapters, value.ofType)
        }

        private object OfType :
            Adapter<com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType> {
          public val RESPONSE_NAMES: List<String> = listOf("name", "ofType")

          public override fun fromJson(reader: JsonReader,
              customScalarAdapters: CustomScalarAdapters):
              com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType {
            var _name: String? = null
            var _ofType: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
                1 -> _ofType = OfType.obj().nullable().fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType(
              name = _name,
              ofType = _ofType
            )
          }

          public override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            `value`: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType,
          ): Unit {
            writer.name("name")
            NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)

            writer.name("ofType")
            OfType.obj().nullable().toJson(writer, customScalarAdapters, value.ofType)
          }

          private object OfType :
              Adapter<com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType>
              {
            public val RESPONSE_NAMES: List<String> = listOf("name", "ofType")

            public override fun fromJson(reader: JsonReader,
                customScalarAdapters: CustomScalarAdapters):
                com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType {
              var _name: String? = null
              var _ofType: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType? = null

              while(true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
                  1 -> _ofType = OfType.obj().nullable().fromJson(reader, customScalarAdapters)
                  else -> break
                }
              }

              return com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType(
                name = _name,
                ofType = _ofType
              )
            }

            public override fun toJson(
              writer: JsonWriter,
              customScalarAdapters: CustomScalarAdapters,
              `value`: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType,
            ): Unit {
              writer.name("name")
              NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)

              writer.name("ofType")
              OfType.obj().nullable().toJson(writer, customScalarAdapters, value.ofType)
            }

            private object OfType :
                Adapter<com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType>
                {
              public val RESPONSE_NAMES: List<String> = listOf("name", "ofType")

              public override fun fromJson(reader: JsonReader,
                  customScalarAdapters: CustomScalarAdapters):
                  com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType {
                var _name: String? = null
                var _ofType: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType? = null

                while(true) {
                  when (reader.selectName(RESPONSE_NAMES)) {
                    0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
                    1 -> _ofType = OfType.obj().nullable().fromJson(reader, customScalarAdapters)
                    else -> break
                  }
                }

                return com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType(
                  name = _name,
                  ofType = _ofType
                )
              }

              public override fun toJson(
                writer: JsonWriter,
                customScalarAdapters: CustomScalarAdapters,
                `value`: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType,
              ): Unit {
                writer.name("name")
                NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)

                writer.name("ofType")
                OfType.obj().nullable().toJson(writer, customScalarAdapters, value.ofType)
              }

              private object OfType :
                  Adapter<com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType>
                  {
                public val RESPONSE_NAMES: List<String> = listOf("name", "ofType")

                public override fun fromJson(reader: JsonReader,
                    customScalarAdapters: CustomScalarAdapters):
                    com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType {
                  var _name: String? = null
                  var _ofType: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType.OfType? = null

                  while(true) {
                    when (reader.selectName(RESPONSE_NAMES)) {
                      0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
                      1 -> _ofType = OfType.obj().nullable().fromJson(reader, customScalarAdapters)
                      else -> break
                    }
                  }

                  return com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType(
                    name = _name,
                    ofType = _ofType
                  )
                }

                public override fun toJson(
                  writer: JsonWriter,
                  customScalarAdapters: CustomScalarAdapters,
                  `value`: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType,
                ): Unit {
                  writer.name("name")
                  NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)

                  writer.name("ofType")
                  OfType.obj().nullable().toJson(writer, customScalarAdapters, value.ofType)
                }

                private object OfType :
                    Adapter<com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType.OfType>
                    {
                  public val RESPONSE_NAMES: List<String> = listOf("name")

                  public override fun fromJson(reader: JsonReader,
                      customScalarAdapters: CustomScalarAdapters):
                      com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType.OfType {
                    var _name: String? = null

                    while(true) {
                      when (reader.selectName(RESPONSE_NAMES)) {
                        0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
                        else -> break
                      }
                    }

                    return com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType.OfType(
                      name = _name
                    )
                  }

                  public override fun toJson(
                    writer: JsonWriter,
                    customScalarAdapters: CustomScalarAdapters,
                    `value`: com.example.introspection_query.fragment.TypeRef.OfType.OfType.OfType.OfType.OfType.OfType.OfType,
                  ): Unit {
                    writer.name("name")
                    NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
