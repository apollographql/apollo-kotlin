//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.introspection_query.fragment.selections

import com.apollographql.apollo3.api.CompiledDirectiveType
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledTypeType
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.example.introspection_query.type.GraphQLBoolean
import com.example.introspection_query.type.GraphQLString
import kotlin.collections.List

public object IntrospectionCommonSelections {
  private val __queryType: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type
        ).build()
      )

  private val __mutationType: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type
        ).build()
      )

  private val __subscriptionType: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type
        ).build()
      )

  private val __directives: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "description",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "isRepeatable",
          type = GraphQLBoolean.type.notNull()
        ).build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "queryType",
          type = CompiledTypeType.notNull()
        ).selections(__queryType)
        .build(),
        CompiledField.Builder(
          name = "mutationType",
          type = CompiledTypeType
        ).selections(__mutationType)
        .build(),
        CompiledField.Builder(
          name = "subscriptionType",
          type = CompiledTypeType
        ).selections(__subscriptionType)
        .build(),
        CompiledField.Builder(
          name = "directives",
          type = CompiledDirectiveType.notNull().list().notNull()
        ).selections(__directives)
        .build()
      )
}
