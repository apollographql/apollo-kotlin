//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.introspection_query.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Boolean
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object IntrospectionCommonImpl_ResponseAdapter {
  public object IntrospectionCommon :
      Adapter<com.example.introspection_query.fragment.IntrospectionCommon> {
    public val RESPONSE_NAMES: List<String> = listOf("queryType", "mutationType",
        "subscriptionType", "directives")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.introspection_query.fragment.IntrospectionCommon {
      var _queryType: com.example.introspection_query.fragment.IntrospectionCommon.QueryType? = null
      var _mutationType: com.example.introspection_query.fragment.IntrospectionCommon.MutationType? = null
      var _subscriptionType: com.example.introspection_query.fragment.IntrospectionCommon.SubscriptionType? = null
      var _directives: List<com.example.introspection_query.fragment.IntrospectionCommon.Directive>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _queryType = QueryType.obj().fromJson(reader, customScalarAdapters)
          1 -> _mutationType = MutationType.obj().nullable().fromJson(reader, customScalarAdapters)
          2 -> _subscriptionType = SubscriptionType.obj().nullable().fromJson(reader,
              customScalarAdapters)
          3 -> _directives = Directive.obj().list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.introspection_query.fragment.IntrospectionCommon(
        queryType = _queryType!!,
        mutationType = _mutationType,
        subscriptionType = _subscriptionType,
        directives = _directives!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.introspection_query.fragment.IntrospectionCommon,
    ): Unit {
      writer.name("queryType")
      QueryType.obj().toJson(writer, customScalarAdapters, value.queryType)

      writer.name("mutationType")
      MutationType.obj().nullable().toJson(writer, customScalarAdapters, value.mutationType)

      writer.name("subscriptionType")
      SubscriptionType.obj().nullable().toJson(writer, customScalarAdapters, value.subscriptionType)

      writer.name("directives")
      Directive.obj().list().toJson(writer, customScalarAdapters, value.directives)
    }

    private object QueryType :
        Adapter<com.example.introspection_query.fragment.IntrospectionCommon.QueryType> {
      public val RESPONSE_NAMES: List<String> = listOf("name")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.introspection_query.fragment.IntrospectionCommon.QueryType {
        var _name: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.introspection_query.fragment.IntrospectionCommon.QueryType(
          name = _name
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.introspection_query.fragment.IntrospectionCommon.QueryType,
      ): Unit {
        writer.name("name")
        NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)
      }
    }

    private object MutationType :
        Adapter<com.example.introspection_query.fragment.IntrospectionCommon.MutationType> {
      public val RESPONSE_NAMES: List<String> = listOf("name")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.introspection_query.fragment.IntrospectionCommon.MutationType {
        var _name: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.introspection_query.fragment.IntrospectionCommon.MutationType(
          name = _name
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.introspection_query.fragment.IntrospectionCommon.MutationType,
      ): Unit {
        writer.name("name")
        NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)
      }
    }

    private object SubscriptionType :
        Adapter<com.example.introspection_query.fragment.IntrospectionCommon.SubscriptionType> {
      public val RESPONSE_NAMES: List<String> = listOf("name")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.introspection_query.fragment.IntrospectionCommon.SubscriptionType {
        var _name: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.introspection_query.fragment.IntrospectionCommon.SubscriptionType(
          name = _name
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.introspection_query.fragment.IntrospectionCommon.SubscriptionType,
      ): Unit {
        writer.name("name")
        NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)
      }
    }

    private object Directive :
        Adapter<com.example.introspection_query.fragment.IntrospectionCommon.Directive> {
      public val RESPONSE_NAMES: List<String> = listOf("name", "description", "isRepeatable")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.introspection_query.fragment.IntrospectionCommon.Directive {
        var _name: String? = null
        var _description: String? = null
        var _isRepeatable: Boolean? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> _description = NullableStringAdapter.fromJson(reader, customScalarAdapters)
            2 -> _isRepeatable = BooleanAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.introspection_query.fragment.IntrospectionCommon.Directive(
          name = _name!!,
          description = _description,
          isRepeatable = _isRepeatable!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.introspection_query.fragment.IntrospectionCommon.Directive,
      ): Unit {
        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)

        writer.name("description")
        NullableStringAdapter.toJson(writer, customScalarAdapters, value.description)

        writer.name("isRepeatable")
        BooleanAdapter.toJson(writer, customScalarAdapters, value.isRepeatable)
      }
    }
  }
}
