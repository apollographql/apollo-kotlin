//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.introspection_query

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.introspection_query.adapter.TestQuery_ResponseAdapter
import com.example.introspection_query.selections.TestQuerySelections
import com.example.introspection_query.type.__TypeKind
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.List
import com.example.introspection_query.type.Query as CompiledQuery

public class TestQuery() : Query<TestQuery.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val __schema: __Schema,
    public val __type: __Type,
  ) : Query.Data {
    public data class __Schema(
      public val queryType: QueryType,
      public val types: List<Type>,
    ) {
      public data class QueryType(
        public val name: String?,
      )

      public data class Type(
        public val name: String?,
      )
    }

    public data class __Type(
      public val name: String?,
      public val kind: __TypeKind,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "2bf29cc74f10b0b5551a609396f4e489fc4ebce15c0504cdd102be8447976b97"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery {
     *   __schema {
     *     queryType {
     *       name
     *     }
     *     types {
     *       name
     *     }
     *   }
     *   __type(name: "Vehicle") {
     *     name
     *     kind
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery { __schema { queryType { name } types { name } } __type(name: \"Vehicle\") { name kind } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
