//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.test_inline.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.test_inline.GetPage
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetPage_ResponseAdapter {
  public object Data : CompositeAdapter<GetPage.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("collection")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): GetPage.Data {
      var _collection: GetPage.Data.Collection? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _collection = Collection.obj(true).deserializeComposite(reader, context)
          else -> break
        }
      }

      return GetPage.Data(
        collection = _collection!!
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: GetPage.Data,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("collection")
      Collection.obj(true).serializeComposite(writer, value.collection, context)
    }

    private object Collection : CompositeAdapter<GetPage.Data.Collection> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "items")

      public override fun deserializeComposite(reader: JsonReader,
          context: CompositeAdapter.DeserializeCompositeContext): GetPage.Data.Collection {
        var __typename: String? = null
        var _items: List<GetPage.Data.Collection.Item>? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _items = Item.obj().list().deserializeComposite(reader, context)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _onParticularCollection: GetPage.Data.Collection.OnParticularCollection? = null
        if (possibleTypes("ParticularCollection").evaluate(context.falseBooleanVariables, __typename, context, null)) {
          reader.rewind()
          _onParticularCollection = com.example.test_inline.adapter.GetPage_ResponseAdapter.Data.Collection.OnParticularCollection.deserializeComposite(reader,
              context)
        }

        return GetPage.Data.Collection(
          __typename = __typename,
          items = _items!!,
          onParticularCollection = _onParticularCollection
        )
      }

      public override fun serializeComposite(
        writer: JsonWriter,
        `value`: GetPage.Data.Collection,
        context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        writer.name("items")
        Item.obj().list().serializeComposite(writer, value.items, context)

        if (value.onParticularCollection != null) {
          com.example.test_inline.adapter.GetPage_ResponseAdapter.Data.Collection.OnParticularCollection.serializeComposite(writer,
              value.onParticularCollection, context)
        }
      }

      private object Item : CompositeAdapter<GetPage.Data.Collection.Item> {
        public val RESPONSE_NAMES: List<String> = listOf("title")

        public override fun deserializeComposite(reader: JsonReader,
            context: CompositeAdapter.DeserializeCompositeContext): GetPage.Data.Collection.Item {
          var _title: String? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _title = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
              else -> break
            }
          }

          return GetPage.Data.Collection.Item(
            title = _title!!
          )
        }

        public override fun serializeComposite(
          writer: JsonWriter,
          `value`: GetPage.Data.Collection.Item,
          context: CompositeAdapter.SerializeCompositeContext,
        ): Unit {
          writer.name("title")
          StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.title)
        }
      }

      private object OnParticularCollection :
          CompositeAdapter<GetPage.Data.Collection.OnParticularCollection> {
        public val RESPONSE_NAMES: List<String> = listOf("items")

        public override fun deserializeComposite(reader: JsonReader,
            context: CompositeAdapter.DeserializeCompositeContext):
            GetPage.Data.Collection.OnParticularCollection {
          var _items: List<GetPage.Data.Collection.OnParticularCollection.Item>? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _items = Item.obj(true).list().deserializeComposite(reader, context)
              else -> break
            }
          }

          return GetPage.Data.Collection.OnParticularCollection(
            items = _items!!
          )
        }

        public override fun serializeComposite(
          writer: JsonWriter,
          `value`: GetPage.Data.Collection.OnParticularCollection,
          context: CompositeAdapter.SerializeCompositeContext,
        ): Unit {
          writer.name("items")
          Item.obj(true).list().serializeComposite(writer, value.items, context)
        }

        private object Item : CompositeAdapter<GetPage.Data.Collection.OnParticularCollection.Item>
            {
          public val RESPONSE_NAMES: List<String> = listOf("__typename")

          public override fun deserializeComposite(reader: JsonReader,
              context: CompositeAdapter.DeserializeCompositeContext):
              GetPage.Data.Collection.OnParticularCollection.Item {
            var __typename: String? = null

            while (true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
                else -> break
              }
            }

            check(__typename != null) {
              "__typename was not found"
            }

            var _onParticularItem: GetPage.Data.Collection.OnParticularCollection.Item.OnParticularItem? = null
            if (possibleTypes("ParticularItem").evaluate(context.falseBooleanVariables, __typename, context, null)) {
              reader.rewind()
              _onParticularItem = com.example.test_inline.adapter.GetPage_ResponseAdapter.Data.Collection.OnParticularCollection.Item.OnParticularItem.deserializeComposite(reader,
                  context)
            }

            return GetPage.Data.Collection.OnParticularCollection.Item(
              __typename = __typename,
              onParticularItem = _onParticularItem
            )
          }

          public override fun serializeComposite(
            writer: JsonWriter,
            `value`: GetPage.Data.Collection.OnParticularCollection.Item,
            context: CompositeAdapter.SerializeCompositeContext,
          ): Unit {
            writer.name("__typename")
            StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

            if (value.onParticularItem != null) {
              com.example.test_inline.adapter.GetPage_ResponseAdapter.Data.Collection.OnParticularCollection.Item.OnParticularItem.serializeComposite(writer,
                  value.onParticularItem, context)
            }
          }

          private object OnParticularItem :
              CompositeAdapter<GetPage.Data.Collection.OnParticularCollection.Item.OnParticularItem>
              {
            public val RESPONSE_NAMES: List<String> = listOf("image")

            public override fun deserializeComposite(reader: JsonReader,
                context: CompositeAdapter.DeserializeCompositeContext):
                GetPage.Data.Collection.OnParticularCollection.Item.OnParticularItem {
              var _image: String? = null

              while (true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> _image = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
                  else -> break
                }
              }

              return GetPage.Data.Collection.OnParticularCollection.Item.OnParticularItem(
                image = _image!!
              )
            }

            public override fun serializeComposite(
              writer: JsonWriter,
              `value`: GetPage.Data.Collection.OnParticularCollection.Item.OnParticularItem,
              context: CompositeAdapter.SerializeCompositeContext,
            ): Unit {
              writer.name("image")
              StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.image)
            }
          }
        }
      }
    }
  }
}
