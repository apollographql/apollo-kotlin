//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.hero_with_review.adapter;

import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.NullableDataAdapter;
import com.apollographql.apollo3.api.ObjectDataAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.hero_with_review.TestQuery;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements DataAdapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("createReview");

    @Override
    public TestQuery.Data deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      TestQuery.CreateReview _createReview = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _createReview = new NullableDataAdapter<>(new ObjectDataAdapter<TestQuery.CreateReview>(CreateReview.INSTANCE, false)).deserializeData(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _createReview
      );
    }

    @Override
    public void serializeData(JsonWriter writer, TestQuery.Data value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("createReview");
      new NullableDataAdapter<>(new ObjectDataAdapter<TestQuery.CreateReview>(CreateReview.INSTANCE, false)).serializeData(writer, value.createReview, context);
    }
  }

  public enum CreateReview implements DataAdapter<TestQuery.CreateReview> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("stars", "commentary");

    @Override
    public TestQuery.CreateReview deserializeData(JsonReader reader,
        DataAdapter.DeserializeDataContext context) throws IOException {
      Integer _stars = null;
      String _commentary = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _stars = DataAdapters.IntDataAdapter.deserializeData(reader, context); break;
          case 1: _commentary = DataAdapters.NullableStringDataAdapter.deserializeData(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_stars, "stars");

      return new TestQuery.CreateReview(
        _stars,
        _commentary
      );
    }

    @Override
    public void serializeData(JsonWriter writer, TestQuery.CreateReview value,
        DataAdapter.SerializeDataContext context) throws IOException {
      writer.name("stars");
      DataAdapters.IntDataAdapter.serializeData(writer, value.stars, context);

      writer.name("commentary");
      DataAdapters.NullableStringDataAdapter.serializeData(writer, value.commentary, context);
    }
  }
}
