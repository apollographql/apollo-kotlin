//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.hero_with_review.adapter

import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.hero_with_review.TestQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : DataAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("createReview")

    public override fun deserializeData(reader: JsonReader,
        context: DataAdapter.DeserializeDataContext): TestQuery.Data {
      var _createReview: TestQuery.Data.CreateReview? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _createReview = CreateReview.obj().nullable().deserializeData(reader, context)
          else -> break
        }
      }

      return TestQuery.Data(
        createReview = _createReview
      )
    }

    public override fun serializeData(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("createReview")
      CreateReview.obj().nullable().serializeData(writer, value.createReview, context)
    }

    private object CreateReview : DataAdapter<TestQuery.Data.CreateReview> {
      public val RESPONSE_NAMES: List<String> = listOf("stars", "commentary")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext): TestQuery.Data.CreateReview {
        var _stars: Int? = null
        var _commentary: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _stars = IntAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _commentary = NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return TestQuery.Data.CreateReview(
          stars = _stars!!,
          commentary = _commentary
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: TestQuery.Data.CreateReview,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("stars")
        IntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.stars)

        writer.name("commentary")
        NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.commentary)
      }
    }
  }
}
