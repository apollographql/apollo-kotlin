//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.hero_with_review

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Mutation
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.hero_with_review.adapter.TestQuery_ResponseAdapter
import com.example.hero_with_review.adapter.TestQuery_VariablesAdapter
import com.example.hero_with_review.selections.TestQuerySelections
import com.example.hero_with_review.type.Episode
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import com.example.hero_with_review.type.Mutation as CompiledMutation

public data class TestQuery(
  public val ep: Episode,
) : Mutation<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    TestQuery_VariablesAdapter.serializeVariables(writer, this, customScalarAdapters, withDefaultValues)
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledMutation.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val createReview: CreateReview?,
  ) : Mutation.Data {
    public data class CreateReview(
      /**
       * The number of stars this review gave, 1-5
       */
      public val stars: Int,
      /**
       * Comment about the movie
       */
      public val commentary: String?,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "1faa220c7551ff1343a9bce722af8c12b87c70cc579f743aff1374ae1066f163"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * mutation TestQuery($ep: Episode!) {
     *   createReview(episode: $ep, review: {
     *     stars: 5
     *     listOfEnums: [JEDI,EMPIRE,NEWHOPE]
     *     listOfStringNonOptional: ["1","2","3"]
     *     favoriteColor: {
     *       red: 1
     *       blue: 1
     *     }
     *
     *   }
     *   ) {
     *     stars
     *     commentary
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "mutation TestQuery(${'$'}ep: Episode!) { createReview(episode: ${'$'}ep, review: { stars: 5 listOfEnums: [JEDI,EMPIRE,NEWHOPE] listOfStringNonOptional: [\"1\",\"2\",\"3\"] favoriteColor: { red: 1 blue: 1 }  } ) { stars commentary } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
