//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.operationbased2_ex7

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.operationbased2_ex7.adapter.TestOperation_ResponseAdapter
import com.example.operationbased2_ex7.selections.TestOperationSelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import com.example.operationbased2_ex7.type.Query as CompiledQuery

public class TestOperation() : Query<TestOperation.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = TestOperation_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestOperationSelections.__root)
  .build()

  @ApolloAdaptableWith(TestOperation_ResponseAdapter.Data::class)
  public data class Data(
    public val animal: Animal?,
  ) : Query.Data {
    public data class Animal(
      public val __typename: String,
      /**
       * Synthetic field for inline fragment on Animal
       */
      public val onAnimal: OnAnimal,
    ) {
      public data class OnAnimal(
        public val __typename: String,
        public val species: String,
        /**
         * Synthetic field for inline fragment on WarmBlooded
         */
        public val onWarmBlooded: OnWarmBlooded?,
        /**
         * Synthetic field for inline fragment on Pet
         */
        public val onPet: OnPet?,
      ) {
        public data class OnWarmBlooded(
          public val temperature: Int,
        )

        public data class OnPet(
          public val name: String,
        )
      }
    }
  }

  public companion object {
    public const val OPERATION_ID: String =
        "7c26d34de71f3eedeb320747cb70ac07275fe2125d55c13a42be40e966f092e2"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestOperation {
     *   animal {
     *     __typename
     *     ... on Animal {
     *       __typename
     *       species
     *       ... on WarmBlooded {
     *         temperature
     *       }
     *       ... on Pet {
     *         name
     *       }
     *     }
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestOperation { animal { __typename ... on Animal { __typename species ... on WarmBlooded { temperature } ... on Pet { name } } } }"

    public const val OPERATION_NAME: String = "TestOperation"
  }
}
