//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.simple_union.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.simple_union.AnimalQuery
import com.example.simple_union.fragment.CatFragment
import com.example.simple_union.fragment.DogFragment
import kotlin.String
import kotlin.collections.List

public object AnimalQuery_ResponseAdapter {
  public object Data : CompositeAdapter<AnimalQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("animal")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        AnimalQuery.Data {
      var _animal: AnimalQuery.Data.Animal? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _animal = Animal.obj(true).nullable().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return AnimalQuery.Data(
        animal = _animal
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: AnimalQuery.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("animal")
      Animal.obj(true).nullable().toJson(writer, value.animal, adapterContext)
    }

    private object Animal : CompositeAdapter<AnimalQuery.Data.Animal> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          AnimalQuery.Data.Animal {
        var __typename: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _catFragment: CatFragment? = null
        if (possibleTypes("Cat").evaluate(adapterContext.falseVariables, __typename, adapterContext.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _catFragment = com.example.simple_union.fragment.CatFragmentImpl_ResponseAdapter.CatFragment.fromJson(reader,
              adapterContext)
        }

        var _dogFragment: DogFragment? = null
        if (possibleTypes("Dog").evaluate(adapterContext.falseVariables, __typename, adapterContext.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _dogFragment = com.example.simple_union.fragment.DogFragmentImpl_ResponseAdapter.DogFragment.fromJson(reader,
              adapterContext)
        }

        return AnimalQuery.Data.Animal(
          __typename = __typename,
          catFragment = _catFragment,
          dogFragment = _dogFragment
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: AnimalQuery.Data.Animal,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        if (value.catFragment != null) {
          com.example.simple_union.fragment.CatFragmentImpl_ResponseAdapter.CatFragment.toJson(writer,
              value.catFragment, adapterContext)
        }

        if (value.dogFragment != null) {
          com.example.simple_union.fragment.DogFragmentImpl_ResponseAdapter.DogFragment.toJson(writer,
              value.dogFragment, adapterContext)
        }
      }
    }
  }
}
