//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.target_name

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Optional
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.target_name.adapter.TestQuery_ResponseAdapter
import com.example.target_name.adapter.TestQuery_VariablesAdapter
import com.example.target_name.selections.TestQuerySelections
import com.example.target_name.type.RenamedEnum
import com.example.target_name.type.RenamedInput
import kotlin.Any
import kotlin.Boolean
import kotlin.String
import com.example.target_name.type.Query as CompiledQuery

public data class TestQuery(
  public val input: Optional<RenamedInput?> = Optional.Absent,
  public val scalar: Optional<Any?> = Optional.Absent,
  public val `enum`: Optional<RenamedEnum?> = Optional.Absent,
) : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    TestQuery_VariablesAdapter.serializeVariables(writer, this, customScalarAdapters, withDefaultValues)
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val `object`: Object?,
    public val `interface`: Interface?,
    public val union: Union?,
    public val scalar: Any?,
    public val `enum`: RenamedEnum?,
  ) : Query.Data {
    public data class Object(
      public val `field`: String?,
    )

    public data class Interface(
      public val `field`: String?,
    )

    public data class Union(
      public val __typename: String,
      /**
       * Synthetic field for inline fragment on ReservedObject
       */
      public val onReservedObject: OnReservedObject?,
    ) {
      public data class OnReservedObject(
        public val `field`: String?,
      )
    }
  }

  public companion object {
    public const val OPERATION_ID: String =
        "42f2acf77ef3db730fa970cbbba1ca04133fcea023d8355d4eb0c27ebe51e30f"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery($input: ReservedInput, $scalar: ReservedScalar, $enum: ReservedEnum) {
     *   object(input: $input) {
     *     field
     *   }
     *   interface {
     *     field
     *   }
     *   union {
     *     __typename
     *     ... on ReservedObject {
     *       field
     *     }
     *   }
     *   scalar(scalar: $scalar)
     *   enum(enum: $enum)
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery(${'$'}input: ReservedInput, ${'$'}scalar: ReservedScalar, ${'$'}enum: ReservedEnum) { object(input: ${'$'}input) { field } interface { field } union { __typename ... on ReservedObject { field } } scalar(scalar: ${'$'}scalar) enum(enum: ${'$'}enum) }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
