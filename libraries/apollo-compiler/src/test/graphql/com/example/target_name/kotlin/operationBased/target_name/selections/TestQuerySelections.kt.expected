//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.target_name.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.notNull
import com.example.target_name.type.GraphQLString
import com.example.target_name.type.renamedEnum
import com.example.target_name.type.renamedInterface
import com.example.target_name.type.renamedObject
import com.example.target_name.type.renamedScalar
import com.example.target_name.type.renamedUnion
import kotlin.collections.List

public object TestQuerySelections {
  private val __object: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "field",
          type = GraphQLString.type
        ).build()
      )

  private val __interface: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "field",
          type = GraphQLString.type
        ).build()
      )

  private val __onReservedObject: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "field",
          type = GraphQLString.type
        ).build()
      )

  private val __union: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "ReservedObject",
          possibleTypes = listOf("ReservedObject")
        ).selections(__onReservedObject)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "object",
          type = renamedObject.type
        ).arguments(listOf(
          CompiledArgument.Builder("input", CompiledVariable("input")).build()
        ))
        .selections(__object)
        .build(),
        CompiledField.Builder(
          name = "interface",
          type = renamedInterface.type
        ).selections(__interface)
        .build(),
        CompiledField.Builder(
          name = "union",
          type = renamedUnion.type
        ).selections(__union)
        .build(),
        CompiledField.Builder(
          name = "scalar",
          type = renamedScalar.type
        ).arguments(listOf(
          CompiledArgument.Builder("scalar", CompiledVariable("scalar")).build()
        ))
        .build(),
        CompiledField.Builder(
          name = "enum",
          type = renamedEnum.type
        ).arguments(listOf(
          CompiledArgument.Builder("enum", CompiledVariable("enum")).build()
        ))
        .build()
      )
}
