//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.target_name.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CompositeAdapterContext;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.NullableCompositeAdapter;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.target_name.TestQuery;
import com.example.target_name.type.adapter.renamedEnum_ResponseAdapter;
import com.example.target_name.type.renamedEnum;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements CompositeAdapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("object", "interface", "union", "scalar", "enum");

    @Override
    public TestQuery.Data fromJson(JsonReader reader, CompositeAdapterContext adapterContext) throws
        IOException {
      TestQuery.Object _object = null;
      TestQuery.Interface _interface = null;
      TestQuery.Union _union = null;
      java.lang.Object _scalar = null;
      renamedEnum _enum = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _object = new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Object>(Object.INSTANCE, false)).fromJson(reader, adapterContext); break;
          case 1: _interface = new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Interface>(Interface.INSTANCE, false)).fromJson(reader, adapterContext); break;
          case 2: _union = new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Union>(Union.INSTANCE, true)).fromJson(reader, adapterContext); break;
          case 3: _scalar = Adapters.NullableAnyAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 4: _enum = new NullableAdapter<>(renamedEnum_ResponseAdapter.INSTANCE).fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _object,
        _interface,
        _union,
        _scalar,
        _enum
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.Data value,
        CompositeAdapterContext adapterContext) throws IOException {
      writer.name("object");
      new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Object>(Object.INSTANCE, false)).toJson(writer, value.object, adapterContext);

      writer.name("interface");
      new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Interface>(Interface.INSTANCE, false)).toJson(writer, value.interface_, adapterContext);

      writer.name("union");
      new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Union>(Union.INSTANCE, true)).toJson(writer, value.union, adapterContext);

      writer.name("scalar");
      Adapters.NullableAnyAdapter.toJson(writer, CustomScalarAdapters.Empty, value.scalar);

      writer.name("enum");
      new NullableAdapter<>(renamedEnum_ResponseAdapter.INSTANCE).toJson(writer, CustomScalarAdapters.Empty, value.enum_);
    }
  }

  public enum Object implements CompositeAdapter<TestQuery.Object> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("field");

    @Override
    public TestQuery.Object fromJson(JsonReader reader, CompositeAdapterContext adapterContext)
        throws IOException {
      String _field = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _field = Adapters.NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      return new TestQuery.Object(
        _field
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.Object value,
        CompositeAdapterContext adapterContext) throws IOException {
      writer.name("field");
      Adapters.NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.field);
    }
  }

  public enum Interface implements CompositeAdapter<TestQuery.Interface> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("field");

    @Override
    public TestQuery.Interface fromJson(JsonReader reader, CompositeAdapterContext adapterContext)
        throws IOException {
      String _field = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _field = Adapters.NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      return new TestQuery.Interface(
        _field
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.Interface value,
        CompositeAdapterContext adapterContext) throws IOException {
      writer.name("field");
      Adapters.NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.field);
    }
  }

  public enum Union implements CompositeAdapter<TestQuery.Union> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public TestQuery.Union fromJson(JsonReader reader, CompositeAdapterContext adapterContext)
        throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      TestQuery.OnReservedObject _onReservedObject = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("ReservedObject")), adapterContext.falseVariables, __typename, adapterContext.deferredFragmentIdentifiers, null)) {
        reader.rewind();
        _onReservedObject = com.example.target_name.adapter.TestQuery_ResponseAdapter.OnReservedObject.INSTANCE.fromJson(reader, adapterContext);
      }

      return new TestQuery.Union(
        __typename,
        _onReservedObject
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.Union value,
        CompositeAdapterContext adapterContext) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      if (value.onReservedObject != null) {
        com.example.target_name.adapter.TestQuery_ResponseAdapter.OnReservedObject.INSTANCE.toJson(writer, value.onReservedObject, adapterContext);
      }
    }
  }

  public enum OnReservedObject implements CompositeAdapter<TestQuery.OnReservedObject> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("field");

    @Override
    public TestQuery.OnReservedObject fromJson(JsonReader reader,
        CompositeAdapterContext adapterContext) throws IOException {
      String _field = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _field = Adapters.NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      return new TestQuery.OnReservedObject(
        _field
      );
    }

    @Override
    public void toJson(JsonWriter writer, TestQuery.OnReservedObject value,
        CompositeAdapterContext adapterContext) throws IOException {
      writer.name("field");
      Adapters.NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.field);
    }
  }
}
