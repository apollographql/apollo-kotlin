//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.target_name.adapter;

import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.ApolloOptionalAdapter;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.NullableAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.Optional;
import com.apollographql.apollo.api.json.JsonWriter;
import com.example.target_name.TestQuery;
import com.example.target_name.type.RenamedInput;
import com.example.target_name.type.adapter.RenamedEnum_ResponseAdapter;
import com.example.target_name.type.adapter.RenamedInput_InputAdapter;
import java.io.IOException;

public enum TestQuery_VariablesAdapter {
  INSTANCE;

  public void serializeVariables(JsonWriter writer, TestQuery value,
      CustomScalarAdapters customScalarAdapters, boolean withDefaultValues) throws IOException {
    if (value.input instanceof Optional.Present) {
      writer.name("input");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ObjectAdapter<RenamedInput>(RenamedInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.input);
    }
    if (value.scalar instanceof Optional.Present) {
      writer.name("scalar");
      new ApolloOptionalAdapter<>(Adapters.NullableAnyAdapter).toJson(writer, customScalarAdapters, value.scalar);
    }
    if (value.enum_ instanceof Optional.Present) {
      writer.name("enum");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(RenamedEnum_ResponseAdapter.INSTANCE)).toJson(writer, customScalarAdapters, value.enum_);
    }
  }
}
