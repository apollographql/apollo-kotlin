//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.target_name.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.target_name.TestQuery;
import com.example.target_name.type.adapter.renamedEnum_ResponseAdapter;
import com.example.target_name.type.adapter.renamedInput_InputAdapter;
import com.example.target_name.type.renamedInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum TestQuery_VariablesAdapter implements Adapter<TestQuery> {
  INSTANCE;

  @Override
  public TestQuery fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters) throws
      IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters, TestQuery value)
      throws IOException {
    if (value.input instanceof Optional.Present) {
      writer.name("input");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ObjectAdapter<renamedInput>(renamedInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.input);
    }
    if (value.scalar instanceof Optional.Present) {
      writer.name("scalar");
      new ApolloOptionalAdapter<>(Adapters.NullableAnyAdapter).toJson(writer, customScalarAdapters, value.scalar);
    }
    if (value.enum_ instanceof Optional.Present) {
      writer.name("enum");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(renamedEnum_ResponseAdapter.INSTANCE)).toJson(writer, customScalarAdapters, value.enum_);
    }
  }
}
