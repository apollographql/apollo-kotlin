//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.target_name.adapter;

import com.apollographql.apollo3.api.ApolloOptionalDataAdapter;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.NullableDataAdapter;
import com.apollographql.apollo3.api.ObjectDataAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.VariablesAdapter;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.target_name.TestQuery;
import com.example.target_name.type.adapter.renamedEnum_ResponseAdapter;
import com.example.target_name.type.adapter.renamedInput_InputAdapter;
import com.example.target_name.type.renamedInput;
import java.io.IOException;
import java.lang.Override;

public enum TestQuery_VariablesAdapter implements VariablesAdapter<TestQuery> {
  INSTANCE;

  @Override
  public void serializeVariables(JsonWriter writer, TestQuery value,
      VariablesAdapter.SerializeVariablesContext context) throws IOException {
    DataAdapter.SerializeDataContext serializeDataContext = new DataAdapter.SerializeDataContext(context.scalarAdapters);
    if (value.input instanceof Optional.Present) {
      writer.name("input");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ObjectDataAdapter<renamedInput>(renamedInput_InputAdapter.INSTANCE, false))).serializeData(writer, value.input, serializeDataContext);
    }
    if (value.scalar instanceof Optional.Present) {
      writer.name("scalar");
      new ApolloOptionalDataAdapter<>(DataAdapters.NullableAnyDataAdapter).serializeData(writer, value.scalar, serializeDataContext);
    }
    if (value.enum_ instanceof Optional.Present) {
      writer.name("enum");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(renamedEnum_ResponseAdapter.INSTANCE)).serializeData(writer, value.enum_, serializeDataContext);
    }
  }
}
