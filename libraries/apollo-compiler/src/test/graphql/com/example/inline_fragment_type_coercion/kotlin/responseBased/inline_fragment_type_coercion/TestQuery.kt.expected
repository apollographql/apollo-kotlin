//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_type_coercion

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.inline_fragment_type_coercion.adapter.TestQuery_ResponseAdapter
import com.example.inline_fragment_type_coercion.selections.TestQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import com.example.inline_fragment_type_coercion.type.Query as CompiledQuery

public class TestQuery() : Query<TestQuery.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    /**
     * For testing fragment type coercion
     */
    public val foo: Foo?,
  ) : Query.Data {
    public sealed interface Foo {
      public val __typename: String

      public val foo: String

      public companion object {
        @Suppress("USELESS_CAST")
        public fun Foo.asBar(): BarFoo? = this as? BarFoo
      }
    }

    public data class BarFoo(
      override val __typename: String,
      override val foo: String,
      public val bar: String,
    ) : Foo

    public data class OtherFoo(
      override val __typename: String,
      override val foo: String,
    ) : Foo
  }

  public companion object {
    public const val OPERATION_ID: String =
        "65c4fd857f5cbd2283f0783a3b3cefd9ead5abb159f5cc20922b0d8e04286662"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery {
     *   foo {
     *     __typename
     *     foo
     *     ... on Bar {
     *       bar
     *     }
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery { foo { __typename foo ... on Bar { bar } } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
