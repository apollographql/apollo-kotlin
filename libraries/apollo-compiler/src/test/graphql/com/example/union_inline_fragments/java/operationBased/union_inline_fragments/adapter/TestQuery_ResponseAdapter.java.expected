//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.union_inline_fragments.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ListCompositeAdapter;
import com.apollographql.apollo3.api.NullableCompositeAdapter;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.union_inline_fragments.TestQuery;
import com.example.union_inline_fragments.type.Episode;
import com.example.union_inline_fragments.type.adapter.Episode_ResponseAdapter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements CompositeAdapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("search");

    @Override
    public TestQuery.Data deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      List<TestQuery.Search> _search = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _search = new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Search>(Search.INSTANCE, true)))).deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _search
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.Data value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("search");
      new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Search>(Search.INSTANCE, true)))).serializeComposite(writer, value.search, context);
    }
  }

  public enum Search implements CompositeAdapter<TestQuery.Search> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public TestQuery.Search deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      TestQuery.OnCharacter _onCharacter = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Droid","Human")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onCharacter = com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnCharacter.INSTANCE.deserializeComposite(reader, context);
      }

      TestQuery.OnStarship _onStarship = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Starship")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onStarship = com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnStarship.INSTANCE.deserializeComposite(reader, context);
      }

      return new TestQuery.Search(
        __typename,
        _onCharacter,
        _onStarship
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.Search value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      if (value.onCharacter != null) {
        com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnCharacter.INSTANCE.serializeComposite(writer, value.onCharacter, context);
      }

      if (value.onStarship != null) {
        com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnStarship.INSTANCE.serializeComposite(writer, value.onStarship, context);
      }
    }
  }

  public enum OnCharacter implements CompositeAdapter<TestQuery.OnCharacter> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id", "name", "friends");

    @Override
    public TestQuery.OnCharacter deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String _id = null;
      String _name = null;
      List<TestQuery.Friend> _friends = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 1: _name = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 2: _friends = new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Friend>(Friend.INSTANCE, true)))).deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");
      Assertions.checkFieldNotMissing(_name, "name");

      return new TestQuery.OnCharacter(
        _id,
        _name,
        _friends
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.OnCharacter value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.id);

      writer.name("name");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name);

      writer.name("friends");
      new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Friend>(Friend.INSTANCE, true)))).serializeComposite(writer, value.friends, context);
    }
  }

  public enum Friend implements CompositeAdapter<TestQuery.Friend> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public TestQuery.Friend deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      reader.rewind();
      TestQuery.OnCharacter1 _onCharacter = com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnCharacter1.INSTANCE.deserializeComposite(reader, context);

      TestQuery.OnHuman _onHuman = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Human")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onHuman = com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnHuman.INSTANCE.deserializeComposite(reader, context);
      }

      TestQuery.OnDroid _onDroid = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Droid")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onDroid = com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnDroid.INSTANCE.deserializeComposite(reader, context);
      }

      return new TestQuery.Friend(
        __typename,
        _onCharacter,
        _onHuman,
        _onDroid
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.Friend value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnCharacter1.INSTANCE.serializeComposite(writer, value.onCharacter, context);

      if (value.onHuman != null) {
        com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnHuman.INSTANCE.serializeComposite(writer, value.onHuman, context);
      }

      if (value.onDroid != null) {
        com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnDroid.INSTANCE.serializeComposite(writer, value.onDroid, context);
      }
    }
  }

  public enum OnCharacter1 implements CompositeAdapter<TestQuery.OnCharacter1> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("name");

    @Override
    public TestQuery.OnCharacter1 deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String _name = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _name = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_name, "name");

      return new TestQuery.OnCharacter1(
        _name
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.OnCharacter1 value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("name");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name);
    }
  }

  public enum OnHuman implements CompositeAdapter<TestQuery.OnHuman> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("homePlanet", "friends");

    @Override
    public TestQuery.OnHuman deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String _homePlanet = null;
      List<TestQuery.Friend1> _friends = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _homePlanet = Adapters.NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 1: _friends = new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Friend1>(Friend1.INSTANCE, true)))).deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.OnHuman(
        _homePlanet,
        _friends
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.OnHuman value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("homePlanet");
      Adapters.NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.homePlanet);

      writer.name("friends");
      new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Friend1>(Friend1.INSTANCE, true)))).serializeComposite(writer, value.friends, context);
    }
  }

  public enum Friend1 implements CompositeAdapter<TestQuery.Friend1> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public TestQuery.Friend1 deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      reader.rewind();
      TestQuery.OnCharacter2 _onCharacter = com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnCharacter2.INSTANCE.deserializeComposite(reader, context);

      Assertions.checkFieldNotMissing(__typename, "__typename");

      return new TestQuery.Friend1(
        __typename,
        _onCharacter
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.Friend1 value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter.OnCharacter2.INSTANCE.serializeComposite(writer, value.onCharacter, context);
    }
  }

  public enum OnCharacter2 implements CompositeAdapter<TestQuery.OnCharacter2> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("firstAppearsIn");

    @Override
    public TestQuery.OnCharacter2 deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      Episode _firstAppearsIn = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _firstAppearsIn = Episode_ResponseAdapter.INSTANCE.deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_firstAppearsIn, "firstAppearsIn");

      return new TestQuery.OnCharacter2(
        _firstAppearsIn
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.OnCharacter2 value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("firstAppearsIn");
      Episode_ResponseAdapter.INSTANCE.serializeComposite(writer, value.firstAppearsIn, context);
    }
  }

  public enum OnDroid implements CompositeAdapter<TestQuery.OnDroid> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("primaryFunction", "friends");

    @Override
    public TestQuery.OnDroid deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String _primaryFunction = null;
      List<TestQuery.Friend2> _friends = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _primaryFunction = Adapters.NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 1: _friends = new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Friend2>(Friend2.INSTANCE, false)))).deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.OnDroid(
        _primaryFunction,
        _friends
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.OnDroid value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("primaryFunction");
      Adapters.NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.primaryFunction);

      writer.name("friends");
      new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Friend2>(Friend2.INSTANCE, false)))).serializeComposite(writer, value.friends, context);
    }
  }

  public enum Friend2 implements CompositeAdapter<TestQuery.Friend2> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id");

    @Override
    public TestQuery.Friend2 deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String _id = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");

      return new TestQuery.Friend2(
        _id
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.Friend2 value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.id);
    }
  }

  public enum OnStarship implements CompositeAdapter<TestQuery.OnStarship> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("name");

    @Override
    public TestQuery.OnStarship deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String _name = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _name = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_name, "name");

      return new TestQuery.OnStarship(
        _name
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.OnStarship value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("name");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name);
    }
  }
}
