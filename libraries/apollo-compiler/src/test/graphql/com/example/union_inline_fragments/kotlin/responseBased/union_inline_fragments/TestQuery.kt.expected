//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.union_inline_fragments

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter
import com.example.union_inline_fragments.selections.TestQuerySelections
import com.example.union_inline_fragments.type.Episode
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import com.example.union_inline_fragments.type.Query as CompiledQuery

public class TestQuery() : Query<TestQuery.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val search: List<Search?>?,
  ) : Query.Data {
    public fun searchFilterNotNull(): List<Search>? = search?.filterNotNull()

    public sealed interface Search {
      public val __typename: String

      public companion object {
        @Suppress("USELESS_CAST")
        public fun Search.asCharacter(): CharacterSearch? = this as? CharacterSearch

        @Suppress("USELESS_CAST")
        public fun Search.asStarship(): StarshipSearch? = this as? StarshipSearch
      }
    }

    public data class CharacterSearch(
      override val __typename: String,
      /**
       * The ID of the character
       */
      public val id: String,
      /**
       * The name of the character
       */
      public val name: String,
      /**
       * The friends of the character, or an empty list if they have none
       */
      public val friends: List<Friend?>?,
    ) : Search {
      public fun friendsFilterNotNull(): List<Friend>? = friends?.filterNotNull()

      public sealed interface Friend {
        public val __typename: String

        /**
         * The name of the character
         */
        public val name: String

        public companion object {
          @Suppress("USELESS_CAST")
          public fun Friend.asHuman(): HumanFriend? = this as? HumanFriend

          @Suppress("USELESS_CAST")
          public fun Friend.asDroid(): DroidFriend? = this as? DroidFriend
        }
      }

      public data class HumanFriend(
        override val __typename: String,
        /**
         * The name of the character
         */
        override val name: String,
        /**
         * The home planet of the human, or null if unknown
         */
        public val homePlanet: String?,
        /**
         * This human's friends, or an empty list if they have none
         */
        public val friends: List<Friend?>?,
      ) : Friend {
        public fun friendsFilterNotNull(): List<Friend>? = friends?.filterNotNull()

        public data class Friend(
          public val __typename: String,
          /**
           * The movie this character first appears in
           */
          public val firstAppearsIn: Episode,
        )
      }

      public data class DroidFriend(
        override val __typename: String,
        /**
         * The name of the character
         */
        override val name: String,
        /**
         * This droid's primary function
         */
        public val primaryFunction: String?,
        /**
         * This droid's friends, or an empty list if they have none
         */
        public val friends: List<Friend?>?,
      ) : Friend {
        public fun friendsFilterNotNull(): List<Friend>? = friends?.filterNotNull()

        public data class Friend(
          /**
           * The ID of the character
           */
          public val id: String,
        )
      }

      public data class OtherFriend(
        override val __typename: String,
        /**
         * The name of the character
         */
        override val name: String,
      ) : Friend
    }

    public data class StarshipSearch(
      override val __typename: String,
      /**
       * The name of the starship
       */
      public val name: String,
    ) : Search

    public data class OtherSearch(
      override val __typename: String,
    ) : Search
  }

  public companion object {
    public const val OPERATION_ID: String =
        "2c2de063c729a4ce1b51648279b6afd6372ac91ae33c304f4e33d20fb098cfc6"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery {
     *   search(text: "test") {
     *     __typename
     *     ... on Character {
     *       id
     *       name
     *       friends {
     *         __typename
     *         ... on Character {
     *           name
     *         }
     *         ... on Human {
     *           homePlanet
     *           friends {
     *             __typename
     *             ... on Character {
     *               firstAppearsIn
     *             }
     *           }
     *         }
     *         ... on Droid {
     *           primaryFunction
     *           friends {
     *             id
     *           }
     *         }
     *       }
     *     }
     *     ... on Starship {
     *       name
     *     }
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery { search(text: \"test\") { __typename ... on Character { id name friends { __typename ... on Character { name } ... on Human { homePlanet friends { __typename ... on Character { firstAppearsIn } } } ... on Droid { primaryFunction friends { id } } } } ... on Starship { name } } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
