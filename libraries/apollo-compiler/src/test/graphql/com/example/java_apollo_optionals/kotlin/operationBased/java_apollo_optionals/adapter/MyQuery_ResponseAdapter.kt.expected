//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_apollo_optionals.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.ScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.java_apollo_optionals.MyQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object MyQuery_ResponseAdapter {
  public object Data : Adapter<MyQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "nullableInt", "nonNullableInt",
        "nullableMyType", "nonNullableMyType")

    public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
        MyQuery.Data {
      var __typename: String? = null
      var _nullableInt: Int? = null
      var _nonNullableInt: Int? = null
      var _nullableMyType: MyQuery.Data.NullableMyType? = null
      var _nonNullableMyType: MyQuery.Data.NonNullableMyType? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, scalarAdapters)
          1 -> _nullableInt = NullableIntAdapter.fromJson(reader, scalarAdapters)
          2 -> _nonNullableInt = IntAdapter.fromJson(reader, scalarAdapters)
          3 -> _nullableMyType = NullableMyType.obj().nullable().fromJson(reader,
              scalarAdapters)
          4 -> _nonNullableMyType = NonNullableMyType.obj().fromJson(reader, scalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _myFragment = com.example.java_apollo_optionals.fragment.MyFragmentImpl_ResponseAdapter.MyFragment.fromJson(reader,
          scalarAdapters)

      return MyQuery.Data(
        __typename = __typename!!,
        nullableInt = _nullableInt,
        nonNullableInt = _nonNullableInt!!,
        nullableMyType = _nullableMyType,
        nonNullableMyType = _nonNullableMyType!!,
        myFragment = _myFragment
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      scalarAdapters: ScalarAdapters,
      `value`: MyQuery.Data,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, scalarAdapters, value.__typename)

      writer.name("nullableInt")
      NullableIntAdapter.toJson(writer, scalarAdapters, value.nullableInt)

      writer.name("nonNullableInt")
      IntAdapter.toJson(writer, scalarAdapters, value.nonNullableInt)

      writer.name("nullableMyType")
      NullableMyType.obj().nullable().toJson(writer, scalarAdapters, value.nullableMyType)

      writer.name("nonNullableMyType")
      NonNullableMyType.obj().toJson(writer, scalarAdapters, value.nonNullableMyType)

      com.example.java_apollo_optionals.fragment.MyFragmentImpl_ResponseAdapter.MyFragment.toJson(writer,
          scalarAdapters, value.myFragment)
    }

    private object NullableMyType : Adapter<MyQuery.Data.NullableMyType> {
      public val RESPONSE_NAMES: List<String> = listOf("nullableInt", "nonNullableInt")

      public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
          MyQuery.Data.NullableMyType {
        var _nullableInt: Int? = null
        var _nonNullableInt: Int? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _nullableInt = NullableIntAdapter.fromJson(reader, scalarAdapters)
            1 -> _nonNullableInt = IntAdapter.fromJson(reader, scalarAdapters)
            else -> break
          }
        }

        return MyQuery.Data.NullableMyType(
          nullableInt = _nullableInt,
          nonNullableInt = _nonNullableInt!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        scalarAdapters: ScalarAdapters,
        `value`: MyQuery.Data.NullableMyType,
      ): Unit {
        writer.name("nullableInt")
        NullableIntAdapter.toJson(writer, scalarAdapters, value.nullableInt)

        writer.name("nonNullableInt")
        IntAdapter.toJson(writer, scalarAdapters, value.nonNullableInt)
      }
    }

    private object NonNullableMyType : Adapter<MyQuery.Data.NonNullableMyType> {
      public val RESPONSE_NAMES: List<String> = listOf("nullableInt", "nonNullableInt")

      public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
          MyQuery.Data.NonNullableMyType {
        var _nullableInt: Int? = null
        var _nonNullableInt: Int? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _nullableInt = NullableIntAdapter.fromJson(reader, scalarAdapters)
            1 -> _nonNullableInt = IntAdapter.fromJson(reader, scalarAdapters)
            else -> break
          }
        }

        return MyQuery.Data.NonNullableMyType(
          nullableInt = _nullableInt,
          nonNullableInt = _nonNullableInt!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        scalarAdapters: ScalarAdapters,
        `value`: MyQuery.Data.NonNullableMyType,
      ): Unit {
        writer.name("nullableInt")
        NullableIntAdapter.toJson(writer, scalarAdapters, value.nullableInt)

        writer.name("nonNullableInt")
        IntAdapter.toJson(writer, scalarAdapters, value.nonNullableInt)
      }
    }
  }
}
