//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_apollo_optionals.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.java_apollo_optionals.MyQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object MyQuery_ResponseAdapter {
  public object Data : Adapter<MyQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "nullableInt", "nonNullableInt",
        "nullableMyType", "nonNullableMyType")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        MyQuery.Data {
      var __typename: String? = null
      var _nullableInt: Int? = null
      var _nonNullableInt: Int? = null
      var _nullableMyType: MyQuery.NullableMyType? = null
      var _nonNullableMyType: MyQuery.NonNullableMyType? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _nullableInt = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          2 -> _nonNullableInt = IntAdapter.fromJson(reader, customScalarAdapters)
          3 -> _nullableMyType = NullableMyType.obj().nullable().fromJson(reader,
              customScalarAdapters)
          4 -> _nonNullableMyType = NonNullableMyType.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _fragments = com.example.java_apollo_optionals.adapter.MyQuery_ResponseAdapter.Data.Fragments.fromJson(reader,
          customScalarAdapters)

      return MyQuery.Data(
        __typename = __typename!!,
        nullableInt = _nullableInt,
        nonNullableInt = _nonNullableInt!!,
        nullableMyType = _nullableMyType,
        nonNullableMyType = _nonNullableMyType!!,
        fragments = _fragments
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: MyQuery.Data,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("nullableInt")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.nullableInt)

      writer.name("nonNullableInt")
      IntAdapter.toJson(writer, customScalarAdapters, value.nonNullableInt)

      writer.name("nullableMyType")
      NullableMyType.obj().nullable().toJson(writer, customScalarAdapters, value.nullableMyType)

      writer.name("nonNullableMyType")
      NonNullableMyType.obj().toJson(writer, customScalarAdapters, value.nonNullableMyType)

      com.example.java_apollo_optionals.adapter.MyQuery_ResponseAdapter.Data.Fragments.toJson(writer,
          customScalarAdapters, value.fragments)
    }

    private object Fragments : Adapter<MyQuery.Data.Fragments> {
      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          MyQuery.Data.Fragments {


        reader.rewind()
        val _myFragment = com.example.java_apollo_optionals.fragment.MyFragmentImpl_ResponseAdapter.MyFragment.fromJson(reader,
            customScalarAdapters)

        return MyQuery.Data.Fragments(
          myFragment = _myFragment
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: MyQuery.Data.Fragments,
      ): Unit {
        com.example.java_apollo_optionals.fragment.MyFragmentImpl_ResponseAdapter.MyFragment.toJson(writer,
            customScalarAdapters, value.myFragment)
      }
    }
  }

  public object NullableMyType : Adapter<MyQuery.NullableMyType> {
    public val RESPONSE_NAMES: List<String> = listOf("nullableInt", "nonNullableInt")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        MyQuery.NullableMyType {
      var _nullableInt: Int? = null
      var _nonNullableInt: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _nullableInt = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          1 -> _nonNullableInt = IntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return MyQuery.NullableMyType(
        nullableInt = _nullableInt,
        nonNullableInt = _nonNullableInt!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: MyQuery.NullableMyType,
    ): Unit {
      writer.name("nullableInt")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.nullableInt)

      writer.name("nonNullableInt")
      IntAdapter.toJson(writer, customScalarAdapters, value.nonNullableInt)
    }
  }

  public object NonNullableMyType : Adapter<MyQuery.NonNullableMyType> {
    public val RESPONSE_NAMES: List<String> = listOf("nullableInt", "nonNullableInt")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        MyQuery.NonNullableMyType {
      var _nullableInt: Int? = null
      var _nonNullableInt: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _nullableInt = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          1 -> _nonNullableInt = IntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return MyQuery.NonNullableMyType(
        nullableInt = _nullableInt,
        nonNullableInt = _nonNullableInt!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: MyQuery.NonNullableMyType,
    ): Unit {
      writer.name("nullableInt")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.nullableInt)

      writer.name("nonNullableInt")
      IntAdapter.toJson(writer, customScalarAdapters, value.nonNullableInt)
    }
  }
}
