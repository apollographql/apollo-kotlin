//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_apollo_optionals.type.adapter

import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.IntDataAdapter
import com.apollographql.apollo3.api.NullableIntDataAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.present
import com.example.java_apollo_optionals.type.MyInput
import kotlin.IllegalStateException
import kotlin.Unit

public object MyInput_InputAdapter : DataAdapter<MyInput> {
  public override fun deserializeData(reader: JsonReader,
      context: DataAdapter.DeserializeDataContext): MyInput = throw
      IllegalStateException("Input type used in output position")

  public override fun serializeData(
    writer: JsonWriter,
    `value`: MyInput,
    context: DataAdapter.SerializeDataContext,
  ): Unit {
    if (value.nullableInt is Optional.Present) {
      writer.name("nullableInt")
      NullableIntDataAdapter.present().serializeData(writer, value.nullableInt, context)
    }
    writer.name("nonNullableInt")
    IntDataAdapter.serializeData(writer, value.nonNullableInt, context)
    if (value.nonNullableIntWithDefault is Optional.Present) {
      writer.name("nonNullableIntWithDefault")
      IntDataAdapter.present().serializeData(writer, value.nonNullableIntWithDefault, context)
    }
  }
}
