//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_apollo_optionals.selections

import com.apollographql.apollo.api.CompiledArgument
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CompiledFragment
import com.apollographql.apollo.api.CompiledSelection
import com.apollographql.apollo.api.CompiledVariable
import com.apollographql.apollo.api.notNull
import com.example.java_apollo_optionals.fragment.selections.MyFragmentSelections
import com.example.java_apollo_optionals.type.GraphQLInt
import com.example.java_apollo_optionals.type.GraphQLString
import com.example.java_apollo_optionals.type.MyType
import kotlin.collections.List

public object MyQuerySelections {
  private val __nullableMyType: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "nullableInt",
          type = GraphQLInt.type
        ).build(),
        CompiledField.Builder(
          name = "nonNullableInt",
          type = GraphQLInt.type.notNull()
        ).build()
      )

  private val __nonNullableMyType: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "nullableInt",
          type = GraphQLInt.type
        ).build(),
        CompiledField.Builder(
          name = "nonNullableInt",
          type = GraphQLInt.type.notNull()
        ).build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "nullableInt",
          type = GraphQLInt.type
        ).arguments(listOf(
          CompiledArgument.Builder("nonNullableInput", CompiledVariable("nonNullableInput")).build(),
          CompiledArgument.Builder("nonNullableInputWithDefault", CompiledVariable("nonNullableInputWithDefault")).build(),
          CompiledArgument.Builder("nonNullableInt", CompiledVariable("nonNullableInt")).build(),
          CompiledArgument.Builder("nonNullableIntWithDefault", CompiledVariable("nonNullableIntWithDefault")).build(),
          CompiledArgument.Builder("nullableInput", CompiledVariable("nullableInput")).build(),
          CompiledArgument.Builder("nullableInt", CompiledVariable("nullableInt")).build()
        ))
        .build(),
        CompiledField.Builder(
          name = "nonNullableInt",
          type = GraphQLInt.type.notNull()
        ).arguments(listOf(
          CompiledArgument.Builder("nonNullableInput", CompiledVariable("nonNullableInput")).build(),
          CompiledArgument.Builder("nonNullableInputWithDefault", CompiledVariable("nonNullableInputWithDefault")).build(),
          CompiledArgument.Builder("nonNullableInt", CompiledVariable("nonNullableInt")).build(),
          CompiledArgument.Builder("nonNullableIntWithDefault", CompiledVariable("nonNullableIntWithDefault")).build(),
          CompiledArgument.Builder("nullableInput", CompiledVariable("nullableInput")).build(),
          CompiledArgument.Builder("nullableInt", CompiledVariable("nullableInt")).build()
        ))
        .build(),
        CompiledField.Builder(
          name = "nullableMyType",
          type = MyType.type
        ).selections(__nullableMyType)
        .build(),
        CompiledField.Builder(
          name = "nonNullableMyType",
          type = MyType.type.notNull()
        ).selections(__nonNullableMyType)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Query",
          possibleTypes = listOf("Query")
        ).selections(MyFragmentSelections.__root)
        .build()
      )
}
