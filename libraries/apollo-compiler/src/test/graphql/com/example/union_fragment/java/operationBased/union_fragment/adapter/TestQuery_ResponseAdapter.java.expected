//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.union_fragment.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ListCompositeAdapter;
import com.apollographql.apollo3.api.NullableCompositeAdapter;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.union_fragment.TestQuery;
import com.example.union_fragment.fragment.Starship;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestQuery_ResponseAdapter {
  public enum Data implements CompositeAdapter<TestQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("search");

    @Override
    public TestQuery.Data deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      List<TestQuery.Search> _search = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _search = new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Search>(Search.INSTANCE, true)))).deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      return new TestQuery.Data(
        _search
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.Data value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("search");
      new NullableCompositeAdapter<>(new ListCompositeAdapter<>(new NullableCompositeAdapter<>(new ObjectCompositeAdapter<TestQuery.Search>(Search.INSTANCE, true)))).serializeComposite(writer, value.search, context);
    }
  }

  public enum Search implements CompositeAdapter<TestQuery.Search> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public TestQuery.Search deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      TestQuery.OnStarship _onStarship = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Starship")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onStarship = com.example.union_fragment.adapter.TestQuery_ResponseAdapter.OnStarship.INSTANCE.deserializeComposite(reader, context);
      }

      Starship _starship = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Starship")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _starship = com.example.union_fragment.fragment.StarshipImpl_ResponseAdapter.Starship.INSTANCE.deserializeComposite(reader, context);
      }

      return new TestQuery.Search(
        __typename,
        _onStarship,
        _starship
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.Search value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      if (value.onStarship != null) {
        com.example.union_fragment.adapter.TestQuery_ResponseAdapter.OnStarship.INSTANCE.serializeComposite(writer, value.onStarship, context);
      }

      if (value.starship != null) {
        com.example.union_fragment.fragment.StarshipImpl_ResponseAdapter.Starship.INSTANCE.serializeComposite(writer, value.starship, context);
      }
    }
  }

  public enum OnStarship implements CompositeAdapter<TestQuery.OnStarship> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id");

    @Override
    public TestQuery.OnStarship deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String _id = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");

      return new TestQuery.OnStarship(
        _id
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestQuery.OnStarship value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.id);
    }
  }
}
