//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.mutation_create_review.builder

import com.apollographql.apollo.api.BuilderProperty
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.DataBuilder
import com.apollographql.apollo.api.DataBuilderDsl
import com.apollographql.apollo.api.DataBuilderFactory
import com.apollographql.apollo.api.DataBuilderScope
import com.apollographql.apollo.api.ExecutableDefinition
import com.apollographql.apollo.api.FakeResolver
import com.apollographql.apollo.api.buildData
import com.apollographql.apollo.api.list
import com.apollographql.apollo.api.nullable
import com.example.mutation_create_review.type.Episode
import com.example.mutation_create_review.type.Review
import com.example.mutation_create_review.type.adapter.Episode_ResponseAdapter
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import com.example.mutation_create_review.type.Date as TypeDate
import java.util.Date as UtilDate

@DataBuilderDsl
internal class ReviewBuilder(
  customScalarAdapters: CustomScalarAdapters,
) : DataBuilder<ReviewMap>(customScalarAdapters) {
  init {
    __typename = "Review"}

  public var commentary: String? by BuilderProperty(com.example.MyStringAdapter().nullable())

  public var listOfListOfCustom: List<List<UtilDate>>? by
      BuilderProperty(customScalarAdapters.responseAdapterFor<UtilDate>(TypeDate.type).list().list().nullable())

  public var listOfListOfEnum: List<List<Episode>>? by
      BuilderProperty(Episode_ResponseAdapter.list().list().nullable())

  public var listOfListOfObject: List<List<CharacterMap>>? by __fields

  public var listOfListOfString: List<List<String>>? by
      BuilderProperty(com.example.MyStringAdapter().list().list().nullable())

  public var stars: Int by __fields

  override fun build(): ReviewMap = ReviewMap(__fields)

  public companion object : DataBuilderFactory<ReviewBuilder> {
    override fun newBuilder(customScalarAdapters: CustomScalarAdapters): ReviewBuilder = ReviewBuilder(customScalarAdapters)
  }
}

internal fun DataBuilderScope.buildReview(block: ReviewBuilder.() -> Unit): ReviewMap = ReviewBuilder(customScalarAdapters)
.apply {
  __typename = "Review"
}.apply(block)
.build()

internal fun <D : Review.Data> ExecutableDefinition<D>.Data(customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, block: ReviewBuilder.() -> Unit): D = buildData(
  ADAPTER,
  customScalarAdapters,
  ReviewBuilder(customScalarAdapters).apply(block).build(),
)

internal fun <D : Review.Data> ExecutableDefinition<D>.Data(
  resolver: FakeResolver,
  customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty,
  block: ReviewBuilder.() -> Unit = {},
): D = buildData(
  ADAPTER,
  customScalarAdapters,
  ReviewBuilder(customScalarAdapters).apply(block).build(),
  ROOT_FIELD.selections,
  "Review",
  resolver,
)
