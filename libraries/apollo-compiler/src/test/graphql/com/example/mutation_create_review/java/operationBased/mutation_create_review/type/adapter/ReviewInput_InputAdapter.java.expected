//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.mutation_create_review.type.adapter;

import com.apollographql.apollo3.api.AdapterToDataAdapter;
import com.apollographql.apollo3.api.ApolloOptionalDataAdapter;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.DataAdapters;
import com.apollographql.apollo3.api.ListDataAdapter;
import com.apollographql.apollo3.api.NullableDataAdapter;
import com.apollographql.apollo3.api.ObjectDataAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.mutation_create_review.type.ColorInput;
import com.example.mutation_create_review.type.ReviewInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;
import java.util.Date;

public enum ReviewInput_InputAdapter implements DataAdapter<ReviewInput> {
  INSTANCE;

  @Override
  public ReviewInput deserializeData(JsonReader reader, DataAdapter.DeserializeDataContext context)
      throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void serializeData(JsonWriter writer, ReviewInput value,
      DataAdapter.SerializeDataContext context) throws IOException {
    writer.name("stars");
    DataAdapters.IntDataAdapter.serializeData(writer, value.stars, context);
    if (value.nullableIntFieldWithDefaultValue instanceof Optional.Present) {
      writer.name("nullableIntFieldWithDefaultValue");
      new ApolloOptionalDataAdapter<>(DataAdapters.NullableIntDataAdapter).serializeData(writer, value.nullableIntFieldWithDefaultValue, context);
    }
    if (value.commentary instanceof Optional.Present) {
      writer.name("commentary");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new AdapterToDataAdapter<>(new com.example.MyStringAdapter()))).serializeData(writer, value.commentary, context);
    }
    writer.name("favoriteColor");
    new ObjectDataAdapter<ColorInput>(ColorInput_InputAdapter.INSTANCE, false).serializeData(writer, value.favoriteColor, context);
    if (value.enumWithDefaultValue instanceof Optional.Present) {
      writer.name("enumWithDefaultValue");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(Episode_ResponseAdapter.INSTANCE)).serializeData(writer, value.enumWithDefaultValue, context);
    }
    if (value.nonNullableEnumWithDefaultValue instanceof Optional.Present) {
      writer.name("nonNullableEnumWithDefaultValue");
      new ApolloOptionalDataAdapter<>(Episode_ResponseAdapter.INSTANCE).serializeData(writer, value.nonNullableEnumWithDefaultValue, context);
    }
    if (value.nullableEnum instanceof Optional.Present) {
      writer.name("nullableEnum");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(Episode_ResponseAdapter.INSTANCE)).serializeData(writer, value.nullableEnum, context);
    }
    if (value.listOfCustomScalar instanceof Optional.Present) {
      writer.name("listOfCustomScalar");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ListDataAdapter<>(new NullableDataAdapter<>((context.scalarAdapters.<Date>responseAdapterFor(com.example.mutation_create_review.type.Date.type)))))).serializeData(writer, value.listOfCustomScalar, context);
    }
    if (value.customScalar instanceof Optional.Present) {
      writer.name("customScalar");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>((context.scalarAdapters.<Date>responseAdapterFor(com.example.mutation_create_review.type.Date.type)))).serializeData(writer, value.customScalar, context);
    }
    if (value.listOfEnums instanceof Optional.Present) {
      writer.name("listOfEnums");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ListDataAdapter<>(new NullableDataAdapter<>(Episode_ResponseAdapter.INSTANCE)))).serializeData(writer, value.listOfEnums, context);
    }
    if (value.listOfInt instanceof Optional.Present) {
      writer.name("listOfInt");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ListDataAdapter<>(DataAdapters.NullableIntDataAdapter))).serializeData(writer, value.listOfInt, context);
    }
    if (value.listOfString instanceof Optional.Present) {
      writer.name("listOfString");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ListDataAdapter<>(new NullableDataAdapter<>(new AdapterToDataAdapter<>(new com.example.MyStringAdapter()))))).serializeData(writer, value.listOfString, context);
    }
    writer.name("listOfStringNonOptional");
    new ListDataAdapter<>(new NullableDataAdapter<>(new AdapterToDataAdapter<>(new com.example.MyStringAdapter()))).serializeData(writer, value.listOfStringNonOptional, context);
    if (value.listOfInputTypes instanceof Optional.Present) {
      writer.name("listOfInputTypes");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ListDataAdapter<>(new NullableDataAdapter<>(new ObjectDataAdapter<ColorInput>(ColorInput_InputAdapter.INSTANCE, false))))).serializeData(writer, value.listOfInputTypes, context);
    }
    if (value.booleanWithDefaultValue instanceof Optional.Present) {
      writer.name("booleanWithDefaultValue");
      new ApolloOptionalDataAdapter<>(DataAdapters.NullableBooleanDataAdapter).serializeData(writer, value.booleanWithDefaultValue, context);
    }
    if (value.booleanNonOptional instanceof Optional.Present) {
      writer.name("booleanNonOptional");
      new ApolloOptionalDataAdapter<>(DataAdapters.NullableBooleanDataAdapter).serializeData(writer, value.booleanNonOptional, context);
    }
    if (value.listOfListOfString instanceof Optional.Present) {
      writer.name("listOfListOfString");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ListDataAdapter<>(new ListDataAdapter<>(new AdapterToDataAdapter<>(new com.example.MyStringAdapter()))))).serializeData(writer, value.listOfListOfString, context);
    }
    if (value.listOfListOfEnum instanceof Optional.Present) {
      writer.name("listOfListOfEnum");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ListDataAdapter<>(new ListDataAdapter<>(Episode_ResponseAdapter.INSTANCE)))).serializeData(writer, value.listOfListOfEnum, context);
    }
    if (value.listOfListOfCustom instanceof Optional.Present) {
      writer.name("listOfListOfCustom");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ListDataAdapter<>(new ListDataAdapter<>((context.scalarAdapters.<Date>responseAdapterFor(com.example.mutation_create_review.type.Date.type)))))).serializeData(writer, value.listOfListOfCustom, context);
    }
    if (value.listOfListOfObject instanceof Optional.Present) {
      writer.name("listOfListOfObject");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new ListDataAdapter<>(new ListDataAdapter<>(new ObjectDataAdapter<ColorInput>(ColorInput_InputAdapter.INSTANCE, false))))).serializeData(writer, value.listOfListOfObject, context);
    }
    if (value.CapitalizedField instanceof Optional.Present) {
      writer.name("CapitalizedField");
      new ApolloOptionalDataAdapter<>(new NullableDataAdapter<>(new AdapterToDataAdapter<>(new com.example.MyStringAdapter()))).serializeData(writer, value.CapitalizedField, context);
    }
    if (value.CapitalizedInt instanceof Optional.Present) {
      writer.name("CapitalizedInt");
      new ApolloOptionalDataAdapter<>(DataAdapters.NullableIntDataAdapter).serializeData(writer, value.CapitalizedInt, context);
    }
  }
}
