//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.mutation_create_review.adapter

import com.apollographql.apollo3.api.AdapterToDataAdapter
import com.apollographql.apollo3.api.DataAdapter
import com.apollographql.apollo3.api.IntDataAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.mutation_create_review.CreateReviewForEpisode
import com.example.mutation_create_review.type.Episode
import com.example.mutation_create_review.type.adapter.Episode_ResponseAdapter
import java.util.Date
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

internal object CreateReviewForEpisode_ResponseAdapter {
  public object Data : DataAdapter<CreateReviewForEpisode.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("createReview")

    public override fun deserializeData(reader: JsonReader,
        context: DataAdapter.DeserializeDataContext): CreateReviewForEpisode.Data {
      var _createReview: CreateReviewForEpisode.Data.CreateReview? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _createReview = CreateReview.obj().nullable().deserializeData(reader, context)
          else -> break
        }
      }

      return CreateReviewForEpisode.Data(
        createReview = _createReview
      )
    }

    public override fun serializeData(
      writer: JsonWriter,
      `value`: CreateReviewForEpisode.Data,
      context: DataAdapter.SerializeDataContext,
    ): Unit {
      writer.name("createReview")
      CreateReview.obj().nullable().serializeData(writer, value.createReview, context)
    }

    private object CreateReview : DataAdapter<CreateReviewForEpisode.Data.CreateReview> {
      public val RESPONSE_NAMES: List<String> = listOf("stars", "commentary", "listOfListOfString",
          "listOfListOfEnum", "listOfListOfCustom", "listOfListOfObject")

      public override fun deserializeData(reader: JsonReader,
          context: DataAdapter.DeserializeDataContext): CreateReviewForEpisode.Data.CreateReview {
        var _stars: Int? = null
        var _commentary: String? = null
        var _listOfListOfString: List<List<String>>? = null
        var _listOfListOfEnum: List<List<Episode>>? = null
        var _listOfListOfCustom: List<List<Date>>? = null
        var _listOfListOfObject: List<List<CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject>>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _stars = IntDataAdapter.deserializeData(reader, context)
            1 -> _commentary = AdapterToDataAdapter(com.example.MyStringAdapter()).nullable().deserializeData(reader,
                context)
            2 -> _listOfListOfString = AdapterToDataAdapter(com.example.MyStringAdapter()).list().list().nullable().deserializeData(reader,
                context)
            3 -> _listOfListOfEnum = Episode_ResponseAdapter.list().list().nullable().deserializeData(reader,
                context)
            4 -> _listOfListOfCustom = context.customScalarAdapters.responseAdapterFor<Date>(com.example.mutation_create_review.type.Date.type).list().list().nullable().deserializeData(reader,
                context)
            5 -> _listOfListOfObject = ListOfListOfObject.obj().list().list().nullable().deserializeData(reader,
                context)
            else -> break
          }
        }

        return CreateReviewForEpisode.Data.CreateReview(
          stars = _stars!!,
          commentary = _commentary,
          listOfListOfString = _listOfListOfString,
          listOfListOfEnum = _listOfListOfEnum,
          listOfListOfCustom = _listOfListOfCustom,
          listOfListOfObject = _listOfListOfObject
        )
      }

      public override fun serializeData(
        writer: JsonWriter,
        `value`: CreateReviewForEpisode.Data.CreateReview,
        context: DataAdapter.SerializeDataContext,
      ): Unit {
        writer.name("stars")
        IntDataAdapter.serializeData(writer, value.stars, context)

        writer.name("commentary")
        AdapterToDataAdapter(com.example.MyStringAdapter()).nullable().serializeData(writer,
            value.commentary, context)

        writer.name("listOfListOfString")
        AdapterToDataAdapter(com.example.MyStringAdapter()).list().list().nullable().serializeData(writer,
            value.listOfListOfString, context)

        writer.name("listOfListOfEnum")
        Episode_ResponseAdapter.list().list().nullable().serializeData(writer,
            value.listOfListOfEnum, context)

        writer.name("listOfListOfCustom")
        context.customScalarAdapters.responseAdapterFor<Date>(com.example.mutation_create_review.type.Date.type).list().list().nullable().serializeData(writer,
            value.listOfListOfCustom, context)

        writer.name("listOfListOfObject")
        ListOfListOfObject.obj().list().list().nullable().serializeData(writer,
            value.listOfListOfObject, context)
      }

      private object ListOfListOfObject :
          DataAdapter<CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject> {
        public val RESPONSE_NAMES: List<String> = listOf("name")

        public override fun deserializeData(reader: JsonReader,
            context: DataAdapter.DeserializeDataContext):
            CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject {
          var _name: String? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _name = AdapterToDataAdapter(com.example.MyStringAdapter()).deserializeData(reader,
                  context)
              else -> break
            }
          }

          return CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject(
            name = _name!!
          )
        }

        public override fun serializeData(
          writer: JsonWriter,
          `value`: CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject,
          context: DataAdapter.SerializeDataContext,
        ): Unit {
          writer.name("name")
          AdapterToDataAdapter(com.example.MyStringAdapter()).serializeData(writer, value.name,
              context)
        }
      }
    }
  }
}
