//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.mutation_create_review.builder

import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.DataBuilder
import com.apollographql.apollo.api.DataBuilderDsl
import com.apollographql.apollo.api.DataBuilderFactory
import com.apollographql.apollo.api.DataBuilderScope
import com.apollographql.apollo.api.ExecutableDefinition
import com.apollographql.apollo.api.FakeResolver
import com.apollographql.apollo.api.Mutation
import com.apollographql.apollo.api.buildData
import kotlin.Unit

@DataBuilderDsl
internal class MutationBuilder(
  customScalarAdapters: CustomScalarAdapters,
) : DataBuilder<MutationMap>(customScalarAdapters) {
  init {
    __typename = "Mutation"}

  public var createReview: ReviewMap by __fields

  override fun build(): MutationMap = MutationMap(__fields)

  public companion object : DataBuilderFactory<MutationBuilder> {
    override fun newBuilder(customScalarAdapters: CustomScalarAdapters): MutationBuilder = MutationBuilder(customScalarAdapters)
  }
}

internal fun DataBuilderScope.buildMutation(block: MutationBuilder.() -> Unit): MutationMap = MutationBuilder(customScalarAdapters)
.apply {
  __typename = "Mutation"
}.apply(block)
.build()

internal fun <D : Mutation.Data> ExecutableDefinition<D>.Data(customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, block: MutationBuilder.() -> Unit): D = buildData(
  ADAPTER,
  customScalarAdapters,
  MutationBuilder(customScalarAdapters).apply(block).build(),
)

internal fun <D : Mutation.Data> ExecutableDefinition<D>.Data(
  resolver: FakeResolver,
  customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty,
  block: MutationBuilder.() -> Unit = {},
): D = buildData(
  ADAPTER,
  customScalarAdapters,
  MutationBuilder(customScalarAdapters).apply(block).build(),
  ROOT_FIELD.selections,
  "Mutation",
  resolver,
)
