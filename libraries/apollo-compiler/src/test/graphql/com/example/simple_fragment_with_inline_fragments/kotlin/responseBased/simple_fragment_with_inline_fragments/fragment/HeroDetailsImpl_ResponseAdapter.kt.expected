//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.simple_fragment_with_inline_fragments.fragment

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableDoubleAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.missingField
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Double
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

public object HeroDetailsImpl_ResponseAdapter {
  public object Data : CompositeAdapter<HeroDetailsImpl.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("name", "friends")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        HeroDetailsImpl.Data {
      var _name: String? = null
      var _friends: List<HeroDetailsImpl.Data.Friend?>? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          1 -> _friends = Friend.obj().nullable().list().nullable().fromJson(reader, adapterContext)
          else -> break
        }
      }

      return HeroDetailsImpl.Data(
        name = _name ?: missingField(reader, "name"),
        friends = _friends
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("name")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

      writer.name("friends")
      Friend.obj().nullable().list().nullable().toJson(writer, value.friends, adapterContext)
    }

    private object Friend : CompositeAdapter<HeroDetailsImpl.Data.Friend> {
      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          HeroDetailsImpl.Data.Friend {
        val __typename = reader.readTypename()
        return when(__typename) {
          "Human",
          -> HumanFriend.fromJson(reader, adapterContext, __typename)
          "Droid",
          -> DroidFriend.fromJson(reader, adapterContext, __typename)
          else
          -> OtherFriend.fromJson(reader, adapterContext, __typename)
        }
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.Data.Friend,
        adapterContext: CompositeAdapterContext,
      ) {
        when(value) {
          is HeroDetailsImpl.Data.HumanFriend -> HumanFriend.toJson(writer, value, adapterContext)
          is HeroDetailsImpl.Data.DroidFriend -> DroidFriend.toJson(writer, value, adapterContext)
          is HeroDetailsImpl.Data.OtherFriend -> OtherFriend.toJson(writer, value, adapterContext)
        }
      }
    }

    public object HumanFriend {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "height")

      public fun fromJson(
        reader: JsonReader,
        @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
        typename: String,
      ): HeroDetailsImpl.Data.HumanFriend {
        var __typename: String? = typename
        var _name: String? = null
        var _height: Double? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            2 -> _height = NullableDoubleAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return HeroDetailsImpl.Data.HumanFriend(
          __typename = __typename ?: missingField(reader, "__typename"),
          name = _name ?: missingField(reader, "name"),
          height = _height
        )
      }

      public fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.Data.HumanFriend,
        @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

        writer.name("height")
        NullableDoubleAdapter.toJson(writer, CustomScalarAdapters.Empty, value.height)
      }
    }

    public object DroidFriend {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "primaryFunction")

      public fun fromJson(
        reader: JsonReader,
        @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
        typename: String,
      ): HeroDetailsImpl.Data.DroidFriend {
        var __typename: String? = typename
        var _name: String? = null
        var _primaryFunction: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            2 -> _primaryFunction = NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return HeroDetailsImpl.Data.DroidFriend(
          __typename = __typename ?: missingField(reader, "__typename"),
          name = _name ?: missingField(reader, "name"),
          primaryFunction = _primaryFunction
        )
      }

      public fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.Data.DroidFriend,
        @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

        writer.name("primaryFunction")
        NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.primaryFunction)
      }
    }

    public object OtherFriend {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name")

      public fun fromJson(
        reader: JsonReader,
        @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
        typename: String,
      ): HeroDetailsImpl.Data.OtherFriend {
        var __typename: String? = typename
        var _name: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return HeroDetailsImpl.Data.OtherFriend(
          __typename = __typename ?: missingField(reader, "__typename"),
          name = _name ?: missingField(reader, "name")
        )
      }

      public fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.Data.OtherFriend,
        @Suppress("UNUSED_PARAMETER") adapterContext: CompositeAdapterContext,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)
      }
    }
  }
}
