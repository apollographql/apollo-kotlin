//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.simple_fragment_with_inline_fragments.fragment

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.NullableDoubleApolloAdapter
import com.apollographql.apollo3.api.NullableStringApolloAdapter
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Double
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object HeroDetailsImpl_ResponseAdapter {
  public object Data : ApolloAdapter<HeroDetailsImpl.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("name", "friends")

    public override fun fromJson(reader: JsonReader, context: ApolloAdapter.DataDeserializeContext):
        HeroDetailsImpl.Data {
      var _name: String? = null
      var _friends: List<HeroDetailsImpl.Data.Friend?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _name = StringApolloAdapter.fromJson(reader, context)
          1 -> _friends = Friend.obj().nullable().list().nullable().fromJson(reader, context)
          else -> break
        }
      }

      return HeroDetailsImpl.Data(
        name = _name!!,
        friends = _friends
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      `value`: HeroDetailsImpl.Data,
      context: ApolloAdapter.DataSerializeContext,
    ): Unit {
      writer.name("name")
      StringApolloAdapter.toJson(writer, value.name, context)

      writer.name("friends")
      Friend.obj().nullable().list().nullable().toJson(writer, value.friends, context)
    }

    private object Friend : ApolloAdapter<HeroDetailsImpl.Data.Friend> {
      public override fun fromJson(reader: JsonReader,
          context: ApolloAdapter.DataDeserializeContext): HeroDetailsImpl.Data.Friend {
        val __typename = reader.readTypename()
        return when(__typename) {
          "Human",
          -> HumanFriend.fromJson(reader, context, __typename)
          "Droid",
          -> DroidFriend.fromJson(reader, context, __typename)
          else
          -> OtherFriend.fromJson(reader, context, __typename)
        }
      }

      public override fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.Data.Friend,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        when(value) {
          is HeroDetailsImpl.Data.HumanFriend -> HumanFriend.toJson(writer, value, context)
          is HeroDetailsImpl.Data.DroidFriend -> DroidFriend.toJson(writer, value, context)
          is HeroDetailsImpl.Data.OtherFriend -> OtherFriend.toJson(writer, value, context)
        }
      }
    }

    public object HumanFriend {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "height")

      public fun fromJson(
        reader: JsonReader,
        context: ApolloAdapter.DataDeserializeContext,
        typename: String,
      ): HeroDetailsImpl.Data.HumanFriend {
        var __typename: String? = typename
        var _name: String? = null
        var _height: Double? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringApolloAdapter.fromJson(reader, context)
            1 -> _name = StringApolloAdapter.fromJson(reader, context)
            2 -> _height = NullableDoubleApolloAdapter.fromJson(reader, context)
            else -> break
          }
        }

        return HeroDetailsImpl.Data.HumanFriend(
          __typename = __typename!!,
          name = _name!!,
          height = _height
        )
      }

      public fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.Data.HumanFriend,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        writer.name("__typename")
        StringApolloAdapter.toJson(writer, value.__typename, context)

        writer.name("name")
        StringApolloAdapter.toJson(writer, value.name, context)

        writer.name("height")
        NullableDoubleApolloAdapter.toJson(writer, value.height, context)
      }
    }

    public object DroidFriend {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "primaryFunction")

      public fun fromJson(
        reader: JsonReader,
        context: ApolloAdapter.DataDeserializeContext,
        typename: String,
      ): HeroDetailsImpl.Data.DroidFriend {
        var __typename: String? = typename
        var _name: String? = null
        var _primaryFunction: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringApolloAdapter.fromJson(reader, context)
            1 -> _name = StringApolloAdapter.fromJson(reader, context)
            2 -> _primaryFunction = NullableStringApolloAdapter.fromJson(reader, context)
            else -> break
          }
        }

        return HeroDetailsImpl.Data.DroidFriend(
          __typename = __typename!!,
          name = _name!!,
          primaryFunction = _primaryFunction
        )
      }

      public fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.Data.DroidFriend,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        writer.name("__typename")
        StringApolloAdapter.toJson(writer, value.__typename, context)

        writer.name("name")
        StringApolloAdapter.toJson(writer, value.name, context)

        writer.name("primaryFunction")
        NullableStringApolloAdapter.toJson(writer, value.primaryFunction, context)
      }
    }

    public object OtherFriend {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name")

      public fun fromJson(
        reader: JsonReader,
        context: ApolloAdapter.DataDeserializeContext,
        typename: String,
      ): HeroDetailsImpl.Data.OtherFriend {
        var __typename: String? = typename
        var _name: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringApolloAdapter.fromJson(reader, context)
            1 -> _name = StringApolloAdapter.fromJson(reader, context)
            else -> break
          }
        }

        return HeroDetailsImpl.Data.OtherFriend(
          __typename = __typename!!,
          name = _name!!
        )
      }

      public fun toJson(
        writer: JsonWriter,
        `value`: HeroDetailsImpl.Data.OtherFriend,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        writer.name("__typename")
        StringApolloAdapter.toJson(writer, value.__typename, context)

        writer.name("name")
        StringApolloAdapter.toJson(writer, value.name, context)
      }
    }
  }
}
