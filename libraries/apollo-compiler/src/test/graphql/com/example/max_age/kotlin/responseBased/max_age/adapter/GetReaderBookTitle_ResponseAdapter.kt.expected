//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.max_age.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.NullableStringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.nullable
import com.apollographql.apollo.api.obj
import com.example.max_age.GetReaderBookTitle
import kotlin.String
import kotlin.collections.List

public object GetReaderBookTitle_ResponseAdapter {
  public object Data : Adapter<GetReaderBookTitle.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("reader")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetReaderBookTitle.Data {
      var _reader: GetReaderBookTitle.Data.Reader? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _reader = Reader.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetReaderBookTitle.Data(
        reader = _reader
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetReaderBookTitle.Data,
    ) {
      writer.name("reader")
      Reader.obj().nullable().toJson(writer, customScalarAdapters, value.reader)
    }

    private object Reader : Adapter<GetReaderBookTitle.Data.Reader> {
      public val RESPONSE_NAMES: List<String> = listOf("book")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          GetReaderBookTitle.Data.Reader {
        var _book: GetReaderBookTitle.Data.Reader.Book? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _book = Book.obj().nullable().fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return GetReaderBookTitle.Data.Reader(
          book = _book
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: GetReaderBookTitle.Data.Reader,
      ) {
        writer.name("book")
        Book.obj().nullable().toJson(writer, customScalarAdapters, value.book)
      }

      private object Book : Adapter<GetReaderBookTitle.Data.Reader.Book> {
        public val RESPONSE_NAMES: List<String> = listOf("title")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
            GetReaderBookTitle.Data.Reader.Book {
          var _title: String? = null

          while (true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _title = NullableStringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return GetReaderBookTitle.Data.Reader.Book(
            title = _title
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: GetReaderBookTitle.Data.Reader.Book,
        ) {
          writer.name("title")
          NullableStringAdapter.toJson(writer, customScalarAdapters, value.title)
        }
      }
    }
  }
}
