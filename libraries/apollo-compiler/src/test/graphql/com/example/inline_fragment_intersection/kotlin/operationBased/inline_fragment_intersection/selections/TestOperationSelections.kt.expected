//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_intersection.selections

import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CompiledFragment
import com.apollographql.apollo.api.CompiledSelection
import com.apollographql.apollo.api.list
import com.apollographql.apollo.api.notNull
import com.example.inline_fragment_intersection.type.Anything
import com.example.inline_fragment_intersection.type.Being
import com.example.inline_fragment_intersection.type.GraphQLBoolean
import com.example.inline_fragment_intersection.type.GraphQLFloat
import com.example.inline_fragment_intersection.type.GraphQLString
import com.example.inline_fragment_intersection.type.Race
import kotlin.collections.List

public object TestOperationSelections {
  private val __onWookie: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "lifeExpectancy",
          type = GraphQLFloat.type
        ).build()
      )

  private val __friends: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Wookie",
          possibleTypes = listOf("Wookie")
        ).selections(__onWookie)
        .build()
      )

  private val __onWookie1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "race",
          type = Race.type.notNull()
        ).build()
      )

  private val __friends1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "isFamous",
          type = GraphQLBoolean.type
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Wookie",
          possibleTypes = listOf("Wookie")
        ).selections(__onWookie1)
        .build()
      )

  private val __onHuman: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "profilePictureUrl",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "friends",
          type = Being.type.notNull().list().notNull()
        ).selections(__friends1)
        .build()
      )

  private val __onBeing: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "friends",
          type = Being.type.notNull().list().notNull()
        ).selections(__friends)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Human",
          possibleTypes = listOf("Human")
        ).selections(__onHuman)
        .build()
      )

  private val __friends2: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "lifeExpectancy",
          type = GraphQLFloat.type
        ).build()
      )

  private val __onWookie2: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "race",
          type = Race.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "friends",
          type = Being.type.notNull().list().notNull()
        ).selections(__friends2)
        .build()
      )

  private val __onWookie3: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "lifeExpectancy",
          type = GraphQLFloat.type
        ).build()
      )

  private val __friends3: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Wookie",
          possibleTypes = listOf("Wookie")
        ).selections(__onWookie3)
        .build()
      )

  private val __onBeing1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "friends",
          type = Being.type.notNull().list().notNull()
        ).selections(__friends3)
        .build()
      )

  private val __random: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Being",
          possibleTypes = listOf("Human", "Wookie")
        ).selections(__onBeing)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Wookie",
          possibleTypes = listOf("Wookie")
        ).selections(__onWookie2)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Being",
          possibleTypes = listOf("Human", "Wookie")
        ).selections(__onBeing1)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "random",
          type = Anything.type.notNull()
        ).selections(__random)
        .build()
      )
}
