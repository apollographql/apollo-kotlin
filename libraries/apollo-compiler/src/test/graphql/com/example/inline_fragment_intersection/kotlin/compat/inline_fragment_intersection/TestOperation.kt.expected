//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_intersection

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter
import com.example.inline_fragment_intersection.selections.TestOperationSelections
import com.example.inline_fragment_intersection.type.Race
import kotlin.Any
import kotlin.Boolean
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class TestOperation() : Query<TestOperation.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = TestOperation_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.inline_fragment_intersection.type.Query.type
  )
  .selections(selections = TestOperationSelections.__root)
  .build()

  @ApolloAdaptableWith(TestOperation_ResponseAdapter.Data::class)
  public data class Data(
    public val random: Random,
  ) : Query.Data

  public data class Random(
    public val __typename: String,
    /**
     * Synthetic field for inline fragment on Being
     */
    public val asBeing: AsBeing?,
    /**
     * Synthetic field for inline fragment on Wookie
     */
    public val asWookie2: AsWookie2?,
  )

  public data class AsBeing(
    public val __typename: String,
    public val name: String,
    public val friends: List<Friend1>,
    /**
     * Synthetic field for inline fragment on Human
     */
    public val asHuman: AsHuman?,
  )

  public data class Friend1(
    public val __typename: String,
    public val name: String,
    /**
     * Synthetic field for inline fragment on Wookie
     */
    public val asWookie1: AsWookie1?,
  )

  public data class AsWookie1(
    public val __typename: String,
    public val name: String,
    public val lifeExpectancy: Double?,
  )

  public data class AsHuman(
    public val __typename: String,
    public val name: String,
    public val friends: List<Friend>,
    public val profilePictureUrl: String?,
  )

  public data class Friend(
    public val __typename: String,
    public val name: String,
    public val isFamous: Boolean?,
    /**
     * Synthetic field for inline fragment on Wookie
     */
    public val asWookie: AsWookie?,
  )

  public data class AsWookie(
    public val __typename: String,
    public val name: String,
    public val isFamous: Boolean?,
    public val lifeExpectancy: Double?,
    public val race: Race,
  )

  public data class AsWookie2(
    public val __typename: String,
    public val race: Race,
    public val friends: List<Friend2>,
  )

  public data class Friend2(
    public val lifeExpectancy: Double?,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "c99acd467295cdc6cf49f2f0e260f5879de276fba742d6faa161453e53fbf9d4"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestOperation {
     *   random {
     *     __typename
     *     ... on Being {
     *       __typename
     *       name
     *       friends {
     *         __typename
     *         name
     *         ... on Wookie {
     *           lifeExpectancy
     *         }
     *       }
     *       ... on Human {
     *         profilePictureUrl
     *         friends {
     *           __typename
     *           isFamous
     *           ... on Wookie {
     *             race
     *           }
     *         }
     *       }
     *     }
     *     ... on Wookie {
     *       race
     *       friends {
     *         lifeExpectancy
     *       }
     *     }
     *     ... on Being {
     *       friends {
     *         __typename
     *         ... on Wookie {
     *           lifeExpectancy
     *         }
     *       }
     *     }
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query TestOperation { random { __typename ... on Being { __typename name friends { __typename name ... on Wookie { lifeExpectancy } } ... on Human { profilePictureUrl friends { __typename isFamous ... on Wookie { race } } } } ... on Wookie { race friends { lifeExpectancy } } ... on Being { friends { __typename ... on Wookie { lifeExpectancy } } } } }"

    public const val OPERATION_NAME: String = "TestOperation"
  }
}
