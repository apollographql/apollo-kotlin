//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_intersection.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.BPossibleTypes;
import com.apollographql.apollo3.api.BTerm;
import com.apollographql.apollo3.api.BooleanExpression;
import com.apollographql.apollo3.api.BooleanExpressions;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ListCompositeAdapter;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.inline_fragment_intersection.TestOperation;
import com.example.inline_fragment_intersection.type.Race;
import com.example.inline_fragment_intersection.type.adapter.Race_ResponseAdapter;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class TestOperation_ResponseAdapter {
  public enum Data implements CompositeAdapter<TestOperation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("random");

    @Override
    public TestOperation.Data deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      TestOperation.Random _random = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _random = new ObjectCompositeAdapter<TestOperation.Random>(Random.INSTANCE, true).deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_random, "random");

      return new TestOperation.Data(
        _random
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.Data value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("random");
      new ObjectCompositeAdapter<TestOperation.Random>(Random.INSTANCE, true).serializeComposite(writer, value.random, context);
    }
  }

  public enum Random implements CompositeAdapter<TestOperation.Random> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public TestOperation.Random deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      TestOperation.OnBeing _onBeing = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Human","Wookie")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onBeing = com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnBeing.INSTANCE.deserializeComposite(reader, context);
      }

      TestOperation.OnWookie2 _onWookie = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Wookie")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onWookie = com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnWookie2.INSTANCE.deserializeComposite(reader, context);
      }

      return new TestOperation.Random(
        __typename,
        _onBeing,
        _onWookie
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.Random value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      if (value.onBeing != null) {
        com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnBeing.INSTANCE.serializeComposite(writer, value.onBeing, context);
      }

      if (value.onWookie != null) {
        com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnWookie2.INSTANCE.serializeComposite(writer, value.onWookie, context);
      }
    }
  }

  public enum OnBeing implements CompositeAdapter<TestOperation.OnBeing> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename", "name", "friends");

    @Override
    public TestOperation.OnBeing deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String __typename = null;
      String _name = null;
      List<TestOperation.Friend> _friends = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 1: _name = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 2: _friends = new ListCompositeAdapter<>(new ObjectCompositeAdapter<TestOperation.Friend>(Friend.INSTANCE, true)).deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      TestOperation.OnHuman _onHuman = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Human")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onHuman = com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnHuman.INSTANCE.deserializeComposite(reader, context);
      }

      Assertions.checkFieldNotMissing(_name, "name");
      Assertions.checkFieldNotMissing(_friends, "friends");

      return new TestOperation.OnBeing(
        __typename,
        _name,
        _friends,
        _onHuman
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.OnBeing value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      writer.name("name");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name);

      writer.name("friends");
      new ListCompositeAdapter<>(new ObjectCompositeAdapter<TestOperation.Friend>(Friend.INSTANCE, true)).serializeComposite(writer, value.friends, context);

      if (value.onHuman != null) {
        com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnHuman.INSTANCE.serializeComposite(writer, value.onHuman, context);
      }
    }
  }

  public enum Friend implements CompositeAdapter<TestOperation.Friend> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename", "name");

    @Override
    public TestOperation.Friend deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String __typename = null;
      String _name = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 1: _name = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      TestOperation.OnWookie _onWookie = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Wookie")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onWookie = com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnWookie.INSTANCE.deserializeComposite(reader, context);
      }

      Assertions.checkFieldNotMissing(_name, "name");

      return new TestOperation.Friend(
        __typename,
        _name,
        _onWookie
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.Friend value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      writer.name("name");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name);

      if (value.onWookie != null) {
        com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnWookie.INSTANCE.serializeComposite(writer, value.onWookie, context);
      }
    }
  }

  public enum OnWookie implements CompositeAdapter<TestOperation.OnWookie> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("lifeExpectancy");

    @Override
    public TestOperation.OnWookie deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      Double _lifeExpectancy = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _lifeExpectancy = Adapters.NullableDoubleAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      return new TestOperation.OnWookie(
        _lifeExpectancy
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.OnWookie value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("lifeExpectancy");
      Adapters.NullableDoubleAdapter.toJson(writer, CustomScalarAdapters.Empty, value.lifeExpectancy);
    }
  }

  public enum OnHuman implements CompositeAdapter<TestOperation.OnHuman> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("profilePictureUrl", "friends");

    @Override
    public TestOperation.OnHuman deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String _profilePictureUrl = null;
      List<TestOperation.Friend1> _friends = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _profilePictureUrl = Adapters.NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 1: _friends = new ListCompositeAdapter<>(new ObjectCompositeAdapter<TestOperation.Friend1>(Friend1.INSTANCE, true)).deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_friends, "friends");

      return new TestOperation.OnHuman(
        _profilePictureUrl,
        _friends
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.OnHuman value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("profilePictureUrl");
      Adapters.NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.profilePictureUrl);

      writer.name("friends");
      new ListCompositeAdapter<>(new ObjectCompositeAdapter<TestOperation.Friend1>(Friend1.INSTANCE, true)).serializeComposite(writer, value.friends, context);
    }
  }

  public enum Friend1 implements CompositeAdapter<TestOperation.Friend1> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename", "isFamous");

    @Override
    public TestOperation.Friend1 deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      String __typename = null;
      Boolean _isFamous = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          case 1: _isFamous = Adapters.NullableBooleanAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(__typename, "__typename");
      TestOperation.OnWookie1 _onWookie = null;
      if (BooleanExpressions.evaluate(new BooleanExpression.Element<BTerm>(new BPossibleTypes("Wookie")), context.falseBooleanVariables, __typename, context, null)) {
        reader.rewind();
        _onWookie = com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnWookie1.INSTANCE.deserializeComposite(reader, context);
      }

      return new TestOperation.Friend1(
        __typename,
        _isFamous,
        _onWookie
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.Friend1 value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename);

      writer.name("isFamous");
      Adapters.NullableBooleanAdapter.toJson(writer, CustomScalarAdapters.Empty, value.isFamous);

      if (value.onWookie != null) {
        com.example.inline_fragment_intersection.adapter.TestOperation_ResponseAdapter.OnWookie1.INSTANCE.serializeComposite(writer, value.onWookie, context);
      }
    }
  }

  public enum OnWookie1 implements CompositeAdapter<TestOperation.OnWookie1> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("race");

    @Override
    public TestOperation.OnWookie1 deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      Race _race = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _race = Race_ResponseAdapter.INSTANCE.deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_race, "race");

      return new TestOperation.OnWookie1(
        _race
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.OnWookie1 value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("race");
      Race_ResponseAdapter.INSTANCE.serializeComposite(writer, value.race, context);
    }
  }

  public enum OnWookie2 implements CompositeAdapter<TestOperation.OnWookie2> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("race", "friends");

    @Override
    public TestOperation.OnWookie2 deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      Race _race = null;
      List<TestOperation.Friend2> _friends = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _race = Race_ResponseAdapter.INSTANCE.deserializeComposite(reader, context); break;
          case 1: _friends = new ListCompositeAdapter<>(new ObjectCompositeAdapter<TestOperation.Friend2>(Friend2.INSTANCE, false)).deserializeComposite(reader, context); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_race, "race");
      Assertions.checkFieldNotMissing(_friends, "friends");

      return new TestOperation.OnWookie2(
        _race,
        _friends
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.OnWookie2 value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("race");
      Race_ResponseAdapter.INSTANCE.serializeComposite(writer, value.race, context);

      writer.name("friends");
      new ListCompositeAdapter<>(new ObjectCompositeAdapter<TestOperation.Friend2>(Friend2.INSTANCE, false)).serializeComposite(writer, value.friends, context);
    }
  }

  public enum Friend2 implements CompositeAdapter<TestOperation.Friend2> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("lifeExpectancy");

    @Override
    public TestOperation.Friend2 deserializeComposite(JsonReader reader,
        CompositeAdapter.DeserializeCompositeContext context) throws IOException {
      Double _lifeExpectancy = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _lifeExpectancy = Adapters.NullableDoubleAdapter.fromJson(reader, CustomScalarAdapters.Empty); break;
          default: break loop;
        }
      }

      return new TestOperation.Friend2(
        _lifeExpectancy
      );
    }

    @Override
    public void serializeComposite(JsonWriter writer, TestOperation.Friend2 value,
        CompositeAdapter.SerializeCompositeContext context) throws IOException {
      writer.name("lifeExpectancy");
      Adapters.NullableDoubleAdapter.toJson(writer, CustomScalarAdapters.Empty, value.lifeExpectancy);
    }
  }
}
