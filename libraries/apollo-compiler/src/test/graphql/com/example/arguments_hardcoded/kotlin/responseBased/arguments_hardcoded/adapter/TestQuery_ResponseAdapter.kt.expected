//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.arguments_hardcoded.adapter

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.IntApolloAdapter
import com.apollographql.apollo3.api.NullableStringApolloAdapter
import com.apollographql.apollo3.api.ScalarAdapters
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.arguments_hardcoded.TestQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : ApolloAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("reviews", "testNullableArguments")

    public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
        TestQuery.Data {
      var _reviews: List<TestQuery.Data.Review?>? = null
      var _testNullableArguments: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _reviews = Review.obj().nullable().list().nullable().fromJson(reader, scalarAdapters)
          1 -> _testNullableArguments = IntApolloAdapter.fromJson(reader, scalarAdapters)
          else -> break
        }
      }

      return TestQuery.Data(
        reviews = _reviews,
        testNullableArguments = _testNullableArguments!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      scalarAdapters: ScalarAdapters,
      `value`: TestQuery.Data,
    ): Unit {
      writer.name("reviews")
      Review.obj().nullable().list().nullable().toJson(writer, scalarAdapters, value.reviews)

      writer.name("testNullableArguments")
      IntApolloAdapter.toJson(writer, scalarAdapters, value.testNullableArguments)
    }

    private object Review : ApolloAdapter<TestQuery.Data.Review> {
      public val RESPONSE_NAMES: List<String> = listOf("stars", "commentary")

      public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
          TestQuery.Data.Review {
        var _stars: Int? = null
        var _commentary: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _stars = IntApolloAdapter.fromJson(reader, scalarAdapters)
            1 -> _commentary = NullableStringApolloAdapter.fromJson(reader, scalarAdapters)
            else -> break
          }
        }

        return TestQuery.Data.Review(
          stars = _stars!!,
          commentary = _commentary
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        scalarAdapters: ScalarAdapters,
        `value`: TestQuery.Data.Review,
      ): Unit {
        writer.name("stars")
        IntApolloAdapter.toJson(writer, scalarAdapters, value.stars)

        writer.name("commentary")
        NullableStringApolloAdapter.toJson(writer, scalarAdapters, value.commentary)
      }
    }
  }
}
