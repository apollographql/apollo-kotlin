//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.suppressed_warnings.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.suppressed_warnings.CatQuery;
import com.example.suppressed_warnings.type.Filter;
import com.example.suppressed_warnings.type.adapter.Filter_InputAdapter;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum CatQuery_VariablesAdapter implements Adapter<CatQuery> {
  INSTANCE;

  @Override
  public CatQuery fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters) throws
      IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters, CatQuery value)
      throws IOException {
    if (value.filter instanceof Optional.Present) {
      writer.name("filter");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ObjectAdapter<Filter>(Filter_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.filter);
    }
  }
}
