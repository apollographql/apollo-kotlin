//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.suppressed_warnings.type.adapter

import com.apollographql.apollo3.annotations.ApolloRequiresOptIn
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.present
import com.example.suppressed_warnings.type.Filter
import kotlin.IllegalStateException
import kotlin.OptIn
import kotlin.Suppress
import kotlin.Unit

@Suppress("DEPRECATION")
@OptIn(ApolloRequiresOptIn::class)
public object Filter_InputAdapter : Adapter<Filter> {
  public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      Filter = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: Filter,
  ): Unit {
    if (value.name is Optional.Present) {
      writer.name("name")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.name)
    }
    if (value.deprecated is Optional.Present) {
      writer.name("deprecated")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.deprecated)
    }
    if (value.experimental is Optional.Present) {
      writer.name("experimental")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.experimental)
    }
  }
}
