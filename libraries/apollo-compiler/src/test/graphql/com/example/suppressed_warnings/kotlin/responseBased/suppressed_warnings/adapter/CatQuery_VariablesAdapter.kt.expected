//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.suppressed_warnings.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.present
import com.example.suppressed_warnings.CatQuery
import com.example.suppressed_warnings.type.adapter.Filter_InputAdapter
import kotlin.IllegalStateException
import kotlin.Unit

public object CatQuery_VariablesAdapter : Adapter<CatQuery> {
  public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      CatQuery = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: CatQuery,
  ): Unit {
    if (value.filter is Optional.Present) {
      writer.name("filter")
      Filter_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.filter)
    }
  }
}
