//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.suppressed_warnings.type.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.DataAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.suppressed_warnings.type.Filter;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;
import java.lang.SuppressWarnings;

@SuppressWarnings("deprecation")
public enum Filter_InputAdapter implements DataAdapter<Filter> {
  INSTANCE;

  @Override
  public Filter deserializeData(JsonReader reader, DataAdapter.DeserializeDataContext context)
      throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void serializeData(JsonWriter writer, Filter value,
      DataAdapter.SerializeDataContext context) throws IOException {
    if (value.name instanceof Optional.Present) {
      writer.name("name");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, CustomScalarAdapters.Empty, value.name);
    }
    if (value.deprecated instanceof Optional.Present) {
      writer.name("deprecated");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, CustomScalarAdapters.Empty, value.deprecated);
    }
    if (value.experimental instanceof Optional.Present) {
      writer.name("experimental");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, CustomScalarAdapters.Empty, value.experimental);
    }
  }
}
