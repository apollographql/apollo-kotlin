//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.java_android_annotations.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.IntAdapter
import com.apollographql.apollo.api.NullableIntAdapter
import com.apollographql.apollo.api.NullableStringAdapter
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.list
import com.apollographql.apollo.api.missingField
import com.apollographql.apollo.api.nullable
import com.apollographql.apollo.api.obj
import com.example.java_android_annotations.MyQuery
import kotlin.Int
import kotlin.String
import kotlin.collections.List

public object MyQuery_ResponseAdapter {
  public object Data : Adapter<MyQuery.Data> {
    public val RESPONSE_NAMES: List<String> =
        listOf("nullableInt", "nonNullableInt", "nullableMyType", "nonNullableMyType", "nullableListOfNullableString", "nullableListOfNonNullableString")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): MyQuery.Data {
      var _nullableInt: Int? = null
      var _nonNullableInt: Int? = null
      var _nullableMyType: MyQuery.Data.NullableMyType? = null
      var _nonNullableMyType: MyQuery.Data.NonNullableMyType? = null
      var _nullableListOfNullableString: List<String?>? = null
      var _nullableListOfNonNullableString: List<String>? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _nullableInt = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          1 -> _nonNullableInt = IntAdapter.fromJson(reader, customScalarAdapters)
          2 -> _nullableMyType = NullableMyType.obj().nullable().fromJson(reader, customScalarAdapters)
          3 -> _nonNullableMyType = NonNullableMyType.obj().fromJson(reader, customScalarAdapters)
          4 -> _nullableListOfNullableString = NullableStringAdapter.list().nullable().fromJson(reader, customScalarAdapters)
          5 -> _nullableListOfNonNullableString = StringAdapter.list().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return MyQuery.Data(
        nullableInt = _nullableInt,
        nonNullableInt = _nonNullableInt ?: missingField(reader, "nonNullableInt"),
        nullableMyType = _nullableMyType,
        nonNullableMyType = _nonNullableMyType ?: missingField(reader, "nonNullableMyType"),
        nullableListOfNullableString = _nullableListOfNullableString,
        nullableListOfNonNullableString = _nullableListOfNonNullableString
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: MyQuery.Data,
    ) {
      writer.name("nullableInt")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.nullableInt)

      writer.name("nonNullableInt")
      IntAdapter.toJson(writer, customScalarAdapters, value.nonNullableInt)

      writer.name("nullableMyType")
      NullableMyType.obj().nullable().toJson(writer, customScalarAdapters, value.nullableMyType)

      writer.name("nonNullableMyType")
      NonNullableMyType.obj().toJson(writer, customScalarAdapters, value.nonNullableMyType)

      writer.name("nullableListOfNullableString")
      NullableStringAdapter.list().nullable().toJson(writer, customScalarAdapters, value.nullableListOfNullableString)

      writer.name("nullableListOfNonNullableString")
      StringAdapter.list().nullable().toJson(writer, customScalarAdapters, value.nullableListOfNonNullableString)
    }

    private object NullableMyType : Adapter<MyQuery.Data.NullableMyType> {
      public val RESPONSE_NAMES: List<String> = listOf("nullableInt", "nonNullableInt")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): MyQuery.Data.NullableMyType {
        var _nullableInt: Int? = null
        var _nonNullableInt: Int? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _nullableInt = NullableIntAdapter.fromJson(reader, customScalarAdapters)
            1 -> _nonNullableInt = IntAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return MyQuery.Data.NullableMyType(
          nullableInt = _nullableInt,
          nonNullableInt = _nonNullableInt ?: missingField(reader, "nonNullableInt")
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: MyQuery.Data.NullableMyType,
      ) {
        writer.name("nullableInt")
        NullableIntAdapter.toJson(writer, customScalarAdapters, value.nullableInt)

        writer.name("nonNullableInt")
        IntAdapter.toJson(writer, customScalarAdapters, value.nonNullableInt)
      }
    }

    private object NonNullableMyType : Adapter<MyQuery.Data.NonNullableMyType> {
      public val RESPONSE_NAMES: List<String> = listOf("nullableInt", "nonNullableInt")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): MyQuery.Data.NonNullableMyType {
        var _nullableInt: Int? = null
        var _nonNullableInt: Int? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _nullableInt = NullableIntAdapter.fromJson(reader, customScalarAdapters)
            1 -> _nonNullableInt = IntAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return MyQuery.Data.NonNullableMyType(
          nullableInt = _nullableInt,
          nonNullableInt = _nonNullableInt ?: missingField(reader, "nonNullableInt")
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: MyQuery.Data.NonNullableMyType,
      ) {
        writer.name("nullableInt")
        NullableIntAdapter.toJson(writer, customScalarAdapters, value.nullableInt)

        writer.name("nonNullableInt")
        IntAdapter.toJson(writer, customScalarAdapters, value.nonNullableInt)
      }
    }
  }
}
