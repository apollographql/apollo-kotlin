//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.mutation_create_review_semantic_naming.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloAdapter;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.ScalarAdapters;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.mutation_create_review_semantic_naming.CreateReviewForEpisodeMutation;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class CreateReviewForEpisodeMutation_ResponseAdapter {
  public enum Data implements ApolloAdapter<CreateReviewForEpisodeMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("createReview");

    @Override
    public CreateReviewForEpisodeMutation.Data fromJson(JsonReader reader,
        ScalarAdapters scalarAdapters) throws IOException {
      CreateReviewForEpisodeMutation.CreateReview _createReview = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _createReview = new NullableAdapter<>(new ObjectAdapter<CreateReviewForEpisodeMutation.CreateReview>(CreateReview.INSTANCE, false)).fromJson(reader, scalarAdapters); break;
          default: break loop;
        }
      }

      return new CreateReviewForEpisodeMutation.Data(
        _createReview
      );
    }

    @Override
    public void toJson(JsonWriter writer, ScalarAdapters scalarAdapters,
        CreateReviewForEpisodeMutation.Data value) throws IOException {
      writer.name("createReview");
      new NullableAdapter<>(new ObjectAdapter<CreateReviewForEpisodeMutation.CreateReview>(CreateReview.INSTANCE, false)).toJson(writer, scalarAdapters, value.createReview);
    }
  }

  public enum CreateReview implements ApolloAdapter<CreateReviewForEpisodeMutation.CreateReview> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("stars", "commentary");

    @Override
    public CreateReviewForEpisodeMutation.CreateReview fromJson(JsonReader reader,
        ScalarAdapters scalarAdapters) throws IOException {
      Integer _stars = null;
      String _commentary = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _stars = Adapters.IntApolloAdapter.fromJson(reader, scalarAdapters); break;
          case 1: _commentary = Adapters.NullableStringApolloAdapter.fromJson(reader, scalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_stars, "stars");

      return new CreateReviewForEpisodeMutation.CreateReview(
        _stars,
        _commentary
      );
    }

    @Override
    public void toJson(JsonWriter writer, ScalarAdapters scalarAdapters,
        CreateReviewForEpisodeMutation.CreateReview value) throws IOException {
      writer.name("stars");
      Adapters.IntApolloAdapter.toJson(writer, scalarAdapters, value.stars);

      writer.name("commentary");
      Adapters.NullableStringApolloAdapter.toJson(writer, scalarAdapters, value.commentary);
    }
  }
}
