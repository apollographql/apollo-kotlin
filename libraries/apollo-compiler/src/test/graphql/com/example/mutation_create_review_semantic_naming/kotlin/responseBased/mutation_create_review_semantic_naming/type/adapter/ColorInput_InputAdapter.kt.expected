//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.mutation_create_review_semantic_naming.type.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.DoubleAdapter
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableDoubleAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.present
import com.example.mutation_create_review_semantic_naming.type.ColorInput
import kotlin.IllegalStateException

public object ColorInput_InputAdapter : CompositeAdapter<ColorInput> {
  override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext): ColorInput =
      throw IllegalStateException("Input type used in output position")

  override fun toJson(
    writer: JsonWriter,
    `value`: ColorInput,
    adapterContext: CompositeAdapterContext,
  ) {
    if (value.red is Optional.Present) {
      writer.name("red")
      IntAdapter.present().toJson(writer, CustomScalarAdapters.Empty, value.red)
    }
    if (value.green is Optional.Present) {
      writer.name("green")
      NullableDoubleAdapter.present().toJson(writer, CustomScalarAdapters.Empty, value.green)
    }
    if (value.blue is Optional.Present) {
      writer.name("blue")
      DoubleAdapter.present().toJson(writer, CustomScalarAdapters.Empty, value.blue)
    }
    if (value.enumWithDefaultValue is Optional.Present) {
      writer.name("enumWithDefaultValue")
      Episode_ResponseAdapter.nullable().present().toJson(writer, CustomScalarAdapters.Empty,
          value.enumWithDefaultValue)
    }
    if (value.reviewRefInput is Optional.Present) {
      writer.name("reviewRefInput")
      ReviewRefInput_InputAdapter.obj().nullable().present().toJson(writer, value.reviewRefInput,
          adapterContext)
    }
  }
}
