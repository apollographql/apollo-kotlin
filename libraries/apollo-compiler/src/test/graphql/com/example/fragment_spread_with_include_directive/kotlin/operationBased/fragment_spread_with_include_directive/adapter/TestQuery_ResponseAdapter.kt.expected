//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_spread_with_include_directive.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CompositeAdapterContext
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableBooleanAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.and
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.not
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.apollographql.apollo3.api.variable
import com.example.fragment_spread_with_include_directive.TestQuery
import com.example.fragment_spread_with_include_directive.fragment.DroidDetails
import com.example.fragment_spread_with_include_directive.fragment.HeroDetails
import com.example.fragment_spread_with_include_directive.fragment.HumanDetails
import com.example.fragment_spread_with_include_directive.fragment.OtherDroidDetails
import kotlin.Boolean
import kotlin.String
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : CompositeAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("hero", "getBoolean")

    override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
        TestQuery.Data {
      var _hero: TestQuery.Data.Hero? = null
      var _getBoolean: Boolean? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _hero = Hero.obj(true).nullable().fromJson(reader, adapterContext)
          1 -> _getBoolean = NullableBooleanAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          else -> break
        }
      }

      return TestQuery.Data(
        hero = _hero,
        getBoolean = _getBoolean
      )
    }

    override fun toJson(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      adapterContext: CompositeAdapterContext,
    ) {
      writer.name("hero")
      Hero.obj(true).nullable().toJson(writer, value.hero, adapterContext)

      writer.name("getBoolean")
      NullableBooleanAdapter.toJson(writer, CustomScalarAdapters.Empty, value.getBoolean)
    }

    private object Hero : CompositeAdapter<TestQuery.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

      override fun fromJson(reader: JsonReader, adapterContext: CompositeAdapterContext):
          TestQuery.Data.Hero {
        var __typename: String? = null
        var _id: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _id = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        var _heroDetails: HeroDetails? = null
        if (and(variable("withDetails"),not(variable("skipHumanDetails"))).evaluate(adapterContext.falseVariables, null, adapterContext.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _heroDetails = com.example.fragment_spread_with_include_directive.fragment.HeroDetailsImpl_ResponseAdapter.HeroDetails.fromJson(reader,
              adapterContext)
        }

        var _humanDetails: HumanDetails? = null
        if (and(possibleTypes("Human"),variable("withDetails")).evaluate(adapterContext.falseVariables, __typename, adapterContext.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _humanDetails = com.example.fragment_spread_with_include_directive.fragment.HumanDetailsImpl_ResponseAdapter.HumanDetails.fromJson(reader,
              adapterContext)
        }

        var _droidDetails: DroidDetails? = null
        if (and(possibleTypes("Droid"),not(variable("optionalWithDefaultTrue"))).evaluate(adapterContext.falseVariables, __typename, adapterContext.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _droidDetails = com.example.fragment_spread_with_include_directive.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.fromJson(reader,
              adapterContext)
        }

        var _otherDroidDetails: OtherDroidDetails? = null
        if (and(possibleTypes("Droid"),variable("optionalWithDefaultTrue")).evaluate(adapterContext.falseVariables, __typename, adapterContext.deferredFragmentIdentifiers, null)) {
          reader.rewind()
          _otherDroidDetails = com.example.fragment_spread_with_include_directive.fragment.OtherDroidDetailsImpl_ResponseAdapter.OtherDroidDetails.fromJson(reader,
              adapterContext)
        }

        return TestQuery.Data.Hero(
          __typename = __typename,
          id = _id!!,
          heroDetails = _heroDetails,
          humanDetails = _humanDetails,
          droidDetails = _droidDetails,
          otherDroidDetails = _otherDroidDetails
        )
      }

      override fun toJson(
        writer: JsonWriter,
        `value`: TestQuery.Data.Hero,
        adapterContext: CompositeAdapterContext,
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        writer.name("id")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.id)

        if (value.heroDetails != null) {
          com.example.fragment_spread_with_include_directive.fragment.HeroDetailsImpl_ResponseAdapter.HeroDetails.toJson(writer,
              value.heroDetails, adapterContext)
        }

        if (value.humanDetails != null) {
          com.example.fragment_spread_with_include_directive.fragment.HumanDetailsImpl_ResponseAdapter.HumanDetails.toJson(writer,
              value.humanDetails, adapterContext)
        }

        if (value.droidDetails != null) {
          com.example.fragment_spread_with_include_directive.fragment.DroidDetailsImpl_ResponseAdapter.DroidDetails.toJson(writer,
              value.droidDetails, adapterContext)
        }

        if (value.otherDroidDetails != null) {
          com.example.fragment_spread_with_include_directive.fragment.OtherDroidDetailsImpl_ResponseAdapter.OtherDroidDetails.toJson(writer,
              value.otherDroidDetails, adapterContext)
        }
      }
    }
  }
}
