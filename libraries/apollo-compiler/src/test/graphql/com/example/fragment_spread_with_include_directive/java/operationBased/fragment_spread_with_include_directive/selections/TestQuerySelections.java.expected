//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_spread_with_include_directive.selections;

import com.apollographql.apollo.api.CompiledArgument;
import com.apollographql.apollo.api.CompiledCondition;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CompiledFragment;
import com.apollographql.apollo.api.CompiledNotNullType;
import com.apollographql.apollo.api.CompiledSelection;
import com.apollographql.apollo.api.CompiledVariable;
import com.example.fragment_spread_with_include_directive.fragment.selections.DroidDetailsSelections;
import com.example.fragment_spread_with_include_directive.fragment.selections.HeroDetailsSelections;
import com.example.fragment_spread_with_include_directive.fragment.selections.HumanDetailsSelections;
import com.example.fragment_spread_with_include_directive.fragment.selections.OtherDroidDetailsSelections;
import com.example.fragment_spread_with_include_directive.type.Character;
import com.example.fragment_spread_with_include_directive.type.GraphQLBoolean;
import com.example.fragment_spread_with_include_directive.type.GraphQLID;
import com.example.fragment_spread_with_include_directive.type.GraphQLString;
import com.example.fragment_spread_with_include_directive.type.Query;
import java.util.Arrays;
import java.util.List;

public class TestQuerySelections {
  private static List<CompiledSelection> __hero = Arrays.asList(
    new CompiledField.Builder("__typename", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("id", new CompiledNotNullType(GraphQLID.type)).build(),
    new CompiledFragment.Builder("Character", Arrays.asList("Droid", "Human")).condition(Arrays.asList(new CompiledCondition("withDetails", false), new CompiledCondition("skipHumanDetails", true))).selections(HeroDetailsSelections.__root).build(),
    new CompiledFragment.Builder("Human", Arrays.asList("Human")).condition(Arrays.asList(new CompiledCondition("withDetails", false))).selections(HumanDetailsSelections.__root).build(),
    new CompiledFragment.Builder("Droid", Arrays.asList("Droid")).condition(Arrays.asList(new CompiledCondition("optionalWithDefaultTrue", true))).selections(DroidDetailsSelections.__root).build(),
    new CompiledFragment.Builder("Droid", Arrays.asList("Droid")).condition(Arrays.asList(new CompiledCondition("optionalWithDefaultTrue", false))).selections(OtherDroidDetailsSelections.__root).build()
  );

  public static List<CompiledSelection> __root = Arrays.asList(
    new CompiledField.Builder("hero", Character.type).selections(__hero).build(),
    new CompiledField.Builder("getBoolean", GraphQLBoolean.type).arguments(Arrays.asList(new CompiledArgument.Builder(Query.__getBoolean_booleanArg).value(new CompiledVariable("optionalWithNoDefault")).build())).build()
  );
}
