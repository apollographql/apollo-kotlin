//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_spread_with_include_directive.adapter

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.BooleanApolloAdapter
import com.apollographql.apollo3.api.NullableBooleanApolloAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.VariablesAdapter
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.present
import com.example.fragment_spread_with_include_directive.TestQuery
import kotlin.Unit

public object TestQuery_VariablesAdapter : VariablesAdapter<TestQuery> {
  public override fun serializeVariables(
    writer: JsonWriter,
    `value`: TestQuery,
    context: VariablesAdapter.SerializeVariablesContext,
  ): Unit {
    val serializeDataContext = ApolloAdapter.DataSerializeContext(context.scalarAdapters)
    writer.name("withDetails")
    BooleanApolloAdapter.toJson(writer, value.withDetails, serializeDataContext)
    writer.name("skipHumanDetails")
    BooleanApolloAdapter.toJson(writer, value.skipHumanDetails, serializeDataContext)
    if (value.optionalWithDefaultFalse is Optional.Present) {
      writer.name("optionalWithDefaultFalse")
      NullableBooleanApolloAdapter.present().toJson(writer, value.optionalWithDefaultFalse,
          serializeDataContext)
    }
    else if (context.withDefaultBooleanValues) {
      writer.name("optionalWithDefaultFalse")
      BooleanApolloAdapter.toJson(writer, false, serializeDataContext)
    }
    if (value.optionalWithDefaultTrue is Optional.Present) {
      writer.name("optionalWithDefaultTrue")
      NullableBooleanApolloAdapter.present().toJson(writer, value.optionalWithDefaultTrue,
          serializeDataContext)
    }
    else if (context.withDefaultBooleanValues) {
      writer.name("optionalWithDefaultTrue")
      BooleanApolloAdapter.toJson(writer, true, serializeDataContext)
    }
    if (value.optionalWithNoDefault is Optional.Present) {
      writer.name("optionalWithNoDefault")
      NullableBooleanApolloAdapter.present().toJson(writer, value.optionalWithNoDefault,
          serializeDataContext)
    }
  }
}
