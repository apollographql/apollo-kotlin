//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.adapter;

import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.VariablesAdapter;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.named_fragment_with_variables.GetUser;
import com.example.named_fragment_with_variables.type.UserQuery;
import com.example.named_fragment_with_variables.type.adapter.UserQuery_InputAdapter;
import java.io.IOException;
import java.lang.Override;

public enum GetUser_VariablesAdapter implements VariablesAdapter<GetUser> {
  INSTANCE;

  @Override
  public void serializeVariables(JsonWriter writer, GetUser value,
      VariablesAdapter.SerializeVariablesContext context) throws IOException {
    CompositeAdapter.SerializeCompositeContext serializeCompositeContext = new CompositeAdapter.SerializeCompositeContext(context.customScalarAdapters);
    writer.name("organizationId");
    Adapters.StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.organizationId);
    writer.name("query");
    new ObjectCompositeAdapter<UserQuery>(UserQuery_InputAdapter.INSTANCE, false).serializeComposite(writer, value.query, serializeCompositeContext);
    writer.name("size");
    Adapters.IntAdapter.toJson(writer, CustomScalarAdapters.Empty, value.size);
  }
}
