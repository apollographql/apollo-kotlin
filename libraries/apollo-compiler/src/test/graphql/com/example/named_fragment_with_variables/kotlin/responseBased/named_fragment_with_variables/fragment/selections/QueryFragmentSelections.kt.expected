//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.fragment.selections

import com.apollographql.apollo.api.CompiledArgument
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CompiledFragment
import com.apollographql.apollo.api.CompiledSelection
import com.apollographql.apollo.api.CompiledVariable
import com.apollographql.apollo.api.list
import com.apollographql.apollo.api.notNull
import com.example.named_fragment_with_variables.type.GraphQLString
import com.example.named_fragment_with_variables.type.Organization
import com.example.named_fragment_with_variables.type.Query
import com.example.named_fragment_with_variables.type.User
import kotlin.collections.List

public object QueryFragmentSelections {
  private val __user: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "User",
          possibleTypes = listOf("User")
        ).selections(UserFragmentSelections.__root)
        .build()
      )

  private val __organization: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "user",
          type = User.type.notNull().list().notNull()
        ).arguments(listOf(
          CompiledArgument.Builder(Organization.__user_query).value(CompiledVariable("query")).build()
        ))
        .selections(__user)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "organization",
          type = Organization.type
        ).arguments(listOf(
          CompiledArgument.Builder(Query.__organization_id).value(CompiledVariable("organizationId")).build()
        ))
        .selections(__organization)
        .build()
      )
}
