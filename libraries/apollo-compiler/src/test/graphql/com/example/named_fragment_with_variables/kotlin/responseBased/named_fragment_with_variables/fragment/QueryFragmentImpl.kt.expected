//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.fragment

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Fragment
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.named_fragment_with_variables.fragment.adapter.QueryFragmentImpl_VariablesAdapter
import com.example.named_fragment_with_variables.fragment.selections.QueryFragmentSelections
import com.example.named_fragment_with_variables.type.Query
import com.example.named_fragment_with_variables.type.UserQuery
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

public data class QueryFragmentImpl(
  public val organizationId: String,
  public val query: UserQuery,
  public val size: Int,
) : Fragment<QueryFragmentImpl.Data> {
  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    QueryFragmentImpl_VariablesAdapter.serializeVariables(writer, this, customScalarAdapters, withDefaultValues)
  }

  override fun adapter(): Adapter<Data> = QueryFragmentImpl_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = Query.type
  )
  .selections(selections = QueryFragmentSelections.__root)
  .build()

  public data class Data(
    override val organization: Organization?,
  ) : QueryFragment,
      Fragment.Data {
    public data class Organization(
      override val id: String,
      override val user: List<User>,
    ) : QueryFragment.Organization {
      public data class User(
        override val __typename: String,
        override val firstName: String,
        override val lastName: String,
        override val avatar: String,
      ) : UserFragment,
          QueryFragment.Organization.User {
        public companion object {
          @Suppress("USELESS_CAST")
          public fun User.userFragment(): UserFragment? = this as? UserFragment
        }
      }
    }
  }
}
