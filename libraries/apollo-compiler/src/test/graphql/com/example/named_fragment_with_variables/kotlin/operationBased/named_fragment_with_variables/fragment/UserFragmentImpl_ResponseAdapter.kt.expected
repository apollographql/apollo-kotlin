//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.fragment

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.missingField
import kotlin.String
import kotlin.collections.List

public object UserFragmentImpl_ResponseAdapter {
  public object UserFragment : Adapter<com.example.named_fragment_with_variables.fragment.UserFragment> {
    public val RESPONSE_NAMES: List<String> = listOf("firstName", "lastName", "avatar")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): com.example.named_fragment_with_variables.fragment.UserFragment {
      var _firstName: String? = null
      var _lastName: String? = null
      var _avatar: String? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _firstName = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _lastName = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _avatar = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.named_fragment_with_variables.fragment.UserFragment(
        firstName = _firstName ?: missingField(reader, "firstName"),
        lastName = _lastName ?: missingField(reader, "lastName"),
        avatar = _avatar ?: missingField(reader, "avatar")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.named_fragment_with_variables.fragment.UserFragment,
    ) {
      writer.name("firstName")
      StringAdapter.toJson(writer, customScalarAdapters, value.firstName)

      writer.name("lastName")
      StringAdapter.toJson(writer, customScalarAdapters, value.lastName)

      writer.name("avatar")
      StringAdapter.toJson(writer, customScalarAdapters, value.avatar)
    }
  }
}
