//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.fragment.adapter

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.IntApolloAdapter
import com.apollographql.apollo3.api.ScalarAdapters
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_with_variables.fragment.QueryFragmentImpl
import com.example.named_fragment_with_variables.type.adapter.UserQuery_InputAdapter
import kotlin.IllegalStateException
import kotlin.Unit

public object QueryFragmentImpl_VariablesAdapter : ApolloAdapter<QueryFragmentImpl> {
  public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters):
      QueryFragmentImpl = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    scalarAdapters: ScalarAdapters,
    `value`: QueryFragmentImpl,
  ): Unit {
    writer.name("organizationId")
    StringApolloAdapter.toJson(writer, scalarAdapters, value.organizationId)
    writer.name("query")
    UserQuery_InputAdapter.obj().toJson(writer, scalarAdapters, value.query)
    writer.name("size")
    IntApolloAdapter.toJson(writer, scalarAdapters, value.size)
  }
}
