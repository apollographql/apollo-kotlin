//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.named_fragment_with_variables.adapter.GetUser_ResponseAdapter
import com.example.named_fragment_with_variables.adapter.GetUser_VariablesAdapter
import com.example.named_fragment_with_variables.fragment.QueryFragment
import com.example.named_fragment_with_variables.fragment.UserFragment
import com.example.named_fragment_with_variables.selections.GetUserSelections
import com.example.named_fragment_with_variables.type.UserQuery
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import com.example.named_fragment_with_variables.type.Query as CompiledQuery

public data class GetUser(
  public val organizationId: String,
  public val query: UserQuery,
  public val size: Int,
) : Query<GetUser.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    GetUser_VariablesAdapter.serializeVariables(writer, this, customScalarAdapters, withDefaultValues)
  }

  override fun adapter(): Adapter<Data> = GetUser_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = GetUserSelections.__root)
  .build()

  @ApolloAdaptableWith(GetUser_ResponseAdapter.Data::class)
  public data class Data(
    public val __typename: String,
    override val organization: Organization?,
  ) : QueryFragment,
      Query.Data {
    public data class Organization(
      override val id: String,
      override val user: List<User>,
    ) : QueryFragment.Organization {
      public data class User(
        override val __typename: String,
        override val firstName: String,
        override val lastName: String,
        override val avatar: String,
      ) : UserFragment,
          QueryFragment.Organization.User {
        public companion object {
          @Suppress("USELESS_CAST")
          public fun User.userFragment(): UserFragment? = this as? UserFragment
        }
      }
    }

    public companion object {
      @Suppress("USELESS_CAST")
      public fun Data.queryFragment(): QueryFragment? = this as? QueryFragment
    }
  }

  public companion object {
    public const val OPERATION_ID: String =
        "1314916fa3163a17df2b7a0173e55fef34621507824242308b3006e9ab4740b4"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query GetUser($organizationId: String!, $query: UserQuery!, $size: Int!) {
     *   __typename
     *   ...QueryFragment
     * }
     *
     * fragment UserFragment on User {
     *   firstName
     *   lastName
     *   avatar(size: $size)
     * }
     *
     * fragment QueryFragment on Query {
     *   organization(id: $organizationId) {
     *     id
     *     user(query: $query) {
     *       __typename
     *       ...UserFragment
     *     }
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query GetUser(${'$'}organizationId: String!, ${'$'}query: UserQuery!, ${'$'}size: Int!) { __typename ...QueryFragment }  fragment UserFragment on User { firstName lastName avatar(size: ${'$'}size) }  fragment QueryFragment on Query { organization(id: ${'$'}organizationId) { id user(query: ${'$'}query) { __typename ...UserFragment } } }"

    public const val OPERATION_NAME: String = "GetUser"
  }
}
