//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.type.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableBooleanAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.present
import com.example.named_fragment_with_variables.type.UserQuery
import kotlin.IllegalStateException

public object UserQuery_InputAdapter : Adapter<UserQuery> {
  override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): UserQuery =
      throw IllegalStateException("Input type used in output position")

  override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: UserQuery,
  ) {
    writer.name("name")
    StringAdapter.toJson(writer, customScalarAdapters, value.name)
    if (value.isAdmin is Optional.Present) {
      writer.name("isAdmin")
      NullableBooleanAdapter.present().toJson(writer, customScalarAdapters, value.isAdmin)
    }
  }
}
