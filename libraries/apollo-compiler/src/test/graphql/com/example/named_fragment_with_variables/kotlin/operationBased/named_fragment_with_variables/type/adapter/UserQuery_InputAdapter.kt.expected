//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.type.adapter

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.NullableBooleanApolloAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.ScalarAdapters
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.present
import com.example.named_fragment_with_variables.type.UserQuery
import kotlin.IllegalStateException
import kotlin.Unit

public object UserQuery_InputAdapter : ApolloAdapter<UserQuery> {
  public override fun fromJson(reader: JsonReader, scalarAdapters: ScalarAdapters): UserQuery =
      throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    scalarAdapters: ScalarAdapters,
    `value`: UserQuery,
  ): Unit {
    writer.name("name")
    StringApolloAdapter.toJson(writer, scalarAdapters, value.name)
    if (value.isAdmin is Optional.Present) {
      writer.name("isAdmin")
      NullableBooleanApolloAdapter.present().toJson(writer, scalarAdapters, value.isAdmin)
    }
  }
}
