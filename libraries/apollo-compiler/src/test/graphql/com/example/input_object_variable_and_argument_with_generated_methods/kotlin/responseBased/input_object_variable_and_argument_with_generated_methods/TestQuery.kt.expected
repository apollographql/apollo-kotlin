//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.input_object_variable_and_argument_with_generated_methods

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Optional
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.example.input_object_variable_and_argument_with_generated_methods.adapter.TestQuery_ResponseAdapter
import com.example.input_object_variable_and_argument_with_generated_methods.adapter.TestQuery_VariablesAdapter
import com.example.input_object_variable_and_argument_with_generated_methods.selections.TestQuerySelections
import com.example.input_object_variable_and_argument_with_generated_methods.type.Episode
import kotlin.Any
import kotlin.Boolean
import kotlin.Double
import kotlin.Int
import kotlin.String
import com.example.input_object_variable_and_argument_with_generated_methods.type.Query as CompiledQuery

public class TestQuery(
  public val episode: Optional<Episode?> = Optional.Absent,
  public val stars: Int,
  public val greenValue: Double,
) : Query<TestQuery.Data> {
  private var __hashCode: Int? = null

  override fun hashCode(): Int {
    if (__hashCode == null) {
      var __h = episode.hashCode()
      __h *= 31
      __h += stars.hashCode()
      __h *= 31
      __h += greenValue.hashCode()
      __hashCode = __h
    }
    return __hashCode!!
  }

  override fun equals(other: Any?): Boolean {
    if (other === this) {
      return true
    }
    if (other is TestQuery) {
      return this.episode == other.episode
      && this.stars == other.stars
      && this.greenValue == other.greenValue
    }
    return false
  }

  override fun toString(): String = """TestQuery(episode=$episode, stars=$stars, greenValue=$greenValue)"""

  public fun copy(
    episode: Optional<Episode?> = this.episode,
    stars: Int = this.stars,
    greenValue: Double = this.greenValue,
  ): TestQuery = TestQuery(episode,stars,greenValue,)

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    TestQuery_VariablesAdapter.serializeVariables(writer, this, customScalarAdapters, withDefaultValues)
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public class Data(
    public val heroWithReview: HeroWithReview?,
  ) : Query.Data {
    private var __hashCode: Int? = null

    override fun hashCode(): Int {
      if (__hashCode == null) {
        var __h = heroWithReview.hashCode()
        __hashCode = __h
      }
      return __hashCode!!
    }

    override fun equals(other: Any?): Boolean {
      if (other === this) {
        return true
      }
      if (other is Data) {
        return this.heroWithReview == other.heroWithReview
      }
      return false
    }

    override fun toString(): String = """Data(heroWithReview=$heroWithReview)"""

    public fun copy(heroWithReview: HeroWithReview? = this.heroWithReview): Data = Data(heroWithReview,)

    public class HeroWithReview(
      /**
       * What this human calls themselves
       */
      public val name: String,
      /**
       * Height in the preferred unit, default is meters
       */
      public val height: Double?,
    ) {
      private var __hashCode: Int? = null

      override fun hashCode(): Int {
        if (__hashCode == null) {
          var __h = name.hashCode()
          __h *= 31
          __h += height.hashCode()
          __hashCode = __h
        }
        return __hashCode!!
      }

      override fun equals(other: Any?): Boolean {
        if (other === this) {
          return true
        }
        if (other is HeroWithReview) {
          return this.name == other.name
          && this.height == other.height
        }
        return false
      }

      override fun toString(): String = """HeroWithReview(name=$name, height=$height)"""

      public fun copy(name: String = this.name, height: Double? = this.height): HeroWithReview = HeroWithReview(name,height,)
    }
  }

  public companion object {
    public const val OPERATION_ID: String =
        "5de0170d60b7008300fa40599880d0b70e67a326a7b1fe27b8fa87aba7e5d36f"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery($episode: Episode, $stars: Int!, $greenValue: Float!) {
     *   heroWithReview(episode: $episode, review: {
     *     stars: $stars
     *     favoriteColor: {
     *       red: 0
     *       green: $greenValue
     *       blue: 0
     *     }
     *
     *     booleanNonOptional: false
     *     listOfStringNonOptional: []
     *   }
     *   , listOfInts: [$stars,$stars]) {
     *     name
     *     height(unit: FOOT)
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery(${'$'}episode: Episode, ${'$'}stars: Int!, ${'$'}greenValue: Float!) { heroWithReview(episode: ${'$'}episode, review: { stars: ${'$'}stars favoriteColor: { red: 0 green: ${'$'}greenValue blue: 0 }  booleanNonOptional: false listOfStringNonOptional: [] } , listOfInts: [${'$'}stars,${'$'}stars]) { name height(unit: FOOT) } }"

    public const val OPERATION_NAME: String = "TestQuery"
  }
}
