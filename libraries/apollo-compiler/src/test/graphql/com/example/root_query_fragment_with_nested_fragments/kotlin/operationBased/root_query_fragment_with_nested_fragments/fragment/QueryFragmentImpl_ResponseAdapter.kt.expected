//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment_with_nested_fragments.fragment

import com.apollographql.apollo3.api.ApolloAdapter
import com.apollographql.apollo3.api.NullableStringApolloAdapter
import com.apollographql.apollo3.api.StringApolloAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object QueryFragmentImpl_ResponseAdapter {
  public object QueryFragment :
      ApolloAdapter<com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "hero", "droid", "human")

    public override fun fromJson(reader: JsonReader, context: ApolloAdapter.DataDeserializeContext):
        com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment {
      var __typename: String? = null
      var _hero: com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Hero? = null
      var _droid: com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Droid? = null
      var _human: com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Human? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringApolloAdapter.fromJson(reader, context)
          1 -> _hero = Hero.obj(true).nullable().fromJson(reader, context)
          2 -> _droid = Droid.obj(true).nullable().fromJson(reader, context)
          3 -> _human = Human.obj(true).nullable().fromJson(reader, context)
          else -> break
        }
      }

      return com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment(
        __typename = __typename!!,
        hero = _hero,
        droid = _droid,
        human = _human
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      `value`: com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment,
      context: ApolloAdapter.DataSerializeContext,
    ): Unit {
      writer.name("__typename")
      StringApolloAdapter.toJson(writer, value.__typename, context)

      writer.name("hero")
      Hero.obj(true).nullable().toJson(writer, value.hero, context)

      writer.name("droid")
      Droid.obj(true).nullable().toJson(writer, value.droid, context)

      writer.name("human")
      Human.obj(true).nullable().toJson(writer, value.human, context)
    }

    private object Hero :
        ApolloAdapter<com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Hero>
        {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      public override fun fromJson(reader: JsonReader,
          context: ApolloAdapter.DataDeserializeContext):
          com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Hero {
        var __typename: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringApolloAdapter.fromJson(reader, context)
            else -> break
          }
        }

        reader.rewind()
        val _heroFragment = com.example.root_query_fragment_with_nested_fragments.fragment.HeroFragmentImpl_ResponseAdapter.HeroFragment.fromJson(reader,
            context)

        return com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Hero(
          __typename = __typename!!,
          heroFragment = _heroFragment
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        `value`: com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Hero,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        writer.name("__typename")
        StringApolloAdapter.toJson(writer, value.__typename, context)

        com.example.root_query_fragment_with_nested_fragments.fragment.HeroFragmentImpl_ResponseAdapter.HeroFragment.toJson(writer,
            value.heroFragment, context)
      }
    }

    private object Droid :
        ApolloAdapter<com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Droid>
        {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      public override fun fromJson(reader: JsonReader,
          context: ApolloAdapter.DataDeserializeContext):
          com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Droid {
        var __typename: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringApolloAdapter.fromJson(reader, context)
            else -> break
          }
        }

        reader.rewind()
        val _droidFragment = com.example.root_query_fragment_with_nested_fragments.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.fromJson(reader,
            context)

        return com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Droid(
          __typename = __typename!!,
          droidFragment = _droidFragment
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        `value`: com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Droid,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        writer.name("__typename")
        StringApolloAdapter.toJson(writer, value.__typename, context)

        com.example.root_query_fragment_with_nested_fragments.fragment.DroidFragmentImpl_ResponseAdapter.DroidFragment.toJson(writer,
            value.droidFragment, context)
      }
    }

    private object Human :
        ApolloAdapter<com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Human>
        {
      public val RESPONSE_NAMES: List<String> = listOf("__typename")

      public override fun fromJson(reader: JsonReader,
          context: ApolloAdapter.DataDeserializeContext):
          com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Human {
        var __typename: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringApolloAdapter.fromJson(reader, context)
            else -> break
          }
        }

        reader.rewind()
        val _onHuman = com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragmentImpl_ResponseAdapter.QueryFragment.Human.OnHuman.fromJson(reader,
            context)

        return com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Human(
          __typename = __typename!!,
          onHuman = _onHuman
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        `value`: com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Human,
        context: ApolloAdapter.DataSerializeContext,
      ): Unit {
        writer.name("__typename")
        StringApolloAdapter.toJson(writer, value.__typename, context)

        com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragmentImpl_ResponseAdapter.QueryFragment.Human.OnHuman.toJson(writer,
            value.onHuman, context)
      }

      private object OnHuman :
          ApolloAdapter<com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Human.OnHuman>
          {
        public val RESPONSE_NAMES: List<String> = listOf("name", "homePlanet")

        public override fun fromJson(reader: JsonReader,
            context: ApolloAdapter.DataDeserializeContext):
            com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Human.OnHuman {
          var _name: String? = null
          var _homePlanet: String? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> _name = StringApolloAdapter.fromJson(reader, context)
              1 -> _homePlanet = NullableStringApolloAdapter.fromJson(reader, context)
              else -> break
            }
          }

          return com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Human.OnHuman(
            name = _name!!,
            homePlanet = _homePlanet
          )
        }

        public override fun toJson(
          writer: JsonWriter,
          `value`: com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment.Human.OnHuman,
          context: ApolloAdapter.DataSerializeContext,
        ): Unit {
          writer.name("name")
          StringApolloAdapter.toJson(writer, value.name, context)

          writer.name("homePlanet")
          NullableStringApolloAdapter.toJson(writer, value.homePlanet, context)
        }
      }
    }
  }
}
