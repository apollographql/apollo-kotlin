//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment_with_nested_fragments.fragment.selections

import com.apollographql.apollo.api.CompiledArgument
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CompiledFragment
import com.apollographql.apollo.api.CompiledSelection
import com.apollographql.apollo.api.notNull
import com.example.root_query_fragment_with_nested_fragments.type.Character
import com.example.root_query_fragment_with_nested_fragments.type.Droid
import com.example.root_query_fragment_with_nested_fragments.type.GraphQLString
import com.example.root_query_fragment_with_nested_fragments.type.Human
import com.example.root_query_fragment_with_nested_fragments.type.Query
import kotlin.collections.List

public object QueryFragmentSelections {
  private val __hero: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Character",
          possibleTypes = listOf("Droid", "Human")
        ).selections(HeroFragmentSelections.__root)
        .build()
      )

  private val __droid: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Droid",
          possibleTypes = listOf("Droid")
        ).selections(DroidFragmentSelections.__root)
        .build()
      )

  private val __onHuman: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "homePlanet",
          type = GraphQLString.type
        ).build()
      )

  private val __human: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Human",
          possibleTypes = listOf("Human")
        ).selections(__onHuman)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "hero",
          type = Character.type
        ).selections(__hero)
        .build(),
        CompiledField.Builder(
          name = "droid",
          type = Droid.type
        ).arguments(listOf(
          CompiledArgument.Builder(Query.__droid_id).value(1).build()
        ))
        .selections(__droid)
        .build(),
        CompiledField.Builder(
          name = "human",
          type = Human.type
        ).arguments(listOf(
          CompiledArgument.Builder(Query.__human_id).value(1).build()
        ))
        .selections(__human)
        .build()
      )
}
