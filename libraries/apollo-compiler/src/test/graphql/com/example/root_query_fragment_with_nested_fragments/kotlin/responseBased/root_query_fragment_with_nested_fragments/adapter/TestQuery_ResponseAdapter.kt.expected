//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment_with_nested_fragments.adapter

import com.apollographql.apollo3.api.CompositeAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.root_query_fragment_with_nested_fragments.TestQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : CompositeAdapter<TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "hero", "droid", "human")

    public override fun deserializeComposite(reader: JsonReader,
        context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Data {
      var __typename: String? = null
      var _hero: TestQuery.Data.Hero? = null
      var _droid: TestQuery.Data.Droid? = null
      var _human: TestQuery.Data.Human? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
          1 -> _hero = Hero.obj().nullable().deserializeComposite(reader, context)
          2 -> _droid = Droid.obj().nullable().deserializeComposite(reader, context)
          3 -> _human = Human.obj().nullable().deserializeComposite(reader, context)
          else -> break
        }
      }

      return TestQuery.Data(
        __typename = __typename!!,
        hero = _hero,
        droid = _droid,
        human = _human
      )
    }

    public override fun serializeComposite(
      writer: JsonWriter,
      `value`: TestQuery.Data,
      context: CompositeAdapter.SerializeCompositeContext,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

      writer.name("hero")
      Hero.obj().nullable().serializeComposite(writer, value.hero, context)

      writer.name("droid")
      Droid.obj().nullable().serializeComposite(writer, value.droid, context)

      writer.name("human")
      Human.obj().nullable().serializeComposite(writer, value.human, context)
    }

    private object Hero : CompositeAdapter<TestQuery.Data.Hero> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name")

      public override fun deserializeComposite(reader: JsonReader,
          context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Data.Hero {
        var __typename: String? = null
        var _name: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return TestQuery.Data.Hero(
          __typename = __typename!!,
          name = _name!!
        )
      }

      public override fun serializeComposite(
        writer: JsonWriter,
        `value`: TestQuery.Data.Hero,
        context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)
      }
    }

    private object Droid : CompositeAdapter<TestQuery.Data.Droid> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "primaryFunction")

      public override fun deserializeComposite(reader: JsonReader,
          context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Data.Droid {
        var __typename: String? = null
        var _name: String? = null
        var _primaryFunction: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            2 -> _primaryFunction = NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return TestQuery.Data.Droid(
          __typename = __typename!!,
          name = _name!!,
          primaryFunction = _primaryFunction
        )
      }

      public override fun serializeComposite(
        writer: JsonWriter,
        `value`: TestQuery.Data.Droid,
        context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

        writer.name("primaryFunction")
        NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.primaryFunction)
      }
    }

    private object Human : CompositeAdapter<TestQuery.Data.Human> {
      public val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "homePlanet")

      public override fun deserializeComposite(reader: JsonReader,
          context: CompositeAdapter.DeserializeCompositeContext): TestQuery.Data.Human {
        var __typename: String? = null
        var _name: String? = null
        var _homePlanet: String? = null

        while (true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            1 -> _name = StringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            2 -> _homePlanet = NullableStringAdapter.fromJson(reader, CustomScalarAdapters.Empty)
            else -> break
          }
        }

        return TestQuery.Data.Human(
          __typename = __typename!!,
          name = _name!!,
          homePlanet = _homePlanet
        )
      }

      public override fun serializeComposite(
        writer: JsonWriter,
        `value`: TestQuery.Data.Human,
        context: CompositeAdapter.SerializeCompositeContext,
      ): Unit {
        writer.name("__typename")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.name)

        writer.name("homePlanet")
        NullableStringAdapter.toJson(writer, CustomScalarAdapters.Empty, value.homePlanet)
      }
    }
  }
}
