"""A character from the Star Wars universe"""
interface Character {
  """The dates of appearances"""
  appearanceDates: [Date!]!

  """The movies this character appears in"""
  appearsIn: [Episode]!

  """The date character was born."""
  birthDate: Date!

  """Test deprecated field"""
  deprecated: String! @deprecated(reason: "For test purpose only")

  """Test deprecated field"""
  deprecatedBool: Boolean! @deprecated(reason: "For test purpose only")

  """The movie this character first appears in"""
  firstAppearsIn: Episode!

  """The friends of the character, or an empty list if they have none"""
  friends: [Character]

  """The friends of the character exposed as a connection with edges"""
  friendsConnection(first: Int, after: ID): FriendsConnection!

  """The ID of the character"""
  id: ID!

  """Links"""
  links: [URL!]!

  """The name of the character"""
  name: String!

  """Profile link"""
  profileLink: URL!

  """Hero type"""
  type: hero_type!
}


"""The `Date` scalar type represents date format."""
scalar Date

"""An autonomous mechanical character in the Star Wars universe"""
type Droid implements Character {
  """The dates of appearances"""
  appearanceDates: [Date!]!

  """The movies this droid appears in"""
  appearsIn: [Episode]!

  """The date droid was created."""
  birthDate: Date!

  """Test deprecated field"""
  deprecated: String! @deprecated(reason: "For test purpose only")

  """Test deprecated field"""
  deprecatedBool: Boolean! @deprecated(reason: "For test purpose only")

  """The movie this character first appears in"""
  firstAppearsIn: Episode!

  """This droid's friends, or an empty list if they have none"""
  friends: [Character]

  """The friends of the droid exposed as a connection with edges"""
  friendsConnection(first: Int, after: ID): FriendsConnection!

  """The ID of the droid"""
  id: ID!

  """Links"""
  links: [URL!]!

  """What others call this droid"""
  name: String!

  """This droid's primary function"""
  primaryFunction: String

  """Profile link"""
  profileLink: URL!

  """Hero type"""
  type: hero_type!
}

"""The episodes in the Star Wars trilogy"""
enum Episode {
  """Star Wars Episode IV: A New Hope, released in 1977."""
  NEWHOPE

  """Star Wars Episode V: The Empire Strikes Back, released in 1980."""
  EMPIRE

  """Star Wars Episode VI: Return of the Jedi, released in 1983."""
  JEDI

  """Test deprecated enum value"""
  DEPRECATED @deprecated(reason: "For test purpose only")

  """Test java reserved word"""
  new
}


"""A connection object for a character's friends"""
type FriendsConnection {
  """The edges for each of the character's friends."""
  edges: [FriendsEdge]

  """A list of the friends, as a convenience when edges are not needed."""
  friends: [Character]

  """For test java beans semantic naming only"""
  isEmpty: Boolean!

  """Information for paginating this connection"""
  pageInfo: PageInfo!

  """The total number of friends"""
  totalCount: Int
}

"""An edge object for a character's friends"""
type FriendsEdge {
  """A cursor used for pagination"""
  cursor: ID!

  """The character represented by this friendship edge"""
  node: Character
}

"""Lower case enum type name"""
enum hero_type {
  human
  droid
}

"""A humanoid creature from the Star Wars universe"""
type Human implements Character {
  """The dates of appearances"""
  appearanceDates: [Date!]!

  """The movies this human appears in"""
  appearsIn: [Episode]!

  """The date character was born."""
  birthDate: Date!

  """Test deprecated field"""
  deprecated: String! @deprecated(reason: "For test purpose only")

  """Test deprecated field"""
  deprecatedBool: Boolean! @deprecated(reason: "For test purpose only")

  """The movie this character first appears in"""
  firstAppearsIn: Episode!

  """This human's friends, or an empty list if they have none"""
  friends: [Character]

  """The friends of the human exposed as a connection with edges"""
  friendsConnection(first: Int, after: ID): FriendsConnection!

  """Height in the preferred unit, default is meters"""
  height(unit: LengthUnit = METER): Float

  """The home planet of the human, or null if unknown"""
  homePlanet: String

  """The ID of the human"""
  id: ID!

  """Links"""
  links: [URL!]!

  """Mass in kilograms, or null if unknown"""
  mass: Float

  """What this human calls themselves"""
  name: String!

  """Profile link"""
  profileLink: URL!

  """A list of starships this person has piloted, or an empty list if none"""
  starships: [Starship]

  """Hero type"""
  type: hero_type!
}

"""Units of height"""
enum LengthUnit {
  """The standard unit around the world"""
  METER

  """Primarily used in the United States"""
  FOOT
}


"""Information for paginating this connection"""
type PageInfo {
  endCursor: ID
  hasNextPage: Boolean!
  startCursor: ID
}

"""
The query type, represents all of the entry points into our object graph
"""
type Query {
  character(id: ID!): Character
  droid(id: ID!): Droid

  hero(
    episode: Episode

    """for test purpose only"""
    listOfListOfStringArgs: [[String]]
  ): Character

  heroDetailQuery: Character
  human(id: ID!): Human
  nonOptionalHero(episode: Episode): Character!
  search(text: String): [SearchResult]
  starship(id: ID!): Starship
}

union SearchResult = Human | Droid | Starship

type Starship {
  coordinates: [[Float!]!]

  """The ID of the starship"""
  id: ID!

  """Length of the starship, along the longest axis"""
  length(unit: LengthUnit = METER): Float

  """The name of the starship"""
  name: String!
}

"""URL for testing"""
scalar URL

schema {
  query: Query
}
