enum Class {
  MAMMAL
  FISH
  BIRD
  INSECT
}

scalar Date

interface Animal {
  class: Class!
}

type Cat implements Animal {
  class: Class!
  mustaches: Int!
  dateOfBirth: Date!
}

type Plant {
  name: String!
  picture(size: Int!): String!
}

type Query {
  randomAnimal: Animal!

  randomPlant: Plant!

  animal(class: Class!): Animal!

  field0: Int
  field1: Int
  field2: Int
  field3: Int
  field4: Int
  field5: Int
  field6: Int
  field7: Int
  field8: Int
  field9: Int
}

input AnimalInput {
  class: Class!
  name: String!
}

type Mutation {
  registerAnimal(input: AnimalInput!): Boolean!
}


