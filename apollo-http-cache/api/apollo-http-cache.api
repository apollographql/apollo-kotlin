public final class com/apollographql/apollo3/cache/http/CachingHttpEngine : com/apollographql/apollo3/network/http/HttpEngine {
	public static final field CACHE_DO_NOT_STORE Ljava/lang/String;
	public static final field CACHE_EXPIRE_AFTER_READ_HEADER Ljava/lang/String;
	public static final field CACHE_EXPIRE_TIMEOUT_HEADER Ljava/lang/String;
	public static final field CACHE_FETCH_POLICY_HEADER Ljava/lang/String;
	public static final field CACHE_FIRST Ljava/lang/String;
	public static final field CACHE_KEY_HEADER Ljava/lang/String;
	public static final field CACHE_ONLY Ljava/lang/String;
	public static final field CACHE_SERVED_DATE_HEADER Ljava/lang/String;
	public static final field Companion Lcom/apollographql/apollo3/cache/http/CachingHttpEngine$Companion;
	public static final field FROM_CACHE Ljava/lang/String;
	public static final field NETWORK_FIRST Ljava/lang/String;
	public static final field NETWORK_ONLY Ljava/lang/String;
	public fun <init> (Ljava/io/File;JLcom/apollographql/apollo3/cache/http/internal/FileSystem;Lcom/apollographql/apollo3/network/http/HttpEngine;)V
	public synthetic fun <init> (Ljava/io/File;JLcom/apollographql/apollo3/cache/http/internal/FileSystem;Lcom/apollographql/apollo3/network/http/HttpEngine;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun delete ()V
	public fun dispose ()V
	public fun execute (Lcom/apollographql/apollo3/api/http/HttpRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun remove (Ljava/lang/String;)V
}

public final class com/apollographql/apollo3/cache/http/CachingHttpEngine$Companion {
	public final fun cacheKey (Lcom/apollographql/apollo3/api/http/HttpRequest;)Ljava/lang/String;
}

public final class com/apollographql/apollo3/cache/http/DiskLruHttpCache {
	public static final field Companion Lcom/apollographql/apollo3/cache/http/DiskLruHttpCache$Companion;
	public fun <init> (Lcom/apollographql/apollo3/cache/http/internal/FileSystem;Ljava/io/File;J)V
	public final fun delete ()V
	public final fun read (Ljava/lang/String;)Lcom/apollographql/apollo3/api/http/HttpResponse;
	public final fun remove (Ljava/lang/String;)V
	public final fun write (Lcom/apollographql/apollo3/api/http/HttpResponse;Ljava/lang/String;)V
}

public final class com/apollographql/apollo3/cache/http/DiskLruHttpCache$Companion {
}

public final class com/apollographql/apollo3/cache/http/HttpCacheExtensionsKt {
	public static final fun httpCache (Lcom/apollographql/apollo3/ApolloClient$Builder;Ljava/io/File;J)Lcom/apollographql/apollo3/ApolloClient$Builder;
	public static final fun httpDoNotStore (Lcom/apollographql/apollo3/api/HasMutableExecutionContext;Z)Lcom/apollographql/apollo3/api/HasMutableExecutionContext;
	public static final fun httpExpireAfterRead (Lcom/apollographql/apollo3/api/HasMutableExecutionContext;Z)Lcom/apollographql/apollo3/api/HasMutableExecutionContext;
	public static final fun httpExpireTimeout (Lcom/apollographql/apollo3/api/HasMutableExecutionContext;J)Lcom/apollographql/apollo3/api/HasMutableExecutionContext;
	public static final fun httpFetchPolicy (Lcom/apollographql/apollo3/api/HasMutableExecutionContext;Lcom/apollographql/apollo3/cache/http/HttpFetchPolicy;)Lcom/apollographql/apollo3/api/HasMutableExecutionContext;
	public static final fun isFromHttpCache (Lcom/apollographql/apollo3/api/ApolloResponse;)Z
	public static final fun withHttpCache (Lcom/apollographql/apollo3/ApolloClient;Ljava/io/File;J)Lcom/apollographql/apollo3/ApolloClient;
	public static final fun withHttpDoNotStore (Lcom/apollographql/apollo3/ApolloClient;Z)Lcom/apollographql/apollo3/ApolloClient;
	public static final fun withHttpDoNotStore (Lcom/apollographql/apollo3/api/ApolloRequest;Z)Lcom/apollographql/apollo3/api/ApolloRequest;
	public static final fun withHttpExpireAfterRead (Lcom/apollographql/apollo3/ApolloClient;Z)Lcom/apollographql/apollo3/ApolloClient;
	public static final fun withHttpExpireAfterRead (Lcom/apollographql/apollo3/api/ApolloRequest;Z)Lcom/apollographql/apollo3/api/ApolloRequest;
	public static final fun withHttpExpireTimeout (Lcom/apollographql/apollo3/ApolloClient;J)Lcom/apollographql/apollo3/ApolloClient;
	public static final fun withHttpExpireTimeout (Lcom/apollographql/apollo3/api/ApolloRequest;J)Lcom/apollographql/apollo3/api/ApolloRequest;
	public static final fun withHttpFetchPolicy (Lcom/apollographql/apollo3/ApolloClient;Lcom/apollographql/apollo3/cache/http/HttpFetchPolicy;)Lcom/apollographql/apollo3/ApolloClient;
	public static final fun withHttpFetchPolicy (Lcom/apollographql/apollo3/api/ApolloRequest;Lcom/apollographql/apollo3/cache/http/HttpFetchPolicy;)Lcom/apollographql/apollo3/api/ApolloRequest;
}

public final class com/apollographql/apollo3/cache/http/HttpFetchPolicy : java/lang/Enum {
	public static final field CacheFirst Lcom/apollographql/apollo3/cache/http/HttpFetchPolicy;
	public static final field CacheOnly Lcom/apollographql/apollo3/cache/http/HttpFetchPolicy;
	public static final field NetworkFirst Lcom/apollographql/apollo3/cache/http/HttpFetchPolicy;
	public static final field NetworkOnly Lcom/apollographql/apollo3/cache/http/HttpFetchPolicy;
	public static fun valueOf (Ljava/lang/String;)Lcom/apollographql/apollo3/cache/http/HttpFetchPolicy;
	public static fun values ()[Lcom/apollographql/apollo3/cache/http/HttpFetchPolicy;
}

public final class com/apollographql/apollo3/cache/http/internal/DiskLruCache : java/io/Closeable, java/io/Flushable {
	public static final field ANY_SEQUENCE_NUMBER J
	public static final field Companion Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Companion;
	public static final field JOURNAL_FILE Ljava/lang/String;
	public static final field JOURNAL_FILE_BACKUP Ljava/lang/String;
	public static final field JOURNAL_FILE_TEMP Ljava/lang/String;
	public static final field MAGIC Ljava/lang/String;
	public static final field VERSION_1 Ljava/lang/String;
	public fun close ()V
	public final fun closeQuietly (Ljava/io/Closeable;Ljava/lang/String;)V
	public final fun completeEdit (Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Editor;Z)V
	public static final fun create (Lcom/apollographql/apollo3/cache/http/internal/FileSystem;Ljava/io/File;IIJ)Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache;
	public final fun delete ()V
	public final fun edit (Ljava/lang/String;)Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Editor;
	public final fun edit (Ljava/lang/String;J)Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Editor;
	public final fun evictAll ()V
	public fun flush ()V
	public final fun get (Ljava/lang/String;)Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Snapshot;
	public final fun getDirectory ()Ljava/io/File;
	public final fun getFileSystem ()Lcom/apollographql/apollo3/cache/http/internal/FileSystem;
	public final fun getHasJournalErrors ()Z
	public final fun getInitialized ()Z
	public final fun getJournalWriter ()Lokio/BufferedSink;
	public final fun getLruEntries ()Ljava/util/LinkedHashMap;
	public final fun getMostRecentRebuildFailed ()Z
	public final fun getMostRecentTrimFailed ()Z
	public final fun getRedundantOpCount ()I
	public final fun getValueCount ()I
	public final fun initialize ()V
	public final fun isClosed ()Z
	public final fun journalRebuildRequired ()Z
	public final fun rebuildJournal ()V
	public final fun remove (Ljava/lang/String;)Z
	public final fun removeEntry (Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Entry;)Z
	public final fun setClosed (Z)V
	public final fun setHasJournalErrors (Z)V
	public final fun setInitialized (Z)V
	public final fun setJournalWriter (Lokio/BufferedSink;)V
	public final fun setMaxSize (J)V
	public final fun setMostRecentRebuildFailed (Z)V
	public final fun setMostRecentTrimFailed (Z)V
	public final fun setRedundantOpCount (I)V
	public final fun size ()J
	public final fun snapshots ()Ljava/util/Iterator;
	public final fun trimToSize ()V
}

public final class com/apollographql/apollo3/cache/http/internal/DiskLruCache$Companion {
	public final fun create (Lcom/apollographql/apollo3/cache/http/internal/FileSystem;Ljava/io/File;IIJ)Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache;
	public final fun getLEGAL_KEY_PATTERN ()Ljava/util/regex/Pattern;
}

public final class com/apollographql/apollo3/cache/http/internal/DiskLruCache$Editor {
	public final fun abort ()V
	public final fun abortUnlessCommitted ()V
	public final fun commit ()V
	public final fun detach ()V
	public final fun getEntry ()Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Entry;
	public final fun getWritten ()[Z
	public final fun newSink (I)Lokio/Sink;
	public final fun newSource (I)Lokio/Source;
}

public final class com/apollographql/apollo3/cache/http/internal/DiskLruCache$Entry {
	public final fun getCleanFiles ()[Ljava/io/File;
	public final fun getCurrentEditor ()Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Editor;
	public final fun getDirtyFiles ()[Ljava/io/File;
	public final fun getKey ()Ljava/lang/String;
	public final fun getLengths ()[J
	public final fun getReadable ()Z
	public final fun getSequenceNumber ()J
	public final fun setCurrentEditor (Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Editor;)V
	public final fun setLengths ([Ljava/lang/String;)V
	public final fun setReadable (Z)V
	public final fun setSequenceNumber (J)V
	public final fun snapshot ()Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Snapshot;
	public final fun writeLengths (Lokio/BufferedSink;)V
}

public final class com/apollographql/apollo3/cache/http/internal/DiskLruCache$Snapshot : java/io/Closeable {
	public fun close ()V
	public final fun edit ()Lcom/apollographql/apollo3/cache/http/internal/DiskLruCache$Editor;
	public final fun getKey ()Ljava/lang/String;
	public final fun getLength (I)J
	public final fun getSource (I)Lokio/Source;
	public final fun key ()Ljava/lang/String;
}

public abstract interface class com/apollographql/apollo3/cache/http/internal/FileSystem {
	public static final field Companion Lcom/apollographql/apollo3/cache/http/internal/FileSystem$Companion;
	public static final field SYSTEM Lcom/apollographql/apollo3/cache/http/internal/FileSystem;
	public abstract fun appendingSink (Ljava/io/File;)Lokio/Sink;
	public abstract fun delete (Ljava/io/File;)V
	public abstract fun deleteContents (Ljava/io/File;)V
	public abstract fun exists (Ljava/io/File;)Z
	public abstract fun rename (Ljava/io/File;Ljava/io/File;)V
	public abstract fun sink (Ljava/io/File;)Lokio/Sink;
	public abstract fun size (Ljava/io/File;)J
	public abstract fun source (Ljava/io/File;)Lokio/Source;
}

public final class com/apollographql/apollo3/cache/http/internal/FileSystem$Companion {
}

