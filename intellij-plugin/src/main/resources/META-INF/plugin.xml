<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
  <name>Apollo GraphQL</name>
  <!-- Use the id that is defined for the Organization in the Marketplace -->
  <!-- See https://plugins.jetbrains.com/docs/marketplace/organizations.html#4b3f843d -->
  <vendor url="https://apollographql.com" email="jetbrains-marketplace@apollographql.com">apollographql</vendor>

  <!-- In most cases, this should be the same list as what is listed under gradle.properties/platformPlugins -->
  <!-- See https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html#declaring-plugin-dependencies -->
  <depends>com.intellij.modules.platform</depends>
  <depends optional="true" config-file="com.apollographql.ijplugin-java.xml">com.intellij.modules.java</depends>
  <depends optional="true" config-file="com.apollographql.ijplugin-kotlin.xml">org.jetbrains.kotlin</depends>
  <depends optional="true" config-file="com.apollographql.ijplugin-gradle.xml">com.intellij.gradle</depends>
  <depends>com.intellij.lang.jsgraphql</depends>
  <depends>org.toml.lang</depends>
  <depends>com.intellij.modules.json</depends>
  <depends optional="true" config-file="com.apollographql.ijplugin-android.xml">org.jetbrains.android</depends>
  <depends optional="true" config-file="com.apollographql.ijplugin-ultimate.xml">com.intellij.modules.ultimate</depends>

  <resource-bundle>messages.ApolloBundle</resource-bundle>

  <extensions defaultExtensionNs="com.intellij">

    <!-- Apollo project -->
    <projectService
        serviceInterface="com.apollographql.ijplugin.project.ApolloProjectService"
        serviceImplementation="com.apollographql.ijplugin.project.ApolloProjectServiceImpl"
    />

    <!-- Note: the value of `parentId` corresponds to the settings `id` of the JS GraphQL plugin -->
    <!-- See https://github.com/JetBrains/js-graphql-intellij-plugin/blob/396770c293a57f4903acdf427ba5136db6a79d0b/resources/META-INF/plugin.xml#L151 -->
    <projectConfigurable
        id="com.apollographql.ijplugin.settings.SettingsConfigurable"
        parentId="settings.jsgraphql"
        instance="com.apollographql.ijplugin.settings.SettingsConfigurable"
        displayName="Apollo Kotlin"
        nonDefaultProject="true"
    />

    <!-- Icons -->
    <!-- This may be a bit controversial, but we want to override the GraphQL plugin's icons (hence order="first") -->
    <!-- because when navigating to GraphQL files from Kotlin code, a generic GraphQL logo is nicer than a specific -->
    <!-- icon per element type -->
    <iconProvider implementation="com.apollographql.ijplugin.icons.GraphQLIconProvider" order="first" />

    <!-- Support for the "New UI" -->
    <!-- See https://plugins.jetbrains.com/docs/intellij/icons.html#new-ui-icons -->
    <iconMapper mappingFile="ApolloIconsMapping.json" />

    <!-- "@OneOf GraphQL violation" inspection -->
    <!--suppress PluginXmlCapitalization -->
    <localInspection
        language="GraphQL"
        implementationClass="com.apollographql.ijplugin.inspection.ApolloOneOfGraphQLViolationInspection"
        groupPathKey="inspection.group.graphql"
        groupKey="inspection.group.graphql.apolloKotlin"
        key="inspection.oneOfGraphQLViolation.displayName"
        enabledByDefault="true"
        level="ERROR"
    />

    <!-- Suppression of inspections on individual fields -->
    <lang.inspectionSuppressor
        language="GraphQL"
        implementationClass="com.apollographql.ijplugin.inspection.GraphQLInspectionSuppressor"
    />

    <!-- Fields insights service (fetch and cache data) -->
    <projectService
        serviceInterface="com.apollographql.ijplugin.studio.fieldinsights.FieldInsightsService"
        serviceImplementation="com.apollographql.ijplugin.studio.fieldinsights.FieldInsightsServiceImpl"
    />

    <!-- Notifications -->
    <notificationGroup
        id="apollo.main"
        displayType="BALLOON"
        key="notification.group.apollo.main"
    />

    <notificationGroup
        id="apollo.telemetry"
        displayType="BALLOON"
        key="notification.group.apollo.telemetry"
    />

    <!-- Error handler: open a GitHub issue -->
    <errorHandler implementation="com.apollographql.ijplugin.error.GitHubIssueErrorReportSubmitter" />

    <!-- Suggest plugin when Apollo Kotlin is a project dependency -->
    <!-- See https://plugins.jetbrains.com/docs/marketplace/intellij-plugin-recommendations.html#c2909003_6 -->
    <dependencySupport
        kind="java"
        coordinate="com.apollographql.apollo3:apollo-api-jvm"
        displayName="Apollo Kotlin"
    />
    <dependencySupport
        kind="java"
        coordinate="com.apollographql.apollo:apollo-api-jvm"
        displayName="Apollo Kotlin"
    />

    <!-- Advanced settings -->
    <advancedSetting
        id="apollo.graphQLGoToDeclarationGeneratedCode"
        groupKey="advanced.setting.apollo"
        default="false"
    />

  </extensions>

  <applicationListeners>
    <!-- Listen to project open/close -->
    <listener
        class="com.apollographql.ijplugin.project.ApolloProjectManagerListener"
        topic="com.intellij.openapi.project.ProjectManagerListener"
    />
  </applicationListeners>

  <extensions defaultExtensionNs="com.intellij.lang.jsgraphql">
    <!-- Contribute configuration to the GraphQL plugin -->
    <configContributor implementation="com.apollographql.ijplugin.graphql.ApolloGraphQLConfigContributor" />
  </extensions>

  <!-- Support K2 -->
  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <supportsKotlinPluginMode supportsK2="true" />
  </extensions>

  <actions>
    <!-- Refactor / Apollo -->
    <!--suppress PluginXmlCapitalization -->
    <group
        id="ApolloRefactorActionGroup"
        popup="true"
        class="com.apollographql.ijplugin.action.ApolloRefactorActionGroup"
    >
      <add-to-group group-id="RefactoringMenu" anchor="last" />
    </group>

    <!-- Tools / Apollo -->
    <!--suppress PluginXmlCapitalization -->
    <group
        id="ApolloToolsActionGroup"
        popup="true"
        icon="com.apollographql.ijplugin.icons.ApolloIcons.Action.ApolloColor"
        class="com.apollographql.ijplugin.action.ApolloToolsActionGroup"
    >
      <add-to-group group-id="ToolsMenu" anchor="last" />
    </group>

    <!-- Tools / Apollo / Open in Apollo Sandbox -->
    <action
        id="OpenInSandboxAction"
        class="com.apollographql.ijplugin.studio.sandbox.OpenInSandboxAction"
    >
      <add-to-group group-id="ApolloToolsActionGroup" />
      <add-to-group group-id="RevealGroup" />
      <override-text place="RevealInPopup" />
    </action>

    <!-- Tools / Apollo / Internal group that only appears when run from the IDE ("internal mode") -->
    <!-- See https://plugins.jetbrains.com/docs/intellij/enabling-internal.html -->
    <group
        id="ApolloInternalActionGroup"
        popup="true"
        class="com.intellij.openapi.actionSystem.DefaultActionGroup"
        internal="true"
    >
      <add-to-group group-id="ApolloToolsActionGroup" anchor="last" />
    </group>

    <!-- Tools / Apollo / Internal / Send telemetry -->
    <action
        id="SendTelemetryAction"
        class="com.apollographql.ijplugin.telemetry.SendTelemetryAction"
        internal="true"
    >
      <add-to-group group-id="ApolloInternalActionGroup" />
    </action>

    <!-- Tools / Apollo / Internal / Throw an exception -->
    <action
        id="ThrowAction"
        class="com.apollographql.ijplugin.error.ThrowAction"
        internal="true"
    >
      <add-to-group group-id="ApolloInternalActionGroup" />
    </action>
  </actions>

</idea-plugin>
