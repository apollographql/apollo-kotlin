name=Apollo

navigation.GraphQLDefinitionMarkerProvider.tooltip={0} GraphQL definition
navigation.GraphQLDefinitionMarkerProvider.name=GraphQL definition

group.ApolloRefactorActionGroup.text=Apollo
group.ApolloRefactorActionGroup.description=Apollo GraphQL

action.ApolloV2ToV3MigrationAction.text=Migrate to Apollo Kotlin 3...
action.ApolloV2ToV3MigrationAction.description=Run helpers to migrate from Apollo Android 2 to Apollo Kotlin 3
action.ApolloV2ToV3MigrationAction.confirmDialog.title=Migrate to Apollo Kotlin 3
action.MigrationAction.confirmDialog.ok=Do Refactor
action.MigrationAction.confirmDialog.cancel=Cancel
action.ApolloV2ToV3MigrationAction.confirmDialog.message=This will migrate your project from <b>Apollo Android v2</b> to <b>Apollo Kotlin v3</b>.\n\
  \n\
  Some manual changes may still be needed after refactoring: please refer to the <a href=\"https://www.apollographql.com/docs/kotlin/migration/3.0/\">migration guide</a>.\n\
  \n\
  Before refactoring please make sure to commit any local changes and that the project builds with no errors.

action.ApolloV3ToV4MigrationAction.text=Migrate to Apollo Kotlin 4...
action.ApolloV3ToV4MigrationAction.description=Run helpers to migrate from Apollo Kotlin 3 to Apollo Kotlin 4
action.ApolloV3ToV4MigrationAction.confirmDialog.title=Migrate to Apollo Kotlin 4
action.ApolloV3ToV4MigrationAction.confirmDialog.message=This will migrate your project from <b>Apollo Kotlin v3</b> to <b>v4</b>.\n\
  \n\
  Some manual changes may still be needed after refactoring: please refer to the <a href=\"https://www.apollographql.com/docs/kotlin/migration/4.0/\">migration guide</a>.\n\
  \n\
  Before refactoring please make sure to commit any local changes and that the project builds with no errors.


action.CompatToOperationBasedCodegenMigrationAction.text=Migrate to operationBased Codegen...
action.CompatToOperationBasedCodegenMigrationAction.description=Run the helper to migrate from the compat to the operationBased codegen
action.CompatToOperationBasedCodegenMigrationAction.confirmDialog.title=Migrate to operationBased Codegen
action.CompatToOperationBasedCodegenMigrationAction.confirmDialog.message=This will migrate your project from using the <b>compat</b> to using the <b>operationBased</b> codegen.\n\
  \n\
  Some manual changes may still be needed after refactoring.\n\
  \n\
  Before refactoring please make sure to commit any local changes and that the project builds with no errors.

group.ApolloToolsActionGroup.text=Apollo
group.ApolloToolsActionGroup.description=Apollo GraphQL

action.RefreshFieldInsightsAction.text=Fetch Field Latencies
action.RefreshFieldInsightsAction.description=Fetch field latencies from Apollo GraphOS
action.RefreshFieldInsightsAction.mustConfigureDialog.message=To fetch field latencies an Apollo GraphOS API key must be configured.
action.RefreshFieldInsightsAction.mustConfigureDialog.title=Apollo GraphOS Not Configured
action.RefreshFieldInsightsAction.mustConfigureDialog.ok=Open Settings
action.RefreshFieldInsightsAction.mustConfigureDialog.cancel=Cancel

ApolloMigrationRefactoringProcessor.codeReferences=Items to be migrated

ApolloV2ToV3MigrationProcessor.title=Migrate to Apollo Kotlin 3
ApolloV2ToV3MigrationProcessor.noUsage=No Apollo Android 2 references found in the project

ApolloV3ToV4MigrationProcessor.title=Migrate to Apollo Kotlin 4
ApolloV3ToV4MigrationProcessor.noUsage=No Apollo Android 3 references found in the project

settings.codegen.title=Code Generation
settings.codegen.automaticCodegenTriggering.text=Automatic code generation
settings.codegen.automaticCodegenTriggering.comment=Enabling this setting will run Gradle in continuous mode, similarly to \
  <code>./gradlew generateApolloSources --continuous</code>.<br>\
  This watches changes to your GraphQL files and re-generates models when they change.

settings.graphqlPlugin.title=GraphQL Plugin
settings.graphqlPlugin.contributeConfigurationToGraphqlPlugin.text=Contribute configuration to the GraphQL plugin
settings.graphqlPlugin.contributeConfigurationToGraphqlPlugin.comment=Allows the GraphQL plugin to be aware of the location of your GraphQL files. This invokes Gradle once per Apollo module when the project is opened, which may take a while if you have many modules.

settings.studio.title=Apollo GraphOS
settings.studio.apiKeys.needV4.message=Apollo GraphOS configuration is supported on projects using Apollo Kotlin v4 or later.
settings.studio.apiKeys.text=API keys
settings.studio.apiKeys.empty=No API keys
settings.studio.apiKeys.comment=API keys are used to authenticate with Apollo GraphOS. <a href=\"https://www.apollographql.com/docs/graphos/api-keys/\">Learn more</a>.
settings.studio.apiKeys.table.columnGradleProjectName=Gradle Project
settings.studio.apiKeys.table.columnApolloKotlinServiceName=Gradle Service
settings.studio.apiKeys.table.columnGraphOsApiKey=GraphOS API Key
settings.studio.apiKeys.table.columnGraphOsGraphName=GraphOS Graph ID

settings.studio.apiKeyDialog.title.add=Add API Key
settings.studio.apiKeyDialog.title.edit=API Key
settings.studio.apiKeyDialog.gradleProjectName.label=Gradle project:
settings.studio.apiKeyDialog.apolloKotlinServiceName.label=Gradle service:
settings.studio.apiKeyDialog.graphOsApiKey.label=GraphOS API key:
settings.studio.apiKeyDialog.graphOsApiKey.emptyText=service:graph:key
settings.studio.apiKeyDialog.graphOsApiKey.invalid=API key should look like <code>service:graph:key</code> or <code>user:id:key</code>
settings.studio.apiKeyDialog.graphOsGraphName.label=GraphOS graph ID:

GradleToolingModelService.fetchToolingModels.progress=Loading Apollo Kotlin configuration

CompatToOperationBasedCodegenMigrationProcessor.title=Migrate to operationBased Codegen
CompatToOperationBasedCodegenMigrationProcessor.noUsage=No compat codegen usage found in the project

SandboxService.OpenInSandboxAction.text=Open in Apollo Sandbox

inspection.group.graphql=GraphQL
inspection.group.graphql.studio=Apollo GraphOS
inspection.group.graphql.apolloKotlin=Apollo Kotlin
inspection.fieldInsights.displayName=High latency field
inspection.fieldInsights.reportText=<html><b><tt>{0}</tt></b> has a high latency: <b>{1}</b>
inspection.fieldInsights.settings.threshold=Threshold (ms)
inspection.fieldInsights.quickFix=Enclose in @defer fragment
inspection.schemaInGraphqlFile.displayName=Schema in .graphql file
inspection.schemaInGraphqlFile.reportText=<html>The Apollo Kotlin compiler requires type definitions to reside in a <tt>.graphqls</tt> file
inspection.schemaInGraphqlFile.quickFix=Rename file to {0}
inspection.unusedOperation.displayName=Unused operation
inspection.unusedOperation.reportText=Unused operation
inspection.unusedOperation.quickFix=Delete operation
inspection.unusedField.displayName=Unused field
inspection.unusedField.reportText=Unused field
inspection.unusedField.quickFix=Delete field
