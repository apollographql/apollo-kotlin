name=Apollo

navigation.GraphQLDefinitionMarkerProvider.tooltip={0} GraphQL definition
navigation.GraphQLDefinitionMarkerProvider.name=GraphQL definition

group.ApolloRefactorActionGroup.text=Apollo
group.ApolloRefactorActionGroup.description=Apollo GraphQL

action.ApolloV2ToV3MigrationAction.text=Migrate to Apollo Kotlin 3...
action.ApolloV2ToV3MigrationAction.description=Run helpers to migrate from Apollo Android 2 to Apollo Kotlin 3
action.ApolloV2ToV3MigrationAction.confirmDialog.title=Migrate to Apollo Kotlin 3
action.MigrationAction.confirmDialog.ok=Do Refactor
action.MigrationAction.confirmDialog.cancel=Cancel
action.ApolloV2ToV3MigrationAction.confirmDialog.message=This will migrate your project from <b>Apollo Android v2</b> to <b>Apollo Kotlin v3</b>.\n\
  \n\
  Some manual changes may still be needed after refactoring: please refer to the <a href=\"https://www.apollographql.com/docs/kotlin/migration/3.0/\">migration guide</a>.\n\
  \n\
  Before refactoring please make sure to commit any local changes and that the project builds with no errors.

action.ApolloV3ToV4MigrationAction.text=Migrate to Apollo Kotlin 4...
action.ApolloV3ToV4MigrationAction.description=Run helpers to migrate from Apollo Kotlin 3 to Apollo Kotlin 4
action.ApolloV3ToV4MigrationAction.confirmDialog.title=Migrate to Apollo Kotlin 4
action.ApolloV3ToV4MigrationAction.confirmDialog.message=This will migrate your project from <b>Apollo Kotlin v3</b> to <b>v4</b>.\n\
  \n\
  Some manual changes may still be needed after refactoring: please refer to the <a href=\"https://www.apollographql.com/docs/kotlin/migration/4.0/\">migration guide</a>.\n\
  \n\
  Before refactoring please make sure to commit any local changes and that the project builds with no errors.



action.CompatToOperationBasedCodegenMigrationAction.text=Migrate to operationBased Codegen...
action.CompatToOperationBasedCodegenMigrationAction.description=Run the helper to migrate from the compat to the operationBased codegen
action.CompatToOperationBasedCodegenMigrationAction.confirmDialog.title=Migrate to operationBased Codegen
action.CompatToOperationBasedCodegenMigrationAction.confirmDialog.message=This will migrate your project from using the <b>compat</b> to using the <b>operationBased</b> codegen.\n\
  \n\
  Some manual changes may still be needed after refactoring.\n\
  \n\
  Before refactoring please make sure to commit any local changes and that the project builds with no errors.

group.ApolloToolsActionGroup.text=Apollo
group.ApolloToolsActionGroup.description=Apollo GraphQL

action.RefreshFieldInsightsAction.text=Fetch Field Latencies
action.RefreshFieldInsightsAction.description=Fetch field latencies from Apollo GraphOS
action.RefreshFieldInsightsAction.mustConfigureDialog.message=To fetch field latencies an Apollo GraphOS API key must be configured.
action.RefreshFieldInsightsAction.mustConfigureDialog.title=Apollo GraphOS Not Configured
action.RefreshFieldInsightsAction.mustConfigureDialog.ok=Open Settings
action.RefreshFieldInsightsAction.mustConfigureDialog.cancel=Cancel

action.DownloadSchemaAction.text=Download Schema
action.DownloadSchemaAction.description=Download the latest schema(s) from introspection or registry as configured in the Apollo Gradle configuration
action.DownloadSchemaAction.progress=Downloading schema
action.DownloadSchemaAction.noTasksFound.title=Could not download schema
action.DownloadSchemaAction.noTasksFound.content=No download schema tasks were found. Please configure an <code>introspection</code> or <code>registry</code> in the Apollo Gradle configuration.
action.DownloadSchemaAction.openDocumentation=Open documentation
action.DownloadSchemaAction.buildFail.title=Could not download schema
action.DownloadSchemaAction.buildFail.content=Gradle task execution failed: ''{0}''.<br>Try on the command line with <code>./gradlew {1}</code> for more information.
action.DownloadSchemaAction.buildSuccess.content={0} downloaded successfully
action.DownloadSchemaAction.schema.singular=Schema
action.DownloadSchemaAction.schema.plural=Schemas

action.ShowNormalizedCacheToolWindowAction.text=Normalized Cache Viewer
action.ShowNormalizedCacheToolWindowAction.description=Open the normalized cache viewer tool window

group.ApolloInternalActionGroup.text=Internal

action.SendTelemetryAction.text=Send Telemetry

action.ThrowAction.text=Throw an Exception

action.GraphQLExecuteEditor.text=Execute GraphQL
action.GraphQLExecuteEditor.description=Executes the current GraphQL file against the specified GraphQL endpoint

action.OpenInSandboxAction.RevealInPopup.text=Apollo Sandbox

ApolloMigrationRefactoringProcessor.codeReferences=Items to be migrated

ApolloV2ToV3MigrationProcessor.title=Migrate to Apollo Kotlin 3
ApolloV2ToV3MigrationProcessor.noUsage=No Apollo Android 2 references found in the project

ApolloV3ToV4MigrationProcessor.title=Migrate to Apollo Kotlin 4
ApolloV3ToV4MigrationProcessor.noUsage=No Apollo Android 3 references found in the project

settings.codegen.title=Code Generation
settings.codegen.automaticCodegenTriggering.text=Automatic code generation
settings.codegen.automaticCodegenTriggering.comment=Enabling this setting will run Gradle in continuous mode, similarly to \
  <code>./gradlew generateApolloSources --continuous</code>.<br>\
  This watches changes to your GraphQL files and re-generates models when they change.

settings.graphqlPlugin.title=GraphQL Plugin
settings.graphqlPlugin.contributeConfigurationToGraphqlPlugin.text=Contribute configuration to the GraphQL plugin
settings.graphqlPlugin.contributeConfigurationToGraphqlPlugin.comment=Allows the GraphQL plugin to be aware of the location of your GraphQL files. This invokes Gradle once per Apollo module when the project is opened, which may take a while if you have many modules.

settings.studio.title=Apollo GraphOS
settings.studio.apiKeys.needV4.message=Apollo GraphOS configuration is supported on projects using Apollo Kotlin v4 or later.
settings.studio.apiKeys.text=API keys
settings.studio.apiKeys.empty=No API keys
settings.studio.apiKeys.comment=API keys are used to authenticate with Apollo GraphOS. <a href=\"https://www.apollographql.com/docs/graphos/api-keys/\">Learn more</a>.
settings.studio.apiKeys.table.columnGradleProjectName=Gradle Project
settings.studio.apiKeys.table.columnApolloKotlinServiceName=Gradle Service
settings.studio.apiKeys.table.columnGraphOsApiKey=GraphOS API Key
settings.studio.apiKeys.table.columnGraphOsGraphName=GraphOS Graph ID

settings.studio.apiKeyDialog.title.add=Add API Key
settings.studio.apiKeyDialog.title.edit=API Key
settings.studio.apiKeyDialog.gradleProjectName.label=Gradle project:
settings.studio.apiKeyDialog.apolloKotlinServiceName.label=Gradle service:
settings.studio.apiKeyDialog.graphOsApiKey.label=GraphOS API key:
settings.studio.apiKeyDialog.graphOsApiKey.emptyText=service:graph:key
settings.studio.apiKeyDialog.graphOsApiKey.invalid=API key should look like <code>service:graph:key</code> or <code>user:id:key</code>
settings.studio.apiKeyDialog.graphOsGraphName.label=GraphOS graph ID:

settings.telemetry.telemetryEnabled.text=Send usage statistics
settings.telemetry.telemetryEnabled.comment=Help improve Apollo Kotlin by sending anonymous data.<br>\
  Data includes Gradle plugin options, version of Android and Kotlin, number of modules in the project and other technical information. No personal data or sensitive information, such as source code or file names are included. For more details, consult our <a href=\"https://www.apollographql.com/docs/graphos/data-privacy/\">privacy policy</a>.

advanced.setting.apollo=Apollo Kotlin
advanced.setting.apollo.graphQLGoToDeclarationGeneratedCode=Enable navigation to generated code from GraphQL
advanced.setting.apollo.graphQLGoToDeclarationGeneratedCode.description=If enabled, "Go To Declaration" on GraphQL elements will include references to Apollo Kotlin generated code.


CompatToOperationBasedCodegenMigrationProcessor.title=Migrate to operationBased Codegen
CompatToOperationBasedCodegenMigrationProcessor.noUsage=No compat codegen usage found in the project

SandboxService.OpenInSandboxAction.text=Open in Apollo Sandbox

inspection.group.graphql=GraphQL
inspection.group.graphql.studio=Apollo GraphOS
inspection.group.graphql.apolloKotlin=Apollo Kotlin
inspection.fieldInsights.displayName=High latency field
inspection.fieldInsights.reportText=<html><b><tt>{0}</tt></b> has a high latency: <b>{1}</b>
inspection.fieldInsights.settings.threshold=Threshold (ms)
inspection.fieldInsights.quickFix=Enclose in @defer fragment
inspection.schemaInGraphqlFile.displayName=Schema in .graphql file
inspection.schemaInGraphqlFile.reportText=<html>The Apollo Kotlin compiler requires type definitions to reside in a <tt>.graphqls</tt> file
inspection.schemaInGraphqlFile.quickFix=Rename file to {0}
inspection.unusedOperation.displayName=Unused operation
inspection.unusedOperation.reportText=Unused operation
inspection.unusedOperation.quickFix=Delete operation
inspection.unusedField.displayName=Unused field
inspection.unusedField.reportText=Unused field
inspection.unusedField.quickFix.deleteField=Delete field
inspection.unusedField.quickFix.ignoreField=Ignore field {0}
inspection.unusedField.options.fieldsToIgnore.title=Ignored Fields
inspection.unusedField.options.fieldsToIgnore.label=Field coordinates to ignore (regexes):

inspection.apollo4Available.displayName=Apollo Kotlin 4 is available
inspection.apollo4Available.reportText=Apollo Kotlin 4 is available
inspection.apollo4Available.quickFix=Migrate to Apollo Kotlin 4
inspection.endpointNotConfigured.displayName=GraphQL endpoint not configured
inspection.endpointNotConfigured.reportText=GraphQL endpoint not configured
inspection.endpointNotConfigured.quickFix=Add introspection block

inspection.oneOfInputCreation.displayName=OneOf Input Object creation issue
inspection.oneOfInputCreation.reportText.constructor.wrongNumberOfArgs=<html><tt>@oneOf</tt> input class constructor must have exactly one argument
inspection.oneOfInputCreation.reportText.constructor.argIsAbsent=<html><tt>@oneOf</tt> input class argument must be <tt>Present</tt>
inspection.oneOfInputCreation.reportText.builder.wrongNumberOfArgs=<html><tt>@oneOf</tt> input class builder must have exactly one field set
inspection.oneOfInputCreation.reportText.builder.argIsNull=<html><tt>@oneOf</tt> input class argument must be non-null

inspection.inputConstructorNamedArgs.displayName=Input class constructor uses unamed arguments
inspection.inputConstructorNamedArgs.reportText=Input class constructor should use named arguments
inspection.inputConstructorNamedArgs.quickFix.addArgumentNames=Add names to call arguments
inspection.inputConstructorNamedArgs.quickFix.changeToBuilder=Change to builder construction

inspection.suppress.field=Suppress for field

intention.InputConstructorChangeToBuilder.name.editor=Change to builder construction
intention.InputConstructorChangeToBuilder.name.settings=Change input class constructor to builder

inspection.missingGraphQLDefinitionImport.displayName=Missing GraphQL import
inspection.missingGraphQLDefinitionImport.reportText.error=Unresolved {0}: {1}
inspection.missingGraphQLDefinitionImport.reportText.warning=Usage of implicit {0}: {1}
inspection.missingGraphQLDefinitionImport.reportText.directive=directive
inspection.missingGraphQLDefinitionImport.reportText.enum=enum
inspection.missingGraphQLDefinitionImport.reportText.input=input object
inspection.missingGraphQLDefinitionImport.reportText.scalar=scalar
inspection.missingGraphQLDefinitionImport.quickFix=Import {0} {1}

inspection.graphQLConfigFilePresent.displayName=GraphQL config file present
inspection.graphQLConfigFilePresent.reportText=The Apollo plugin retrieves the GraphQL configuration from Gradle and doesn't use the GraphQL config file
inspection.graphQLConfigFilePresent.quickFix=Delete the {0} file

inspection.oneOfGraphQLViolation.displayName=@oneOf GraphQL violation
inspection.oneOfGraphQLViolation.reportText.oneFieldMustBeSupplied=Exactly one field must be supplied to the OneOf input object "{0}"
inspection.oneOfGraphQLViolation.reportText.fieldMustNotBeNull=The field "{0}" supplied to the OneOf input object "{1}" must not be null
inspection.oneOfGraphQLViolation.reportText.variableMustBeNonNullType=The variable "{0}" of type "{1}" used in a OneOf input type must be a non-null type
inspection.more=More...


notification.group.apollo.main=Apollo
notification.group.apollo.telemetry=Apollo (telemetry)

telemetry.optOutDialog.title=Send usage statistics to Apollo
telemetry.optOutDialog.content=To improve Apollo Kotlin, the plugin sends anonymous data to Apollo, such as Gradle plugin options, version of Android and Kotlin, number of modules in the project and other technical information.<br>\
  No personal data or sensitive information, such as source code or file names are included.<br>\
  You can opt-out in the plugin's settings at any time.
telemetry.optOutDialog.optOut=Don't send
telemetry.optOutDialog.learnMore=Learn more

errorReport.actionText=Open GitHub Issue

toolwindow.stripe.NormalizedCacheViewer=Apollo Normalized Cache
normalizedCacheViewer.newTab=New Tab
normalizedCacheViewer.tabName.empty=Empty
normalizedCacheViewer.fields.column.key=Field Key
normalizedCacheViewer.fields.column.value=Value
normalizedCacheViewer.toolbar.expandAll=Expand all keys
normalizedCacheViewer.toolbar.collapseAll=Collapse all keys
normalizedCacheViewer.toolbar.back=Back
normalizedCacheViewer.toolbar.forward=Forward
normalizedCacheViewer.toolbar.refresh=Refresh
normalizedCacheViewer.empty.message=Open or drag and drop a normalized cache .db file.
normalizedCacheViewer.empty.openFile=Open file...
normalizedCacheViewer.empty.pullFromDevice=Pull from device
normalizedCacheViewer.records.table.key=Cache Key
normalizedCacheViewer.records.table.size=Size
normalizedCacheViewer.fields.list.empty=[empty]
normalizedCacheViewer.fields.list.single=[1 item]
normalizedCacheViewer.fields.list.multiple=[{0} items]
normalizedCacheViewer.fields.popupMenu.copyValue=Copy
normalizedCacheViewer.loading.message=Loading data...
normalizedCacheViewer.openFileError.title=Could not read normalized cache
normalizedCacheViewer.pullFromDevice.title=Pull from Device
normalizedCacheViewer.pullFromDevice.loading=Loading...
normalizedCacheViewer.pullFromDevice.listDevices.error=Could not list devices{0}
normalizedCacheViewer.pullFromDevice.listDevices.empty=No connected devices
normalizedCacheViewer.pullFromDevice.listDatabases.error=Error listing databases
normalizedCacheViewer.pullFromDevice.listDatabases.empty=No databases
normalizedCacheViewer.pullFromDevice.listDebuggablePackages.title=All packages
normalizedCacheViewer.pullFromDevice.listDebuggablePackages.error=Could not list debuggable apps
normalizedCacheViewer.pullFromDevice.listDebuggablePackages.empty=No debuggable apps
normalizedCacheViewer.pullFromDevice.listApolloClients.error=Error listing Apollo clients
normalizedCacheViewer.pullFromDevice.listApolloClients.empty=No Apollo clients
normalizedCacheViewer.pullFromDevice.apolloDebugNormalizedCache.records={0,choice, 0#no records|1#one record|2#{0,number} records}

tree.dynamicNode.loading=Loading...

graphql.hint.text.failed.to.parse.variables.as.json=Failed to parse variables as JSON:\n{0}
graphql.progress.title.executing.graphql=Executing GraphQL
graphql.query.result.window.bytes.count={0} bytes
graphql.query.result.statistics={0}: {1} ms execution time, {2} response
graphql.query.result.statistics.error=, {0} {1}
graphql.query.result.statistics.single.error=error
graphql.query.result.statistics.multiple.errors=errors

generatedSourcesFilter.notificationText=Apollo Kotlin generated source files should not be edited. The changes will be lost when sources are regenerated.
